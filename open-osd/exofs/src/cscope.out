cscope 15 /autofs/na3_techint/home/hs2/workspace/activefs/activeosd/open-osd/exofs/src               0000223053
	@common.h

36 #i‚de‡
__EXOFS_COM_H__


37 
	#__EXOFS_COM_H__


	)

39 
	~<löux/ty≥s.h
>

41 
	~<scsi/osd_©åibuãs.h
>

42 
	~<scsi/osd_öôüt‹.h
>

43 
	~<scsi/osd_£c.h
>

49 
	#EXOFS_MIN_PID
 0x10000

	)

50 
	#EXOFS_OBJ_OFF
 0x10000

	)

51 
	#EXOFS_SUPER_ID
 0x10000

	)

52 
	#EXOFS_ROOT_ID
 0x10002

	)

55 
	#EXOFS_APAGE_FS_DATA
 (
OSD_APAGE_APP_DEFINED_FIRST
 + 3)

	)

56 
	#EXOFS_ATTR_INODE_DATA
 1

	)

64 
	mEXOFS_MAX_INO_ID
 = ((
öo_t
Ë* 8 =64Ë? 
ULLONG_MAX
 :

65 (1ULL << ((
öo_t
) * 8ULL - 1ULL)),

66 
	mEXOFS_MAX_ID
 = (
EXOFS_MAX_INO_ID
 - 1 - 
EXOFS_OBJ_OFF
),

72 
	#EXOFS_BLKSHIFT
 12

	)

73 
	#EXOFS_BLKSIZE
 (1UL << 
EXOFS_BLKSHIFT
)

	)

78 
	#EXOFS_SUPER_MAGIC
 0x5DF5

	)

86 
	sexofs_fscb
 {

87 
__À64
 
	ms_√xtid
;

88 
__À32
 
	ms_numfûes
;

89 
__À16
 
	ms_magic
;

90 
__À16
 
	ms_√wfs
;

96 
	#EXOFS_IDATA
 5

	)

102 
	sexofs_fcb
 {

103 
__À64
 
	mi_size
;

104 
__À16
 
	mi_mode
;

105 
__À16
 
	mi_löks_cou¡
;

106 
__À32
 
	mi_uid
;

107 
__À32
 
	mi_gid
;

108 
__À32
 
	mi_©ime
;

109 
__À32
 
	mi_˘ime
;

110 
__À32
 
	mi_mtime
;

111 
__À32
 
	mi_Êags
;

112 
__À32
 
	mi_gíî©i⁄
;

113 
__À32
 
	mi_d©a
[
EXOFS_IDATA
];

116 
	#EXOFS_INO_ATTR_SIZE
 (
exofs_fcb
)

	)

119 c⁄° 
__wók
 
osd_©å
 
	gg_©å_öode_d©a
 = 
ATTR_DEF
(

120 
EXOFS_APAGE_FS_DATA
,

121 
EXOFS_ATTR_INODE_DATA
,

122 
EXOFS_INO_ATTR_SIZE
);

127 
	#EXOFS_NAME_LEN
 255

	)

132 
	sexofs_dú_íåy
 {

133 
__À64
 
	möode_no
;

134 
__À16
 
	mªc_Àn
;

135 
u8
 
	m«me_Àn
;

136 
u8
 
	mfûe_ty≥
;

137 
	m«me
[
EXOFS_NAME_LEN
];

141 
	mEXOFS_FT_UNKNOWN
,

142 
	mEXOFS_FT_REG_FILE
,

143 
	mEXOFS_FT_DIR
,

144 
	mEXOFS_FT_CHRDEV
,

145 
	mEXOFS_FT_BLKDEV
,

146 
	mEXOFS_FT_FIFO
,

147 
	mEXOFS_FT_SOCK
,

148 
	mEXOFS_FT_SYMLINK
,

149 
	mEXOFS_FT_MAX


152 
	#EXOFS_DIR_PAD
 4

	)

153 
	#EXOFS_DIR_ROUND
 (
EXOFS_DIR_PAD
 - 1)

	)

154 
	#EXOFS_DIR_REC_LEN
(
«me_Àn
) \

155 (((
«me_Àn
Ë+ 
	`off£tof
(
exofs_dú_íåy
, 
«me
) + \

156 
EXOFS_DIR_ROUND
Ë& ~EXOFS_DIR_ROUND)

	)

162 
exofs_make_¸edítül
(
u8
 
¸ed_a
[
OSD_CAP_LEN
],

163 c⁄° 
osd_obj_id
 *
obj
);

165 
exofs_check_ok_ªsid
(
osd_ªque°
 *
‹
, 
u64
 *
ö_ªsid
, u64 *
out_ªsid
);

166 
ölöe
 
	$exofs_check_ok
(
osd_ªque°
 *
‹
)

168  
	`exofs_check_ok_ªsid
(
‹
, 
NULL
, NULL);

169 
	}
}

170 
exofs_sync_›
(
osd_ªque°
 *
‹
, 
timeout
, 
u8
 *
¸ed
);

171 
exofs_async_›
(
osd_ªque°
 *
‹
,

172 
osd_ªq_d⁄e_‚
 *
async_d⁄e
, *
ˇŒî_c⁄ãxt
, 
u8
 *
¸ed
);

174 
exåa˘_©å_‰om_ªq
(
osd_ªque°
 *
‹
, 
osd_©å
 *
©å
);

	@dir.c

34 
	~"exofs.h
"

36 
ölöe
 
	$exofs_chunk_size
(
öode
 *inode)

38  
öode
->
i_sb
->
s_blocksize
;

39 
	}
}

41 
ölöe
 
	$exofs_put_∑ge
(
∑ge
 *page)

43 
	`kunm≠
(
∑ge
);

44 
	`∑ge_ˇche_ªÀa£
(
∑ge
);

45 
	}
}

48 
ölöe
 
	$dú_∑ges
(
öode
 *inode)

50  (
öode
->
i_size
 + 
PAGE_CACHE_SIZE
 - 1Ë>> 
PAGE_CACHE_SHIFT
;

51 
	}
}

53 
	$exofs_œ°_byã
(
öode
 *öode, 
∑ge_ƒ
)

55 
loff_t
 
œ°_byã
 = 
öode
->
i_size
;

57 
œ°_byã
 -
∑ge_ƒ
 << 
PAGE_CACHE_SHIFT
;

58 i‡(
œ°_byã
 > 
PAGE_CACHE_SIZE
)

59 
œ°_byã
 = 
PAGE_CACHE_SIZE
;

60  
œ°_byã
;

61 
	}
}

63 
	$exofs_commô_chunk
(
∑ge
 *∑ge, 
loff_t
 
pos
, 
Àn
)

65 
addªss_•a˚
 *
m≠pög
 = 
∑ge
->mapping;

66 
öode
 *
dú
 = 
m≠pög
->
ho°
;

67 
îr
 = 0;

69 
dú
->
i_vîsi⁄
++;

71 i‡(!
	`PageU±od©e
(
∑ge
))

72 
	`SëPageU±od©e
(
∑ge
);

74 i‡(
pos
+
Àn
 > 
dú
->
i_size
) {

75 
	`i_size_wrôe
(
dú
, 
pos
+
Àn
);

76 
	`m¨k_öode_dúty
(
dú
);

78 
	`£t_∑ge_dúty
(
∑ge
);

80 i‡(
	`IS_DIRSYNC
(
dú
))

81 
îr
 = 
	`wrôe_⁄e_∑ge
(
∑ge
, 1);

83 
	`u∆ock_∑ge
(
∑ge
);

85  
îr
;

86 
	}
}

88 
	$exofs_check_∑ge
(
∑ge
 *page)

90 
öode
 *
dú
 = 
∑ge
->
m≠pög
->
ho°
;

91 
chunk_size
 = 
	`exofs_chunk_size
(
dú
);

92 *
kaddr
 = 
	`∑ge_addªss
(
∑ge
);

93 
offs
, 
ªc_Àn
;

94 
limô
 = 
PAGE_CACHE_SIZE
;

95 
exofs_dú_íåy
 *
p
;

96 *
îr‹
;

99 i‡((
dú
->
i_size
 >> 
PAGE_CACHE_SHIFT
Ë=
∑ge
->
ödex
) {

100 
limô
 = 
dú
->
i_size
 & ~
PAGE_CACHE_MASK
;

101 i‡(
limô
 & (
chunk_size
 - 1))

102 
Ebadsize
;

103 i‡(!
limô
)

104 
out
;

106 
offs
 = 0; off†<
limô
 - 
	`EXOFS_DIR_REC_LEN
(1); off†+
ªc_Àn
) {

107 
p
 = (
exofs_dú_íåy
 *)(
kaddr
 + 
offs
);

108 
ªc_Àn
 = 
	`À16_to_˝u
(
p
->rec_len);

110 i‡(
ªc_Àn
 < 
	`EXOFS_DIR_REC_LEN
(1))

111 
Esh‹t
;

112 i‡(
ªc_Àn
 & 3)

113 
EÆign
;

114 i‡(
ªc_Àn
 < 
	`EXOFS_DIR_REC_LEN
(
p
->
«me_Àn
))

115 
E«mñí
;

116 i‡(((
offs
 + 
ªc_Àn
 - 1Ë^ offsË& ~(
chunk_size
-1))

117 
E•™
;

119 i‡(
offs
 !
limô
)

120 
Eíd
;

121 
out
:

122 
	`SëPageChecked
(
∑ge
);

125 
Ebadsize
:

126 
	`EXOFS_ERR
("ERROR [exofs_check_page]: "

128 
dú
->
i_öo


130 
Áû
;

131 
Esh‹t
:

132 
îr‹
 = "rec_len is smallerÅhan minimal";

133 
bad_íåy
;

134 
EÆign
:

135 
îr‹
 = "unaligned directoryÉntry";

136 
bad_íåy
;

137 
E«mñí
:

138 
îr‹
 = "rec_len isÅoo small forÇame_len";

139 
bad_íåy
;

140 
E•™
:

141 
îr‹
 = "directoryÉntryácross blocks";

142 
bad_íåy
;

143 
bad_íåy
:

144 
	`EXOFS_ERR
(

147 
dú
->
i_öo
, 
îr‹
, (
∑ge
->
ödex
<<
PAGE_CACHE_SHIFT
)+
offs
,

148 
	`_LLU
(
	`À64_to_˝u
(
p
->
öode_no
)),

149 
ªc_Àn
, 
p
->
«me_Àn
);

150 
Áû
;

151 
Eíd
:

152 
p
 = (
exofs_dú_íåy
 *)(
kaddr
 + 
offs
);

153 
	`EXOFS_ERR
("ERROR [exofs_check_page]: "

156 
dú
->
i_öo
, (
∑ge
->
ödex
<<
PAGE_CACHE_SHIFT
)+
offs
,

157 
	`_LLU
(
	`À64_to_˝u
(
p
->
öode_no
)));

158 
Áû
:

159 
	`SëPageChecked
(
∑ge
);

160 
	`SëPageEº‹
(
∑ge
);

161 
	}
}

163 
∑ge
 *
	$exofs_gë_∑ge
(
öode
 *
dú
, 
n
)

165 
addªss_•a˚
 *
m≠pög
 = 
dú
->
i_m≠pög
;

166 
∑ge
 *∑gê
	`ªad_m≠pög_∑ge
(
m≠pög
, 
n
, 
NULL
);

168 i‡(!
	`IS_ERR
(
∑ge
)) {

169 
	`km≠
(
∑ge
);

170 i‡(!
	`PageChecked
(
∑ge
))

171 
	`exofs_check_∑ge
(
∑ge
);

172 i‡(
	`PageEº‹
(
∑ge
))

173 
Áû
;

175  
∑ge
;

177 
Áû
:

178 
	`exofs_put_∑ge
(
∑ge
);

179  
	`ERR_PTR
(-
EIO
);

180 
	}
}

182 
ölöe
 
	$exofs_m©ch
(
Àn
, c⁄° *
«me
,

183 
exofs_dú_íåy
 *
de
)

185 i‡(
Àn
 !
de
->
«me_Àn
)

187 i‡(!
de
->
öode_no
)

189  !
	`memcmp
(
«me
, 
de
->«me, 
Àn
);

190 
	}
}

192 
ölöe


193 
exofs_dú_íåy
 *
	$exofs_√xt_íåy
(
exofs_dú_íåy
 *
p
)

195  (
exofs_dú_íåy
 *)((*)
p
 + 
	`À16_to_˝u
’->
ªc_Àn
));

196 
	}
}

198 
ölöe
 

199 
	$exofs_vÆid©e_íåy
(*
ba£
, 
off£t
, 
mask
)

201 
exofs_dú_íåy
 *
de
 = (exofs_dú_íåy *)(
ba£
 + 
off£t
);

202 
exofs_dú_íåy
 *
p
 =

203 (
exofs_dú_íåy
 *)(
ba£
 + (
off£t
&
mask
));

204 (*)
p
 < (*)
de
) {

205 i‡(
p
->
ªc_Àn
 == 0)

207 
p
 = 
	`exofs_√xt_íåy
(p);

209  (*)
p
 - 
ba£
;

210 
	}
}

212 
	gexofs_fûëy≥_èbÀ
[
EXOFS_FT_MAX
] = {

213 [
EXOFS_FT_UNKNOWN
] = 
DT_UNKNOWN
,

214 [
EXOFS_FT_REG_FILE
] = 
DT_REG
,

215 [
EXOFS_FT_DIR
] = 
DT_DIR
,

216 [
EXOFS_FT_CHRDEV
] = 
DT_CHR
,

217 [
EXOFS_FT_BLKDEV
] = 
DT_BLK
,

218 [
EXOFS_FT_FIFO
] = 
DT_FIFO
,

219 [
EXOFS_FT_SOCK
] = 
DT_SOCK
,

220 [
EXOFS_FT_SYMLINK
] = 
DT_LNK
,

223 
	#S_SHIFT
 12

	)

224 
	gexofs_ty≥_by_mode
[
S_IFMT
 >> 
S_SHIFT
] = {

225 [
S_IFREG
 >> 
S_SHIFT
] = 
EXOFS_FT_REG_FILE
,

226 [
S_IFDIR
 >> 
S_SHIFT
] = 
EXOFS_FT_DIR
,

227 [
S_IFCHR
 >> 
S_SHIFT
] = 
EXOFS_FT_CHRDEV
,

228 [
S_IFBLK
 >> 
S_SHIFT
] = 
EXOFS_FT_BLKDEV
,

229 [
S_IFIFO
 >> 
S_SHIFT
] = 
EXOFS_FT_FIFO
,

230 [
S_IFSOCK
 >> 
S_SHIFT
] = 
EXOFS_FT_SOCK
,

231 [
S_IFLNK
 >> 
S_SHIFT
] = 
EXOFS_FT_SYMLINK
,

234 
ölöe


235 
	$exofs_£t_de_ty≥
(
exofs_dú_íåy
 *
de
, 
öode
 *inode)

237 
mode_t
 
mode
 = 
öode
->
i_mode
;

238 
de
->
fûe_ty≥
 = 
exofs_ty≥_by_mode
[(
mode
 & 
S_IFMT
Ë>> 
S_SHIFT
];

239 
	}
}

242 
	$exofs_ªaddú
(
fûe
 *
fûp
, *
dúít
, 
fûldú_t
 
fûldú
)

244 
loff_t
 
pos
 = 
fûp
->
f_pos
;

245 
öode
 *öodê
fûp
->
f_∑th
.
díåy
->
d_öode
;

246 
off£t
 = 
pos
 & ~
PAGE_CACHE_MASK
;

247 
n
 = 
pos
 >> 
PAGE_CACHE_SHIFT
;

248 
≈ages
 = 
	`dú_∑ges
(
öode
);

249 
chunk_mask
 = ~(
	`exofs_chunk_size
(
öode
)-1);

250 *
ty≥s
 = 
NULL
;

251 
√ed_ªvÆid©e
 = (
fûp
->
f_vîsi⁄
 !
öode
->
i_vîsi⁄
);

253 i‡(
pos
 > 
öode
->
i_size
 - 
	`EXOFS_DIR_REC_LEN
(1))

256 
ty≥s
 = 
exofs_fûëy≥_èbÀ
;

258  ; 
n
 < 
≈ages
;Ç++, 
off£t
 = 0) {

259 *
kaddr
, *
limô
;

260 
exofs_dú_íåy
 *
de
;

261 
∑ge
 *∑gê
	`exofs_gë_∑ge
(
öode
, 
n
);

263 i‡(
	`IS_ERR
(
∑ge
)) {

264 
	`EXOFS_ERR
("ERROR: "

266 
öode
->
i_öo
);

267 
fûp
->
f_pos
 +
PAGE_CACHE_SIZE
 - 
off£t
;

268  
	`PTR_ERR
(
∑ge
);

270 
kaddr
 = 
	`∑ge_addªss
(
∑ge
);

271 i‡(
	`u∆ikñy
(
√ed_ªvÆid©e
)) {

272 i‡(
off£t
) {

273 
off£t
 = 
	`exofs_vÆid©e_íåy
(
kaddr
, offset,

274 
chunk_mask
);

275 
fûp
->
f_pos
 = (
n
<<
PAGE_CACHE_SHIFT
Ë+ 
off£t
;

277 
fûp
->
f_vîsi⁄
 = 
öode
->
i_vîsi⁄
;

278 
√ed_ªvÆid©e
 = 0;

280 
de
 = (
exofs_dú_íåy
 *)(
kaddr
 + 
off£t
);

281 
limô
 = 
kaddr
 + 
	`exofs_œ°_byã
(
öode
, 
n
) -

282 
	`EXOFS_DIR_REC_LEN
(1);

283 ; (*)
de
 <
limô
; dê
	`exofs_√xt_íåy
(de)) {

284 i‡(
de
->
ªc_Àn
 == 0) {

285 
	`EXOFS_ERR
("ERROR: "

287 
	`exofs_put_∑ge
(
∑ge
);

288  -
EIO
;

290 i‡(
de
->
öode_no
) {

291 
ovî
;

292 
d_ty≥
 = 
DT_UNKNOWN
;

294 i‡(
ty≥s
 && 
de
->
fûe_ty≥
 < 
EXOFS_FT_MAX
)

295 
d_ty≥
 = 
ty≥s
[
de
->
fûe_ty≥
];

297 
off£t
 = (*)
de
 - 
kaddr
;

298 
ovî
 = 
	`fûldú
(
dúít
, 
de
->
«me
, de->
«me_Àn
,

299 (
n
<<
PAGE_CACHE_SHIFT
Ë| 
off£t
,

300 
	`À64_to_˝u
(
de
->
öode_no
),

301 
d_ty≥
);

302 i‡(
ovî
) {

303 
	`exofs_put_∑ge
(
∑ge
);

307 
fûp
->
f_pos
 +
	`À16_to_˝u
(
de
->
ªc_Àn
);

309 
	`exofs_put_∑ge
(
∑ge
);

313 
	}
}

315 
exofs_dú_íåy
 *
	$exofs_föd_íåy
(
öode
 *
dú
,

316 
díåy
 *díåy, 
∑ge
 **
ªs_∑ge
)

318 c⁄° *
«me
 = 
díåy
->
d_«me
.name;

319 
«mñí
 = 
díåy
->
d_«me
.
Àn
;

320 
ª˛í
 = 
	`EXOFS_DIR_REC_LEN
(
«mñí
);

321 
°¨t
, 
n
;

322 
≈ages
 = 
	`dú_∑ges
(
dú
);

323 
∑ge
 *∑gê
NULL
;

324 
exofs_i_öfo
 *
oi
 = 
	`exofs_i
(
dú
);

325 
exofs_dú_íåy
 *
de
;

327 i‡(
≈ages
 == 0)

328 
out
;

330 *
ªs_∑ge
 = 
NULL
;

332 
°¨t
 = 
oi
->
i_dú_°¨t_lookup
;

333 i‡(
°¨t
 >
≈ages
)

334 
°¨t
 = 0;

335 
n
 = 
°¨t
;

337 *
kaddr
;

338 
∑ge
 = 
	`exofs_gë_∑ge
(
dú
, 
n
);

339 i‡(!
	`IS_ERR
(
∑ge
)) {

340 
kaddr
 = 
	`∑ge_addªss
(
∑ge
);

341 
de
 = (
exofs_dú_íåy
 *Ë
kaddr
;

342 
kaddr
 +
	`exofs_œ°_byã
(
dú
, 
n
Ë- 
ª˛í
;

343 (*Ë
de
 <
kaddr
) {

344 i‡(
de
->
ªc_Àn
 == 0) {

345 
	`EXOFS_ERR
(

348 
	`exofs_put_∑ge
(
∑ge
);

349 
out
;

351 i‡(
	`exofs_m©ch
(
«mñí
, 
«me
, 
de
))

352 
found
;

353 
de
 = 
	`exofs_√xt_íåy
(de);

355 
	`exofs_put_∑ge
(
∑ge
);

357 i‡(++
n
 >
≈ages
)

358 
n
 = 0;

359 } 
n
 !
°¨t
);

360 
out
:

361  
NULL
;

363 
found
:

364 *
ªs_∑ge
 = 
∑ge
;

365 
oi
->
i_dú_°¨t_lookup
 = 
n
;

366  
de
;

367 
	}
}

369 
exofs_dú_íåy
 *
	$exofs_dŸdŸ
(
öode
 *
dú
, 
∑ge
 **
p
)

371 
∑ge
 *∑gê
	`exofs_gë_∑ge
(
dú
, 0);

372 
exofs_dú_íåy
 *
de
 = 
NULL
;

374 i‡(!
	`IS_ERR
(
∑ge
)) {

375 
de
 = 
	`exofs_√xt_íåy
(

376 (
exofs_dú_íåy
 *)
	`∑ge_addªss
(
∑ge
));

377 *
p
 = 
∑ge
;

379  
de
;

380 
	}
}

382 
öo_t
 
	$exofs_∑ª¡_öo
(
díåy
 *
chûd
)

384 
∑ge
 *page;

385 
exofs_dú_íåy
 *
de
;

386 
öo_t
 
öo
;

388 
de
 = 
	`exofs_dŸdŸ
(
chûd
->
d_öode
, &
∑ge
);

389 i‡(!
de
)

392 
öo
 = 
	`À64_to_˝u
(
de
->
öode_no
);

393 
	`exofs_put_∑ge
(
∑ge
);

394  
öo
;

395 
	}
}

397 
öo_t
 
	$exofs_öode_by_«me
(
öode
 *
dú
, 
díåy
 *dentry)

399 
öo_t
 
ªs
 = 0;

400 
exofs_dú_íåy
 *
de
;

401 
∑ge
 *page;

403 
de
 = 
	`exofs_föd_íåy
(
dú
, 
díåy
, &
∑ge
);

404 i‡(
de
) {

405 
ªs
 = 
	`À64_to_˝u
(
de
->
öode_no
);

406 
	`exofs_put_∑ge
(
∑ge
);

408  
ªs
;

409 
	}
}

411 
	$exofs_£t_lök
(
öode
 *
dú
, 
exofs_dú_íåy
 *
de
,

412 
∑ge
 *∑ge, 
öode
 *inode)

414 
loff_t
 
pos
 = 
	`∑ge_off£t
(
∑ge
) +

415 (*Ë
de
 - (*Ë
	`∑ge_addªss
(
∑ge
);

416 
Àn
 = 
	`À16_to_˝u
(
de
->
ªc_Àn
);

417 
îr
;

419 
	`lock_∑ge
(
∑ge
);

420 
îr
 = 
	`exofs_wrôe_begö
(
NULL
, 
∑ge
->
m≠pög
, 
pos
, 
Àn
,

421 
AOP_FLAG_UNINTERRUPTIBLE
, &
∑ge
, 
NULL
);

422 i‡(
îr
)

423 
	`EXOFS_ERR
("exofs_set_link:Éxofs_write_begin FAILD => %d\n",

424 
îr
);

426 
de
->
öode_no
 = 
	`˝u_to_À64
(
öode
->
i_öo
);

427 
	`exofs_£t_de_ty≥
(
de
, 
öode
);

428 i‡(
	`likñy
(!
îr
))

429 
îr
 = 
	`exofs_commô_chunk
(
∑ge
, 
pos
, 
Àn
);

430 
	`exofs_put_∑ge
(
∑ge
);

431 
dú
->
i_mtime
 = dú->
i_˘ime
 = 
CURRENT_TIME
;

432 
	`m¨k_öode_dúty
(
dú
);

433  
îr
;

434 
	}
}

436 
	$exofs_add_lök
(
díåy
 *díåy, 
öode
 *inode)

438 
öode
 *
dú
 = 
díåy
->
d_∑ª¡
->
d_öode
;

439 c⁄° *
«me
 = 
díåy
->
d_«me
.name;

440 
«mñí
 = 
díåy
->
d_«me
.
Àn
;

441 
chunk_size
 = 
	`exofs_chunk_size
(
dú
);

442 
ª˛í
 = 
	`EXOFS_DIR_REC_LEN
(
«mñí
);

443 
ªc_Àn
, 
«me_Àn
;

444 
∑ge
 *∑gê
NULL
;

445 
exofs_sb_öfo
 *
sbi
 = 
öode
->
i_sb
->
s_fs_öfo
;

446 
exofs_dú_íåy
 *
de
;

447 
≈ages
 = 
	`dú_∑ges
(
dú
);

448 
n
;

449 *
kaddr
;

450 
loff_t
 
pos
;

451 
îr
;

453 
n
 = 0;Ç <
≈ages
;Ç++) {

454 *
dú_íd
;

456 
∑ge
 = 
	`exofs_gë_∑ge
(
dú
, 
n
);

457 
îr
 = 
	`PTR_ERR
(
∑ge
);

458 i‡(
	`IS_ERR
(
∑ge
))

459 
out
;

460 
	`lock_∑ge
(
∑ge
);

461 
kaddr
 = 
	`∑ge_addªss
(
∑ge
);

462 
dú_íd
 = 
kaddr
 + 
	`exofs_œ°_byã
(
dú
, 
n
);

463 
de
 = (
exofs_dú_íåy
 *)
kaddr
;

464 
kaddr
 +
PAGE_CACHE_SIZE
 - 
ª˛í
;

465 (*)
de
 <
kaddr
) {

466 i‡((*)
de
 =
dú_íd
) {

467 
«me_Àn
 = 0;

468 
ªc_Àn
 = 
chunk_size
;

469 
de
->
ªc_Àn
 = 
	`˝u_to_À16
(
chunk_size
);

470 
de
->
öode_no
 = 0;

471 
gŸ_ô
;

473 i‡(
de
->
ªc_Àn
 == 0) {

474 
	`EXOFS_ERR
("ERROR:Éxofs_add_link: "

476 
îr
 = -
EIO
;

477 
out_u∆ock
;

479 
îr
 = -
EEXIST
;

480 i‡(
	`exofs_m©ch
(
«mñí
, 
«me
, 
de
))

481 
out_u∆ock
;

482 
«me_Àn
 = 
	`EXOFS_DIR_REC_LEN
(
de
->name_len);

483 
ªc_Àn
 = 
	`À16_to_˝u
(
de
->rec_len);

484 i‡(!
de
->
öode_no
 && 
ªc_Àn
 >
ª˛í
)

485 
gŸ_ô
;

486 i‡(
ªc_Àn
 >
«me_Àn
 + 
ª˛í
)

487 
gŸ_ô
;

488 
de
 = (
exofs_dú_íåy
 *Ë((*Ëdê+ 
ªc_Àn
);

490 
	`u∆ock_∑ge
(
∑ge
);

491 
	`exofs_put_∑ge
(
∑ge
);

494 
	`EXOFS_ERR
("exofs_add_lök: BAD díåy=%∞‹ inode=%p", 
díåy
, 
öode
);

495  -
EINVAL
;

497 
gŸ_ô
:

498 
pos
 = 
	`∑ge_off£t
(
∑ge
) +

499 (*)
de
 - (*)
	`∑ge_addªss
(
∑ge
);

500 
îr
 = 
	`exofs_wrôe_begö
(
NULL
, 
∑ge
->
m≠pög
, 
pos
, 
ªc_Àn
, 0,

501 &
∑ge
, 
NULL
);

502 i‡(
îr
)

503 
out_u∆ock
;

504 i‡(
de
->
öode_no
) {

505 
exofs_dú_íåy
 *
de1
 =

506 (
exofs_dú_íåy
 *)((*)
de
 + 
«me_Àn
);

507 
de1
->
ªc_Àn
 = 
	`˝u_to_À16
‘ec_À¿- 
«me_Àn
);

508 
de
->
ªc_Àn
 = 
	`˝u_to_À16
(
«me_Àn
);

509 
de
 = 
de1
;

511 
de
->
«me_Àn
 = 
«mñí
;

512 
	`mem˝y
(
de
->
«me
,Çame, 
«mñí
);

513 
de
->
öode_no
 = 
	`˝u_to_À64
(
öode
->
i_öo
);

514 
	`exofs_£t_de_ty≥
(
de
, 
öode
);

515 
îr
 = 
	`exofs_commô_chunk
(
∑ge
, 
pos
, 
ªc_Àn
);

516 
dú
->
i_mtime
 = dú->
i_˘ime
 = 
CURRENT_TIME
;

517 
	`m¨k_öode_dúty
(
dú
);

518 
sbi
->
s_numfûes
++;

520 
out_put
:

521 
	`exofs_put_∑ge
(
∑ge
);

522 
out
:

523  
îr
;

524 
out_u∆ock
:

525 
	`u∆ock_∑ge
(
∑ge
);

526 
out_put
;

527 
	}
}

529 
	$exofs_dñëe_íåy
(
exofs_dú_íåy
 *
dú
, 
∑ge
 *page)

531 
addªss_•a˚
 *
m≠pög
 = 
∑ge
->mapping;

532 
öode
 *öodê
m≠pög
->
ho°
;

533 
exofs_sb_öfo
 *
sbi
 = 
öode
->
i_sb
->
s_fs_öfo
;

534 *
kaddr
 = 
	`∑ge_addªss
(
∑ge
);

535 
‰om
 = ((*)
dú
 - 
kaddr
Ë& ~(
	`exofs_chunk_size
(
öode
)-1);

536 
to
 = ((*)
dú
 - 
kaddr
Ë+ 
	`À16_to_˝u
(dú->
ªc_Àn
);

537 
loff_t
 
pos
;

538 
exofs_dú_íåy
 *
pde
 = 
NULL
;

539 
exofs_dú_íåy
 *
de
 = (exofs_dú_íåy *Ë(
kaddr
 + 
‰om
);

540 
îr
;

542 
de
 < 
dú
) {

543 i‡(
de
->
ªc_Àn
 == 0) {

544 
	`EXOFS_ERR
("ERROR:Éxofs_delete_entry:"

546 
îr
 = -
EIO
;

547 
out
;

549 
pde
 = 
de
;

550 
de
 = 
	`exofs_√xt_íåy
(de);

552 i‡(
pde
)

553 
‰om
 = (*)
pde
 - (*)
	`∑ge_addªss
(
∑ge
);

554 
pos
 = 
	`∑ge_off£t
(
∑ge
Ë+ 
‰om
;

555 
	`lock_∑ge
(
∑ge
);

556 
îr
 = 
	`exofs_wrôe_begö
(
NULL
, 
∑ge
->
m≠pög
, 
pos
, 
to
 - 
‰om
, 0,

557 &
∑ge
, 
NULL
);

558 i‡(
îr
)

559 
	`EXOFS_ERR
("exofs_delete_entry:Éxofs_write_begin FAILD => %d\n",

560 
îr
);

561 i‡(
pde
)

562 
pde
->
ªc_Àn
 = 
	`˝u_to_À16
(
to
 - 
‰om
);

563 
dú
->
öode_no
 = 0;

564 i‡(
	`likñy
(!
îr
))

565 
îr
 = 
	`exofs_commô_chunk
(
∑ge
, 
pos
, 
to
 - 
‰om
);

566 
öode
->
i_˘ime
 = inode->
i_mtime
 = 
CURRENT_TIME
;

567 
	`m¨k_öode_dúty
(
öode
);

568 
sbi
->
s_numfûes
--;

569 
out
:

570 
	`exofs_put_∑ge
(
∑ge
);

571  
îr
;

572 
	}
}

575 
	#THIS_DIR
 ".\0\0"

	)

576 
	#PARENT_DIR
 "..\0"

	)

578 
	$exofs_make_em±y
(
öode
 *öode, öodê*
∑ª¡
)

580 
addªss_•a˚
 *
m≠pög
 = 
öode
->
i_m≠pög
;

581 
∑ge
 *∑gê
	`gøb_ˇche_∑ge
(
m≠pög
, 0);

582 
chunk_size
 = 
	`exofs_chunk_size
(
öode
);

583 
exofs_dú_íåy
 *
de
;

584 
îr
;

585 *
kaddr
;

587 i‡(!
∑ge
)

588  -
ENOMEM
;

590 
îr
 = 
	`exofs_wrôe_begö
(
NULL
, 
∑ge
->
m≠pög
, 0, 
chunk_size
, 0,

591 &
∑ge
, 
NULL
);

592 i‡(
îr
) {

593 
	`u∆ock_∑ge
(
∑ge
);

594 
Áû
;

597 
kaddr
 = 
	`km≠_©omic
(
∑ge
, 
KM_USER0
);

598 
de
 = (
exofs_dú_íåy
 *)
kaddr
;

599 
de
->
«me_Àn
 = 1;

600 
de
->
ªc_Àn
 = 
	`˝u_to_À16
(
	`EXOFS_DIR_REC_LEN
(1));

601 
	`mem˝y
(
de
->
«me
, 
THIS_DIR
, (THIS_DIR));

602 
de
->
öode_no
 = 
	`˝u_to_À64
(
öode
->
i_öo
);

603 
	`exofs_£t_de_ty≥
(
de
, 
öode
);

605 
de
 = (
exofs_dú_íåy
 *)(
kaddr
 + 
	`EXOFS_DIR_REC_LEN
(1));

606 
de
->
«me_Àn
 = 2;

607 
de
->
ªc_Àn
 = 
	`˝u_to_À16
(
chunk_size
 - 
	`EXOFS_DIR_REC_LEN
(1));

608 
de
->
öode_no
 = 
	`˝u_to_À64
(
∑ª¡
->
i_öo
);

609 
	`mem˝y
(
de
->
«me
, 
PARENT_DIR
, (PARENT_DIR));

610 
	`exofs_£t_de_ty≥
(
de
, 
öode
);

611 
	`kunm≠_©omic
(
∑ge
, 
KM_USER0
);

612 
îr
 = 
	`exofs_commô_chunk
(
∑ge
, 0, 
chunk_size
);

613 
Áû
:

614 
	`∑ge_ˇche_ªÀa£
(
∑ge
);

615  
îr
;

616 
	}
}

618 
	$exofs_em±y_dú
(
öode
 *inode)

620 
∑ge
 *∑gê
NULL
;

621 
i
, 
≈ages
 = 
	`dú_∑ges
(
öode
);

623 
i
 = 0; i < 
≈ages
; i++) {

624 *
kaddr
;

625 
exofs_dú_íåy
 *
de
;

626 
∑ge
 = 
	`exofs_gë_∑ge
(
öode
, 
i
);

628 i‡(
	`IS_ERR
(
∑ge
))

631 
kaddr
 = 
	`∑ge_addªss
(
∑ge
);

632 
de
 = (
exofs_dú_íåy
 *)
kaddr
;

633 
kaddr
 +
	`exofs_œ°_byã
(
öode
, 
i
Ë- 
	`EXOFS_DIR_REC_LEN
(1);

635 (*)
de
 <
kaddr
) {

636 i‡(
de
->
ªc_Àn
 == 0) {

637 
	`EXOFS_ERR
("ERROR:Éxofs_empty_dir: "

639 "kaddr=%p, de=%p\n", 
kaddr
, 
de
);

640 
nŸ_em±y
;

642 i‡(
de
->
öode_no
 != 0) {

644 i‡(
de
->
«me
[0] != '.')

645 
nŸ_em±y
;

646 i‡(
de
->
«me_Àn
 > 2)

647 
nŸ_em±y
;

648 i‡(
de
->
«me_Àn
 < 2) {

649 i‡(
	`À64_to_˝u
(
de
->
öode_no
) !=

650 
öode
->
i_öo
)

651 
nŸ_em±y
;

652 } i‡(
de
->
«me
[1] != '.')

653 
nŸ_em±y
;

655 
de
 = 
	`exofs_√xt_íåy
(de);

657 
	`exofs_put_∑ge
(
∑ge
);

661 
nŸ_em±y
:

662 
	`exofs_put_∑ge
(
∑ge
);

664 
	}
}

666 c⁄° 
fûe_›î©i⁄s
 
	gexofs_dú_›î©i⁄s
 = {

667 .
Œ£ek
 = 
gíîic_fûe_Œ£ek
,

668 .
	gªad
 = 
gíîic_ªad_dú
,

669 .
	gªaddú
 = 
exofs_ªaddú
,

	@exofs.h

34 
	~<löux/fs.h
>

35 
	~<löux/time.h
>

36 
	~"comm⁄.h
"

38 #i‚de‡
__EXOFS_H__


39 
	#__EXOFS_H__


	)

41 
	#EXOFS_ERR
(
fmt
, 
a
...Ë
	`¥ötk
(
KERN_ERR
 "exofs: " fmt, ##a)

	)

43 #ifde‡
CONFIG_EXOFS_DEBUG


44 
	#EXOFS_DBGMSG
(
fmt
, 
a
...) \

45 
	`¥ötk
(
KERN_NOTICE
 "exof†@%s:%d: " 
fmt
, 
__func__
, 
__LINE__
, ##
a
)

	)

47 
	#EXOFS_DBGMSG
(
fmt
, 
a
...) \

48 dÿ{ i‡(0Ë
	`¥ötk
(
fmt
, ##
a
); } 0)

	)

52 
	#_LLU
(
x
Ë()(x)

	)

57 
	sexofs_sb_öfo
 {

58 
osd_dev
 *
	ms_dev
;

59 
osd_id
 
	ms_pid
;

60 
	ms_timeout
;

61 
uöt64_t
 
	ms_√xtid
;

62 
uöt32_t
 
	ms_numfûes
;

63 
•ölock_t
 
	ms_√xt_gí_lock
;

64 
u32
 
	ms_√xt_gíî©i⁄
;

65 
©omic_t
 
	ms_cuº_≥ndög
;

66 
uöt8_t
 
	ms_¸ed
[
OSD_CAP_LEN
];

72 
	sexofs_i_öfo
 {

73 
	mi_Êags
;

74 
uöt32_t
 
	mi_d©a
[
EXOFS_IDATA
];

75 
uöt32_t
 
	mi_dú_°¨t_lookup
;

76 
waô_queue_hód_t
 
	mi_wq
;

77 
uöt64_t
 
	mi_commô_size
;

78 
uöt8_t
 
	mi_¸ed
[
OSD_CAP_LEN
];

79 
öode
 
	mvfs_öode
;

85 
	#OBJ_2BCREATED
 0

	)

86 
	#OBJ_CREATED
 1

	)

88 
ölöe
 
	$obj_2b¸óãd
(
exofs_i_öfo
 *
oi
)

90  
	`ã°_bô
(
OBJ_2BCREATED
, &
oi
->
i_Êags
);

91 
	}
}

93 
ölöe
 
	$£t_obj_2b¸óãd
(
exofs_i_öfo
 *
oi
)

95 
	`£t_bô
(
OBJ_2BCREATED
, &
oi
->
i_Êags
);

96 
	}
}

98 
ölöe
 
	$obj_¸óãd
(
exofs_i_öfo
 *
oi
)

100  
	`ã°_bô
(
OBJ_CREATED
, &
oi
->
i_Êags
);

101 
	}
}

103 
ölöe
 
	$£t_obj_¸óãd
(
exofs_i_öfo
 *
oi
)

105 
	`£t_bô
(
OBJ_CREATED
, &
oi
->
i_Êags
);

106 
	}
}

108 
__exofs_waô_obj_¸óãd
(
exofs_i_öfo
 *
oi
);

109 
ölöe
 
	$waô_obj_¸óãd
(
exofs_i_öfo
 *
oi
)

111 i‡(
	`likñy
(
	`obj_¸óãd
(
oi
)))

114  
	`__exofs_waô_obj_¸óãd
(
oi
);

115 
	}
}

120 
ölöe
 
exofs_i_öfo
 *
	$exofs_i
(
öode
 *inode)

122  
	`c⁄èöî_of
(
öode
, 
exofs_i_öfo
, 
vfs_öode
);

123 
	}
}

128 
	#EXOFS_LINK_MAX
 32000

	)

134 
exofs_åunˇã
(
öode
 *inode);

135 
exofs_£èâr
(
díåy
 *, 
üâr
 *);

136 
exofs_wrôe_begö
(
fûe
 *fûe, 
addªss_•a˚
 *
m≠pög
,

137 
loff_t
 
pos
, 
Àn
, 
Êags
,

138 
∑ge
 **
∑gï
, **
fsd©a
);

139 
öode
 *
exofs_igë
(
su≥r_block
 *, );

140 
öode
 *
exofs_√w_öode
(inode *, );

141 
exofs_wrôe_öode
(
öode
 *, );

142 
exofs_dñëe_öode
(
öode
 *);

145 
exofs_add_lök
(
díåy
 *, 
öode
 *);

146 
öo_t
 
exofs_öode_by_«me
(
öode
 *, 
díåy
 *);

147 
exofs_dñëe_íåy
(
exofs_dú_íåy
 *, 
∑ge
 *);

148 
exofs_make_em±y
(
öode
 *, inode *);

149 
exofs_dú_íåy
 *
exofs_föd_íåy
(
öode
 *, 
díåy
 *,

150 
∑ge
 **);

151 
exofs_em±y_dú
(
öode
 *);

152 
exofs_dú_íåy
 *
exofs_dŸdŸ
(
öode
 *, 
∑ge
 **);

153 
öo_t
 
exofs_∑ª¡_öo
(
díåy
 *
chûd
);

154 
exofs_£t_lök
(
öode
 *, 
exofs_dú_íåy
 *, 
∑ge
 *,

155 
öode
 *);

158 
exofs_sync_fs
(
su≥r_block
 *
sb
, 
waô
);

164 c⁄° 
fûe_›î©i⁄s
 
exofs_dú_›î©i⁄s
;

167 c⁄° 
öode_›î©i⁄s
 
exofs_fûe_öode_›î©i⁄s
;

168 c⁄° 
fûe_›î©i⁄s
 
exofs_fûe_›î©i⁄s
;

171 c⁄° 
addªss_•a˚_›î©i⁄s
 
exofs_a›s
;

174 c⁄° 
öode_›î©i⁄s
 
exofs_dú_öode_›î©i⁄s
;

175 c⁄° 
öode_›î©i⁄s
 
exofs_•ecül_öode_›î©i⁄s
;

178 c⁄° 
öode_›î©i⁄s
 
exofs_symlök_öode_›î©i⁄s
;

179 c⁄° 
öode_›î©i⁄s
 
exofs_Á°_symlök_öode_›î©i⁄s
;

	@file.c

34 
	~<löux/buf„r_hód.h
>

36 
	~"exofs.h
"

38 
	$exofs_ªÀa£_fûe
(
öode
 *öode, 
fûe
 *
fûp
)

41 
	}
}

43 
	$exofs_fûe_fsync
(
fûe
 *
fûp
, 
díåy
 *dentry,

44 
d©async
)

46 
ªt
;

47 
addªss_•a˚
 *
m≠pög
 = 
fûp
->
f_m≠pög
;

48 
öode
 *öodê
díåy
->
d_öode
;

49 
su≥r_block
 *
sb
;

51 
ªt
 = 
	`fûem≠_wrôe_™d_waô
(
m≠pög
);

52 i‡(
ªt
)

53  
ªt
;

56 
ªt
 = 
	`wrôe_öode_now
(
öode
, 1);

60 
sb
 = 
öode
->
i_sb
;

61 i‡(
sb
->
s_dút
)

62 
	`exofs_sync_fs
(
sb
, 1);

64  
ªt
;

65 
	}
}

67 
	$exofs_Êush
(
fûe
 *fûe, 
Ê_ow√r_t
 
id
)

69 
	`exofs_fûe_fsync
(
fûe
, fûe->
f_∑th
.
díåy
, 1);

72 
	}
}

74 c⁄° 
fûe_›î©i⁄s
 
	gexofs_fûe_›î©i⁄s
 = {

75 .
Œ£ek
 = 
gíîic_fûe_Œ£ek
,

76 .
	gªad
 = 
do_sync_ªad
,

77 .
	gwrôe
 = 
do_sync_wrôe
,

78 .
	gaio_ªad
 = 
gíîic_fûe_aio_ªad
,

79 .
	gaio_wrôe
 = 
gíîic_fûe_aio_wrôe
,

80 .
	gmm≠
 = 
gíîic_fûe_mm≠
,

81 .
	g›í
 = 
gíîic_fûe_›í
,

82 .
	gªÀa£
 = 
exofs_ªÀa£_fûe
,

83 .
	gfsync
 = 
exofs_fûe_fsync
,

84 .
	gÊush
 = 
exofs_Êush
,

85 .
	g•li˚_ªad
 = 
gíîic_fûe_•li˚_ªad
,

86 .
	g•li˚_wrôe
 = 
gíîic_fûe_•li˚_wrôe
,

89 c⁄° 
öode_›î©i⁄s
 
	gexofs_fûe_öode_›î©i⁄s
 = {

90 .
åunˇã
 = 
exofs_åunˇã
,

91 .
	g£èâr
 = 
exofs_£èâr
,

	@inode.c

34 
	~<löux/wrôeback.h
>

35 
	~<löux/buf„r_hód.h
>

36 
	~<scsi/scsi_devi˚.h
>

38 
	~"exofs.h
"

40 #ifde‡
CONFIG_EXOFS_DEBUG


41 
	#EXOFS_DEBUG_OBJ_ISIZE
 1

	)

44 
	s∑ge_cﬁÀ˘
 {

45 
exofs_sb_öfo
 *
	msbi
;

46 
ªque°_queue
 *
	mªq_q
;

47 
öode
 *
	möode
;

48 
	mex≥˘ed_∑ges
;

50 
bio
 *
	mbio
;

51 
	mƒ_∑ges
;

52 
	mÀngth
;

53 
loff_t
 
	mpg_fú°
;

56 
	$_pcﬁ_öô
(
∑ge_cﬁÀ˘
 *
pcﬁ
, 
ex≥˘ed_∑ges
,

57 
öode
 *inode)

59 
exofs_sb_öfo
 *
sbi
 = 
öode
->
i_sb
->
s_fs_öfo
;

61 
pcﬁ
->
sbi
 = sbi;

62 
pcﬁ
->
ªq_q
 = 
	`osd_ªque°_queue
(
sbi
->
s_dev
);

63 
pcﬁ
->
öode
 = inode;

64 
pcﬁ
->
ex≥˘ed_∑ges
 =Éxpected_pages;

66 
pcﬁ
->
bio
 = 
NULL
;

67 
pcﬁ
->
ƒ_∑ges
 = 0;

68 
pcﬁ
->
Àngth
 = 0;

69 
pcﬁ
->
pg_fú°
 = -1;

71 
	`EXOFS_DBGMSG
("_pcﬁ_öô ino=0x%lxÉx≥˘ed_∑ges=%u\n", 
öode
->
i_öo
,

72 
ex≥˘ed_∑ges
);

73 
	}
}

75 
	$_pcﬁ_ª£t
(
∑ge_cﬁÀ˘
 *
pcﬁ
)

77 
pcﬁ
->
ex≥˘ed_∑ges
 -
	`mö
’cﬁ->
ƒ_∑ges
,Öcol->expected_pages);

79 
pcﬁ
->
bio
 = 
NULL
;

80 
pcﬁ
->
ƒ_∑ges
 = 0;

81 
pcﬁ
->
Àngth
 = 0;

82 
pcﬁ
->
pg_fú°
 = -1;

83 
	`EXOFS_DBGMSG
("_pcol_reset ino=0x%lxÉxpected_pages=%u\n",

84 
pcﬁ
->
öode
->
i_öo
,Öcﬁ->
ex≥˘ed_∑ges
);

89 i‡(!
pcﬁ
->
ex≥˘ed_∑ges
)

90 
pcﬁ
->
ex≥˘ed_∑ges
 = 128;

91 
	}
}

93 
	$pcﬁ_åy_Æloc
(
∑ge_cﬁÀ˘
 *
pcﬁ
)

95 
∑ges
 = 
	`mö_t
(, 
pcﬁ
->
ex≥˘ed_∑ges
, 
BIO_MAX_PAGES
);

97 ; 
∑ges
;Öages >>= 1) {

98 
pcﬁ
->
bio
 = 
	`bio_Æloc
(
GFP_KERNEL
, 
∑ges
);

99 i‡(
	`likñy
(
pcﬁ
->
bio
))

103 
	`EXOFS_ERR
("FailedÅo kcallocÉxpected_pages=%u\n",

104 
pcﬁ
->
ex≥˘ed_∑ges
);

105  -
ENOMEM
;

106 
	}
}

108 
	$pcﬁ_‰ì
(
∑ge_cﬁÀ˘
 *
pcﬁ
)

110 
	`bio_put
(
pcﬁ
->
bio
);

111 
pcﬁ
->
bio
 = 
NULL
;

112 
	}
}

114 
	$pcﬁ_add_∑ge
(
∑ge_cﬁÀ˘
 *
pcﬁ
, 
∑ge
 *page,

115 
Àn
)

117 
added_Àn
 = 
	`bio_add_pc_∑ge
(
pcﬁ
->
ªq_q
,Öcﬁ->
bio
, 
∑ge
, 
Àn
, 0);

118 i‡(
	`u∆ikñy
(
Àn
 !
added_Àn
))

119  -
ENOMEM
;

121 ++
pcﬁ
->
ƒ_∑ges
;

122 
pcﬁ
->
Àngth
 +
Àn
;

124 
	}
}

126 
	$upd©e_ªad_∑ge
(
∑ge
 *∑ge, 
ªt
)

128 i‡(
ªt
 == 0) {

130 
	`SëPageU±od©e
(
∑ge
);

131 i‡(
	`PageEº‹
(
∑ge
))

132 
	`CÀ¨PageEº‹
(
∑ge
);

133 } i‡(
ªt
 =-
EFAULT
) {

139 
	`˛ór_high∑ge
(
∑ge
);

141 
	`SëPageU±od©e
(
∑ge
);

142 i‡(
	`PageEº‹
(
∑ge
))

143 
	`CÀ¨PageEº‹
(
∑ge
);

144 
ªt
 = 0;

145 
	`EXOFS_DBGMSG
("recoveredÑeadÉrror\n");

147 
	`SëPageEº‹
(
∑ge
);

149  
ªt
;

150 
	}
}

152 
	$upd©e_wrôe_∑ge
(
∑ge
 *∑ge, 
ªt
)

154 i‡(
ªt
) {

155 
	`m≠pög_£t_îr‹
(
∑ge
->
m≠pög
, 
ªt
);

156 
	`SëPageEº‹
(
∑ge
);

158 
	`íd_∑ge_wrôeback
(
∑ge
);

159 
	}
}

164 
	$__ªad∑ges_d⁄e
(
osd_ªque°
 *
‹
, 
∑ge_cﬁÀ˘
 *
pcﬁ
,

165 
boﬁ
 
do_u∆ock
)

167 
bio_vec
 *
bvec
;

168 
i
;

169 
u64
 
ªsid
;

170 
u64
 
good_byãs
;

171 
u64
 
Àngth
 = 0;

172 
ªt
 = 
	`exofs_check_ok_ªsid
(
‹
, &
ªsid
, 
NULL
);

174 
	`osd_íd_ªque°
(
‹
);

176 i‡(
	`likñy
(!
ªt
))

177 
good_byãs
 = 
pcﬁ
->
Àngth
;

178 i‡(!
ªsid
)

179 
good_byãs
 = 0;

181 
good_byãs
 = 
pcﬁ
->
Àngth
 - 
ªsid
;

183 
	`EXOFS_DBGMSG
("readpages_done(0x%lx) good_bytes=0x%llx"

185 
pcﬁ
->
öode
->
i_öo
, 
	`_LLU
(
good_byãs
),Öcﬁ->
Àngth
,

186 
pcﬁ
->
ƒ_∑ges
);

188 
	`__bio_f‹_óch_£gmít
(
bvec
, 
pcﬁ
->
bio
, 
i
, 0) {

189 
∑ge
 *∑gê
bvec
->
bv_∑ge
;

190 
öode
 *öodê
∑ge
->
m≠pög
->
ho°
;

191 
∑ge_°©
;

193 i‡(
öode
 !
pcﬁ
->inode)

196 i‡(
	`likñy
(
Àngth
 < 
good_byãs
))

197 
∑ge_°©
 = 0;

199 
∑ge_°©
 = 
ªt
;

201 
	`EXOFS_DBGMSG
("Ñeadpages_done(0x%lx, 0x%lx) %s\n",

202 
öode
->
i_öo
, 
∑ge
->
ödex
,

203 
∑ge_°©
 ? "bad_bytes" : "good_bytes");

205 
ªt
 = 
	`upd©e_ªad_∑ge
(
∑ge
, 
∑ge_°©
);

206 i‡(
do_u∆ock
)

207 
	`u∆ock_∑ge
(
∑ge
);

208 
Àngth
 +
bvec
->
bv_Àn
;

211 
	`pcﬁ_‰ì
(
pcﬁ
);

212 
	`EXOFS_DBGMSG
("readpages_done END\n");

213  
ªt
;

214 
	}
}

217 
	$ªad∑ges_d⁄e
(
osd_ªque°
 *
‹
, *
p
)

219 
∑ge_cﬁÀ˘
 *
pcﬁ
 = 
p
;

221 
	`__ªad∑ges_d⁄e
(
‹
, 
pcﬁ
, 
åue
);

222 
	`©omic_dec
(&
pcﬁ
->
sbi
->
s_cuº_≥ndög
);

223 
	`k‰ì
(
p
);

224 
	}
}

226 
	$_u∆ock_pcﬁ_∑ges
(
∑ge_cﬁÀ˘
 *
pcﬁ
, 
ªt
, 
rw
)

228 
bio_vec
 *
bvec
;

229 
i
;

231 
	`__bio_f‹_óch_£gmít
(
bvec
, 
pcﬁ
->
bio
, 
i
, 0) {

232 
∑ge
 *∑gê
bvec
->
bv_∑ge
;

234 i‡(
rw
 =
READ
)

235 
	`upd©e_ªad_∑ge
(
∑ge
, 
ªt
);

237 
	`upd©e_wrôe_∑ge
(
∑ge
, 
ªt
);

239 
	`u∆ock_∑ge
(
∑ge
);

241 
	`pcﬁ_‰ì
(
pcﬁ
);

242 
	}
}

244 
	$ªad_exec
(
∑ge_cﬁÀ˘
 *
pcﬁ
, 
boﬁ
 
is_sync
)

246 
exofs_i_öfo
 *
oi
 = 
	`exofs_i
(
pcﬁ
->
öode
);

247 
osd_obj_id
 
obj
 = {
pcﬁ
->
sbi
->
s_pid
,

248 
pcﬁ
->
öode
->
i_öo
 + 
EXOFS_OBJ_OFF
};

249 
osd_ªque°
 *
‹
 = 
NULL
;

250 
∑ge_cﬁÀ˘
 *
pcﬁ_c›y
 = 
NULL
;

251 
loff_t
 
i_°¨t
 = 
pcﬁ
->
pg_fú°
 << 
PAGE_CACHE_SHIFT
;

252 
ªt
;

254 i‡(!
pcﬁ
->
bio
)

258 
	`WARN_ON
(
is_sync
 && (
pcﬁ
->
ƒ_∑ges
 != 1));

260 
‹
 = 
	`osd_°¨t_ªque°
(
pcﬁ
->
sbi
->
s_dev
, 
GFP_KERNEL
);

261 i‡(
	`u∆ikñy
(!
‹
)) {

262 
ªt
 = -
ENOMEM
;

263 
îr
;

266 
	`osd_ªq_ªad
(
‹
, &
obj
, 
i_°¨t
, 
pcﬁ
->
bio
,Öcﬁ->
Àngth
);

268 i‡(
is_sync
) {

269 
	`exofs_sync_›
(
‹
, 
pcﬁ
->
sbi
->
s_timeout
, 
oi
->
i_¸ed
);

270  
	`__ªad∑ges_d⁄e
(
‹
, 
pcﬁ
, 
Ál£
);

273 
pcﬁ_c›y
 = 
	`kmÆloc
((*pcﬁ_c›y), 
GFP_KERNEL
);

274 i‡(!
pcﬁ_c›y
) {

275 
ªt
 = -
ENOMEM
;

276 
îr
;

279 *
pcﬁ_c›y
 = *
pcﬁ
;

280 
ªt
 = 
	`exofs_async_›
(
‹
, 
ªad∑ges_d⁄e
, 
pcﬁ_c›y
, 
oi
->
i_¸ed
);

281 i‡(
	`u∆ikñy
(
ªt
))

282 
îr
;

284 
	`©omic_öc
(&
pcﬁ
->
sbi
->
s_cuº_≥ndög
);

286 
	`EXOFS_DBGMSG
("read_exec obj=0x%llx start=0x%llxÜength=0x%lx\n",

287 
obj
.
id
, 
	`_LLU
(
i_°¨t
), 
pcﬁ
->
Àngth
);

290 
	`_pcﬁ_ª£t
(
pcﬁ
);

293 
îr
:

294 i‡(!
is_sync
)

295 
	`_u∆ock_pcﬁ_∑ges
(
pcﬁ
, 
ªt
, 
READ
);

297 
	`pcﬁ_‰ì
(
pcﬁ
);

299 
	`k‰ì
(
pcﬁ_c›y
);

300 i‡(
‹
)

301 
	`osd_íd_ªque°
(
‹
);

302  
ªt
;

303 
	}
}

312 
	$ªad∑ge_°rù
(*
d©a
, 
∑ge
 *page)

314 
∑ge_cﬁÀ˘
 *
pcﬁ
 = 
d©a
;

315 
öode
 *öodê
pcﬁ
->inode;

316 
exofs_i_öfo
 *
oi
 = 
	`exofs_i
(
öode
);

317 
loff_t
 
i_size
 = 
	`i_size_ªad
(
öode
);

318 
pgoff_t
 
íd_ödex
 = 
i_size
 >> 
PAGE_CACHE_SHIFT
;

319 
size_t
 
Àn
;

320 
ªt
;

323 i‡(
	`PageU±od©e
(
∑ge
))

324 
	`EXOFS_ERR
("PageU±od©e(0x%lx, 0x%lx)\n", 
pcﬁ
->
öode
->
i_öo
,

325 
∑ge
->
ödex
);

327 i‡(
∑ge
->
ödex
 < 
íd_ödex
)

328 
Àn
 = 
PAGE_CACHE_SIZE
;

329 i‡(
∑ge
->
ödex
 =
íd_ödex
)

330 
Àn
 = 
i_size
 & ~
PAGE_CACHE_MASK
;

332 
Àn
 = 0;

334 i‡(!
Àn
 || !
	`obj_¸óãd
(
oi
)) {

338 
	`˛ór_high∑ge
(
∑ge
);

340 
	`SëPageU±od©e
(
∑ge
);

341 i‡(
	`PageEº‹
(
∑ge
))

342 
	`CÀ¨PageEº‹
(
∑ge
);

344 
	`u∆ock_∑ge
(
∑ge
);

345 
	`EXOFS_DBGMSG
("readpage_strip(0x%lx, 0x%lx)ÉmptyÖage,"

346 " s∂ôtög\n", 
öode
->
i_öo
, 
∑ge
->
ödex
);

348  
	`ªad_exec
(
pcﬁ
, 
Ál£
);

351 
åy_agaö
:

353 i‡(
	`u∆ikñy
(
pcﬁ
->
pg_fú°
 == -1)) {

354 
pcﬁ
->
pg_fú°
 = 
∑ge
->
ödex
;

355 } i‡(
	`u∆ikñy
((
pcﬁ
->
pg_fú°
 +Öcﬁ->
ƒ_∑ges
) !=

356 
∑ge
->
ödex
)) {

358 
ªt
 = 
	`ªad_exec
(
pcﬁ
, 
Ál£
);

359 i‡(
	`u∆ikñy
(
ªt
))

360 
Áû
;

361 
åy_agaö
;

364 i‡(!
pcﬁ
->
bio
) {

365 
ªt
 = 
	`pcﬁ_åy_Æloc
(
pcﬁ
);

366 i‡(
	`u∆ikñy
(
ªt
))

367 
Áû
;

370 i‡(
Àn
 !
PAGE_CACHE_SIZE
)

371 
	`zîo_u£r
(
∑ge
, 
Àn
, 
PAGE_CACHE_SIZE
 -Üen);

373 
	`EXOFS_DBGMSG
("Ñeadpage_strip(0x%lx, 0x%lx)Üen=0x%zx\n",

374 
öode
->
i_öo
, 
∑ge
->
ödex
, 
Àn
);

376 
ªt
 = 
	`pcﬁ_add_∑ge
(
pcﬁ
, 
∑ge
, 
Àn
);

377 i‡(
ªt
) {

378 
	`EXOFS_DBGMSG
("FailedÖcol_add_pageÖages[i]=%p "

380 
∑ge
, 
Àn
, 
pcﬁ
->
ƒ_∑ges
,Öcﬁ->
Àngth
);

383 
ªt
 = 
	`ªad_exec
(
pcﬁ
, 
Ál£
);

384 i‡(
	`u∆ikñy
(
ªt
))

385 
Áû
;

387 
åy_agaö
;

392 
Áû
:

394 
	`u∆ock_∑ge
(
∑ge
);

395  
ªt
;

396 
	}
}

398 
	$exofs_ªad∑ges
(
fûe
 *fûe, 
addªss_•a˚
 *
m≠pög
,

399 
li°_hód
 *
∑ges
, 
ƒ_∑ges
)

401 
∑ge_cﬁÀ˘
 
pcﬁ
;

402 
ªt
;

404 
	`_pcﬁ_öô
(&
pcﬁ
, 
ƒ_∑ges
, 
m≠pög
->
ho°
);

406 
ªt
 = 
	`ªad_ˇche_∑ges
(
m≠pög
, 
∑ges
, 
ªad∑ge_°rù
, &
pcﬁ
);

407 i‡(
ªt
) {

408 
	`EXOFS_ERR
("ªad_ˇche_∑ge†=> %d\n", 
ªt
);

409  
ªt
;

412  
	`ªad_exec
(&
pcﬁ
, 
Ál£
);

413 
	}
}

415 
	$_ªad∑ge
(
∑ge
 *∑ge, 
boﬁ
 
is_sync
)

417 
∑ge_cﬁÀ˘
 
pcﬁ
;

418 
ªt
;

420 
	`_pcﬁ_öô
(&
pcﬁ
, 1, 
∑ge
->
m≠pög
->
ho°
);

426 
ªt
 = 
	`ªad∑ge_°rù
(&
pcﬁ
, 
∑ge
);

427 i‡(
ªt
) {

428 
	`EXOFS_ERR
("_ªad∑gê=> %d\n", 
ªt
);

429  
ªt
;

432  
	`ªad_exec
(&
pcﬁ
, 
is_sync
);

433 
	}
}

438 
	$exofs_ªad∑ge
(
fûe
 *fûe, 
∑ge
 *page)

440  
	`_ªad∑ge
(
∑ge
, 
Ál£
);

441 
	}
}

444 
	$wrôïages_d⁄e
(
osd_ªque°
 *
‹
, *
p
)

446 
∑ge_cﬁÀ˘
 *
pcﬁ
 = 
p
;

447 
bio_vec
 *
bvec
;

448 
i
;

449 
u64
 
ªsid
;

450 
u64
 
good_byãs
;

451 
u64
 
Àngth
 = 0;

453 
ªt
 = 
	`exofs_check_ok_ªsid
(
‹
, 
NULL
, &
ªsid
);

455 
	`osd_íd_ªque°
(
‹
);

456 
	`©omic_dec
(&
pcﬁ
->
sbi
->
s_cuº_≥ndög
);

458 i‡(
	`likñy
(!
ªt
))

459 
good_byãs
 = 
pcﬁ
->
Àngth
;

460 i‡(!
ªsid
)

461 
good_byãs
 = 0;

463 
good_byãs
 = 
pcﬁ
->
Àngth
 - 
ªsid
;

465 
	`EXOFS_DBGMSG
("writepages_done(0x%lx) good_bytes=0x%llx"

467 
pcﬁ
->
öode
->
i_öo
, 
	`_LLU
(
good_byãs
),Öcﬁ->
Àngth
,

468 
pcﬁ
->
ƒ_∑ges
);

470 
	`__bio_f‹_óch_£gmít
(
bvec
, 
pcﬁ
->
bio
, 
i
, 0) {

471 
∑ge
 *∑gê
bvec
->
bv_∑ge
;

472 
öode
 *öodê
∑ge
->
m≠pög
->
ho°
;

473 
∑ge_°©
;

475 i‡(
öode
 !
pcﬁ
->inode)

478 i‡(
	`likñy
(
Àngth
 < 
good_byãs
))

479 
∑ge_°©
 = 0;

481 
∑ge_°©
 = 
ªt
;

483 
	`upd©e_wrôe_∑ge
(
∑ge
, 
∑ge_°©
);

484 
	`u∆ock_∑ge
(
∑ge
);

485 
	`EXOFS_DBGMSG
(" writepages_done(0x%lx, 0x%lx) status=%d\n",

486 
öode
->
i_öo
, 
∑ge
->
ödex
, 
∑ge_°©
);

488 
Àngth
 +
bvec
->
bv_Àn
;

491 
	`pcﬁ_‰ì
(
pcﬁ
);

492 
	`k‰ì
(
pcﬁ
);

493 
	`EXOFS_DBGMSG
("writepages_done END\n");

494 
	}
}

496 
	$wrôe_exec
(
∑ge_cﬁÀ˘
 *
pcﬁ
)

498 
exofs_i_öfo
 *
oi
 = 
	`exofs_i
(
pcﬁ
->
öode
);

499 
osd_obj_id
 
obj
 = {
pcﬁ
->
sbi
->
s_pid
,

500 
pcﬁ
->
öode
->
i_öo
 + 
EXOFS_OBJ_OFF
};

501 
osd_ªque°
 *
‹
 = 
NULL
;

502 
∑ge_cﬁÀ˘
 *
pcﬁ_c›y
 = 
NULL
;

503 
loff_t
 
i_°¨t
 = 
pcﬁ
->
pg_fú°
 << 
PAGE_CACHE_SHIFT
;

504 
ªt
;

506 i‡(!
pcﬁ
->
bio
)

509 
‹
 = 
	`osd_°¨t_ªque°
(
pcﬁ
->
sbi
->
s_dev
, 
GFP_KERNEL
);

510 i‡(
	`u∆ikñy
(!
‹
)) {

511 
	`EXOFS_ERR
("write_exec: FaildÅo osd_start_request()\n");

512 
ªt
 = -
ENOMEM
;

513 
îr
;

516 
pcﬁ_c›y
 = 
	`kmÆloc
((*pcﬁ_c›y), 
GFP_KERNEL
);

517 i‡(!
pcﬁ_c›y
) {

518 
	`EXOFS_ERR
("write_exec: FaildÅo kmalloc(pcol)\n");

519 
ªt
 = -
ENOMEM
;

520 
îr
;

523 *
pcﬁ_c›y
 = *
pcﬁ
;

525 
pcﬁ_c›y
->
bio
->
bi_rw
 |(1 << 
BIO_RW
);

526 
	`osd_ªq_wrôe
(
‹
, &
obj
, 
i_°¨t
, 
pcﬁ_c›y
->
bio
,Öcﬁ_c›y->
Àngth
);

527 
ªt
 = 
	`exofs_async_›
(
‹
, 
wrôïages_d⁄e
, 
pcﬁ_c›y
, 
oi
->
i_¸ed
);

528 i‡(
	`u∆ikñy
(
ªt
)) {

529 
	`EXOFS_ERR
("write_exec:Éxofs_async_op() Faild\n");

530 
îr
;

533 
	`©omic_öc
(&
pcﬁ
->
sbi
->
s_cuº_≥ndög
);

534 
	`EXOFS_DBGMSG
("write_exec(0x%lx, 0x%llx) start=0x%llxÜength=0x%lx\n",

535 
pcﬁ
->
öode
->
i_öo
,Öcﬁ->
pg_fú°
, 
	`_LLU
(
i_°¨t
),

536 
pcﬁ
->
Àngth
);

538 
	`_pcﬁ_ª£t
(
pcﬁ
);

541 
îr
:

542 
	`_u∆ock_pcﬁ_∑ges
(
pcﬁ
, 
ªt
, 
WRITE
);

543 
	`k‰ì
(
pcﬁ_c›y
);

544 i‡(
‹
)

545 
	`osd_íd_ªque°
(
‹
);

546  
ªt
;

547 
	}
}

556 
	$wrôïage_°rù
(
∑ge
 *page,

557 
wrôeback_c⁄åﬁ
 *
wbc_unu£d
, *
d©a
)

559 
∑ge_cﬁÀ˘
 *
pcﬁ
 = 
d©a
;

560 
öode
 *öodê
pcﬁ
->inode;

561 
exofs_i_öfo
 *
oi
 = 
	`exofs_i
(
öode
);

562 
loff_t
 
i_size
 = 
	`i_size_ªad
(
öode
);

563 
pgoff_t
 
íd_ödex
 = 
i_size
 >> 
PAGE_CACHE_SHIFT
;

564 
size_t
 
Àn
;

565 
ªt
;

567 
	`BUG_ON
(!
	`PageLocked
(
∑ge
));

569 
ªt
 = 
	`waô_obj_¸óãd
(
oi
);

570 i‡(
	`u∆ikñy
(
ªt
))

571 
Áû
;

573 i‡(
∑ge
->
ödex
 < 
íd_ödex
)

575 
Àn
 = 
PAGE_CACHE_SIZE
;

577 
Àn
 = 
i_size
 & ~
PAGE_CACHE_MASK
;

579 i‡(
∑ge
->
ödex
 > 
íd_ödex
 || !
Àn
) {

583 
ªt
 = 
	`wrôe_exec
(
pcﬁ
);

584 i‡(
	`u∆ikñy
(
ªt
))

585 
Áû
;

586 i‡(
	`PageEº‹
(
∑ge
))

587 
	`CÀ¨PageEº‹
(
∑ge
);

588 
	`u∆ock_∑ge
(
∑ge
);

593 
åy_agaö
:

595 i‡(
	`u∆ikñy
(
pcﬁ
->
pg_fú°
 == -1)) {

596 
pcﬁ
->
pg_fú°
 = 
∑ge
->
ödex
;

597 } i‡(
	`u∆ikñy
((
pcﬁ
->
pg_fú°
 +Öcﬁ->
ƒ_∑ges
) !=

598 
∑ge
->
ödex
)) {

600 
ªt
 = 
	`wrôe_exec
(
pcﬁ
);

601 i‡(
	`u∆ikñy
(
ªt
))

602 
Áû
;

603 
åy_agaö
;

606 i‡(!
pcﬁ
->
bio
) {

607 
ªt
 = 
	`pcﬁ_åy_Æloc
(
pcﬁ
);

608 i‡(
	`u∆ikñy
(
ªt
))

609 
Áû
;

612 
	`EXOFS_DBGMSG
(" writepage_strip(0x%lx, 0x%lx)Üen=0x%zx\n",

613 
öode
->
i_öo
, 
∑ge
->
ödex
, 
Àn
);

615 
ªt
 = 
	`pcﬁ_add_∑ge
(
pcﬁ
, 
∑ge
, 
Àn
);

616 i‡(
	`u∆ikñy
(
ªt
)) {

617 
	`EXOFS_DBGMSG
("FailedÖcol_add_page "

619 
pcﬁ
->
ƒ_∑ges
,Öcﬁ->
Àngth
);

622 
ªt
 = 
	`wrôe_exec
(
pcﬁ
);

623 i‡(
	`u∆ikñy
(
ªt
)) {

624 
	`EXOFS_DBGMSG
("wrôe_exe¯Áûd => %d", 
ªt
);

625 
Áû
;

628 
åy_agaö
;

631 
	`BUG_ON
(
	`PageWrôeback
(
∑ge
));

632 
	`£t_∑ge_wrôeback
(
∑ge
);

636 
Áû
:

637 
	`£t_bô
(
AS_EIO
, &
∑ge
->
m≠pög
->
Êags
);

638 
	`u∆ock_∑ge
(
∑ge
);

639  
ªt
;

640 
	}
}

642 
	$exofs_wrôïages
(
addªss_•a˚
 *
m≠pög
,

643 
wrôeback_c⁄åﬁ
 *
wbc
)

645 
∑ge_cﬁÀ˘
 
pcﬁ
;

646 
°¨t
, 
íd
, 
ex≥˘ed_∑ges
;

647 
ªt
;

649 
°¨t
 = 
wbc
->
ønge_°¨t
 >> 
PAGE_CACHE_SHIFT
;

650 
íd
 = (
wbc
->
ønge_íd
 =
LLONG_MAX
) ?

651 
°¨t
 + 
m≠pög
->
ƒ∑ges
 :

652 
wbc
->
ønge_íd
 >> 
PAGE_CACHE_SHIFT
;

654 i‡(
°¨t
 || 
íd
)

655 
ex≥˘ed_∑ges
 = 
	`mö
(
íd
 - 
°¨t
 + 1, 32L);

657 
ex≥˘ed_∑ges
 = 
m≠pög
->
ƒ∑ges
;

659 
	`EXOFS_DBGMSG
("inode(0x%lx) wbc->start=0x%llx wbc->end=0x%llx"

661 
m≠pög
->
ho°
->
i_öo
, 
wbc
->
ønge_°¨t
, wbc->
ønge_íd
,

662 
m≠pög
->
ƒ∑ges
, 
°¨t
, 
íd
);

664 
	`_pcﬁ_öô
(&
pcﬁ
, 
ex≥˘ed_∑ges
, 
m≠pög
->
ho°
);

666 
ªt
 = 
	`wrôe_ˇche_∑ges
(
m≠pög
, 
wbc
, 
wrôïage_°rù
, &
pcﬁ
);

667 i‡(
ªt
) {

668 
	`EXOFS_ERR
("wrôe_ˇche_∑ge†=> %d\n", 
ªt
);

669  
ªt
;

672  
	`wrôe_exec
(&
pcﬁ
);

673 
	}
}

675 
	$exofs_wrôïage
(
∑ge
 *∑ge, 
wrôeback_c⁄åﬁ
 *
wbc
)

677 
∑ge_cﬁÀ˘
 
pcﬁ
;

678 
ªt
;

680 
	`_pcﬁ_öô
(&
pcﬁ
, 1, 
∑ge
->
m≠pög
->
ho°
);

682 
ªt
 = 
	`wrôïage_°rù
(
∑ge
, 
NULL
, &
pcﬁ
);

683 i‡(
ªt
) {

684 
	`EXOFS_ERR
("exofs_wrôïagê=> %d\n", 
ªt
);

685  
ªt
;

688  
	`wrôe_exec
(&
pcﬁ
);

689 
	}
}

691 
	$exofs_wrôe_begö
(
fûe
 *fûe, 
addªss_•a˚
 *
m≠pög
,

692 
loff_t
 
pos
, 
Àn
, 
Êags
,

693 
∑ge
 **
∑gï
, **
fsd©a
)

695 
ªt
 = 0;

696 
∑ge
 *page;

698 
∑ge
 = *
∑gï
;

699 i‡(
∑ge
 =
NULL
) {

700 
ªt
 = 
	`sim∂e_wrôe_begö
(
fûe
, 
m≠pög
, 
pos
, 
Àn
, 
Êags
, 
∑gï
,

701 
fsd©a
);

702 i‡(
ªt
) {

703 
	`EXOFS_DBGMSG
("simple_write_begin faild\n");

704  
ªt
;

707 
∑ge
 = *
∑gï
;

711 i‡(!
	`PageU±od©e
(
∑ge
Ë&& (
Àn
 !
PAGE_CACHE_SIZE
)) {

712 
ªt
 = 
	`_ªad∑ge
(
∑ge
, 
åue
);

713 i‡(
ªt
) {

715 
	`u∆ock_∑ge
(
∑ge
);

716 
	`EXOFS_DBGMSG
("__readpage_filler faild\n");

720  
ªt
;

721 
	}
}

723 
	$exofs_wrôe_begö_exp‹t
(
fûe
 *file,

724 
addªss_•a˚
 *
m≠pög
,

725 
loff_t
 
pos
, 
Àn
, 
Êags
,

726 
∑ge
 **
∑gï
, **
fsd©a
)

728 *
∑gï
 = 
NULL
;

730  
	`exofs_wrôe_begö
(
fûe
, 
m≠pög
, 
pos
, 
Àn
, 
Êags
, 
∑gï
,

731 
fsd©a
);

732 
	}
}

734 c⁄° 
addªss_•a˚_›î©i⁄s
 
	gexofs_a›s
 = {

735 .
ªad∑ge
 = 
exofs_ªad∑ge
,

736 .
	gªad∑ges
 = 
exofs_ªad∑ges
,

737 .
	gwrôïage
 = 
exofs_wrôïage
,

738 .
	gwrôïages
 = 
exofs_wrôïages
,

739 .
	gwrôe_begö
 = 
exofs_wrôe_begö_exp‹t
,

740 .
	gwrôe_íd
 = 
sim∂e_wrôe_íd
,

750 
ölöe
 
	$exofs_öode_is_Á°_symlök
(
öode
 *inode)

752 
exofs_i_öfo
 *
oi
 = 
	`exofs_i
(
öode
);

754  
	`S_ISLNK
(
öode
->
i_mode
Ë&& (
oi
->
i_d©a
[0] != 0);

755 
	}
}

764 
	$exofs_gë_block
(
öode
 *öode, 
£˘‹_t
 
iblock
,

765 
buf„r_hód
 *
bh_ªsu…
, 
¸óã
)

767 
	`m≠_bh
(
bh_ªsu…
, 
öode
->
i_sb
, 
iblock
);

769 
	}
}

771 c⁄° 
osd_©å
 
	gg_©å_logiˇl_Àngth
 = 
ATTR_DEF
(

772 
OSD_APAGE_OBJECT_INFORMATION
, 
OSD_ATTR_OI_LOGICAL_LENGTH
, 8);

778 
	$exofs_åunˇã
(
öode
 *inode)

780 
exofs_sb_öfo
 *
sbi
 = 
öode
->
i_sb
->
s_fs_öfo
;

781 
exofs_i_öfo
 *
oi
 = 
	`exofs_i
(
öode
);

782 
osd_obj_id
 
obj
 = {
sbi
->
s_pid
, 
öode
->
i_öo
 + 
EXOFS_OBJ_OFF
};

783 
osd_ªque°
 *
‹
;

784 
osd_©å
 
©å
;

785 
loff_t
 
isize
 = 
	`i_size_ªad
(
öode
);

786 
__be64
 
√wsize
;

787 
ªt
;

789 i‡(!(
	`S_ISREG
(
öode
->
i_mode
Ë|| 
	`S_ISDIR
(inode->i_mode)

790 || 
	`S_ISLNK
(
öode
->
i_mode
)))

792 i‡(
	`exofs_öode_is_Á°_symlök
(
öode
))

794 i‡(
	`IS_APPEND
(
öode
Ë|| 
	`IS_IMMUTABLE
(inode))

796 
öode
->
i_mtime
 = inode->
i_˘ime
 = 
CURRENT_TIME
;

798 
	`nobh_åunˇã_∑ge
(
öode
->
i_m≠pög
, 
isize
, 
exofs_gë_block
);

800 
‹
 = 
	`osd_°¨t_ªque°
(
sbi
->
s_dev
, 
GFP_KERNEL
);

801 i‡(
	`u∆ikñy
(!
‹
)) {

802 
	`EXOFS_ERR
("ERROR:Éxofs_truncate: osd_start_request failed\n");

803 
Áû
;

806 
	`osd_ªq_£t_©åibuãs
(
‹
, &
obj
);

808 
√wsize
 = 
	`˝u_to_be64
((
u64
)
isize
);

809 
©å
 = 
g_©å_logiˇl_Àngth
;

810 
©å
.
vÆ_±r
 = &
√wsize
;

811 
	`osd_ªq_add_£t_©å_li°
(
‹
, &
©å
, 1);

816 i‡(
	`u∆ikñy
(
	`waô_obj_¸óãd
(
oi
)))

817 
Áû
;

819 
ªt
 = 
	`exofs_sync_›
(
‹
, 
sbi
->
s_timeout
, 
oi
->
i_¸ed
);

820 
	`osd_íd_ªque°
(
‹
);

821 i‡(
ªt
)

822 
Áû
;

824 
out
:

825 
	`m¨k_öode_dúty
(
öode
);

827 
Áû
:

828 
	`make_bad_öode
(
öode
);

829 
out
;

830 
	}
}

835 
	$exofs_£èâr
(
díåy
 *díåy, 
üâr
 *iattr)

837 
öode
 *öodê
díåy
->
d_öode
;

838 
îr‹
;

840 
îr‹
 = 
	`öode_ch™ge_ok
(
öode
, 
üâr
);

841 i‡(
îr‹
)

842  
îr‹
;

844 
îr‹
 = 
	`öode_£èâr
(
öode
, 
üâr
);

845  
îr‹
;

846 
	}
}

853 
	$exofs_gë_öode
(
su≥r_block
 *
sb
, 
exofs_i_öfo
 *
oi
,

854 
exofs_fcb
 *
öode
, 
uöt64_t
 *
ßnôy
)

856 
exofs_sb_öfo
 *
sbi
 = 
sb
->
s_fs_öfo
;

857 
osd_ªque°
 *
‹
;

858 
osd_©å
 
©å
;

859 
osd_obj_id
 
obj
 = {
sbi
->
s_pid
,

860 
oi
->
vfs_öode
.
i_öo
 + 
EXOFS_OBJ_OFF
};

861 
ªt
;

863 
	`exofs_make_¸edítül
(
oi
->
i_¸ed
, &
obj
);

865 
‹
 = 
	`osd_°¨t_ªque°
(
sbi
->
s_dev
, 
GFP_KERNEL
);

866 i‡(
	`u∆ikñy
(!
‹
)) {

867 
	`EXOFS_ERR
("exofs_get_inode: osd_start_request failed.\n");

868  -
ENOMEM
;

870 
	`osd_ªq_gë_©åibuãs
(
‹
, &
obj
);

873 
	`osd_ªq_add_gë_©å_li°
(
‹
, &
g_©å_öode_d©a
, 1);

875 #ifde‡
EXOFS_DEBUG_OBJ_ISIZE


877 
	`osd_ªq_add_gë_©å_li°
(
‹
, &
g_©å_logiˇl_Àngth
, 1);

880 
ªt
 = 
	`exofs_sync_›
(
‹
, 
sbi
->
s_timeout
, 
oi
->
i_¸ed
);

881 i‡(
ªt
)

882 
out
;

884 
©å
 = 
g_©å_öode_d©a
;

885 
ªt
 = 
	`exåa˘_©å_‰om_ªq
(
‹
, &
©å
);

886 i‡(
ªt
) {

887 
	`EXOFS_ERR
("exofs_get_inode:Éxtract_attr_from_req failed\n");

888 
out
;

891 
	`WARN_ON
(
©å
.
Àn
 !
EXOFS_INO_ATTR_SIZE
);

892 
	`mem˝y
(
öode
, 
©å
.
vÆ_±r
, 
EXOFS_INO_ATTR_SIZE
);

894 #ifde‡
EXOFS_DEBUG_OBJ_ISIZE


895 
©å
 = 
g_©å_logiˇl_Àngth
;

896 
ªt
 = 
	`exåa˘_©å_‰om_ªq
(
‹
, &
©å
);

897 i‡(
ªt
) {

898 
	`EXOFS_ERR
("ERROR:Éxtractáttr from or failed\n");

899 
out
;

901 *
ßnôy
 = 
	`gë_u«lig√d_be64
(
©å
.
vÆ_±r
);

904 
out
:

905 
	`osd_íd_ªque°
(
‹
);

906  
ªt
;

907 
	}
}

912 
öode
 *
	$exofs_igë
(
su≥r_block
 *
sb
, 
öo
)

914 
exofs_i_öfo
 *
oi
;

915 
exofs_fcb
 
fcb
;

916 
öode
 *inode;

917 
uöt64_t
 
	`unöôülized_v¨
(
ßnôy
);

918 
ªt
;

920 
öode
 = 
	`igë_locked
(
sb
, 
öo
);

921 i‡(!
öode
)

922  
	`ERR_PTR
(-
ENOMEM
);

923 i‡(!(
öode
->
i_°©e
 & 
I_NEW
))

924  
öode
;

925 
oi
 = 
	`exofs_i
(
öode
);

928 
ªt
 = 
	`exofs_gë_öode
(
sb
, 
oi
, &
fcb
, &
ßnôy
);

929 i‡(
ªt
)

930 
bad_öode
;

932 
	`öô_waôqueue_hód
(&
oi
->
i_wq
);

933 
	`£t_obj_¸óãd
(
oi
);

936 
öode
->
i_mode
 = 
	`À16_to_˝u
(
fcb
.i_mode);

937 
öode
->
i_uid
 = 
	`À32_to_˝u
(
fcb
.i_uid);

938 
öode
->
i_gid
 = 
	`À32_to_˝u
(
fcb
.i_gid);

939 
öode
->
i_∆ök
 = 
	`À16_to_˝u
(
fcb
.
i_löks_cou¡
);

940 
öode
->
i_˘ime
.
tv_£c
 = (sig√d)
	`À32_to_˝u
(
fcb
.i_ctime);

941 
öode
->
i_©ime
.
tv_£c
 = (sig√d)
	`À32_to_˝u
(
fcb
.i_atime);

942 
öode
->
i_mtime
.
tv_£c
 = (sig√d)
	`À32_to_˝u
(
fcb
.i_mtime);

943 
öode
->
i_˘ime
.
tv_n£c
 =

944 
öode
->
i_©ime
.
tv_n£c
 = inode->
i_mtime
.tv_nsec = 0;

945 
oi
->
i_commô_size
 = 
	`À64_to_˝u
(
fcb
.
i_size
);

946 
	`i_size_wrôe
(
öode
, 
oi
->
i_commô_size
);

947 
öode
->
i_blkbôs
 = 
EXOFS_BLKSHIFT
;

948 
öode
->
i_gíî©i⁄
 = 
	`À32_to_˝u
(
fcb
.i_generation);

950 #ifde‡
EXOFS_DEBUG_OBJ_ISIZE


951 i‡((
öode
->
i_size
 !
ßnôy
) &&

952 (!
	`exofs_öode_is_Á°_symlök
(
öode
))) {

953 
	`EXOFS_ERR
("WARNING: Size of object from inodeánd "

955 
öode
->
i_size
, 
	`_LLU
(
ßnôy
));

959 
oi
->
i_dú_°¨t_lookup
 = 0;

961 i‡((
öode
->
i_∆ök
 =0Ë&& (öode->
i_mode
 == 0)) {

962 
ªt
 = -
ESTALE
;

963 
bad_öode
;

966 i‡(
	`S_ISCHR
(
öode
->
i_mode
Ë|| 
	`S_ISBLK
(inode->i_mode)) {

967 i‡(
fcb
.
i_d©a
[0])

968 
öode
->
i_rdev
 =

969 
	`ﬁd_decode_dev
(
	`À32_to_˝u
(
fcb
.
i_d©a
[0]));

971 
öode
->
i_rdev
 =

972 
	`√w_decode_dev
(
	`À32_to_˝u
(
fcb
.
i_d©a
[1]));

974 
	`mem˝y
(
oi
->
i_d©a
, 
fcb
.i_data, (fcb.i_data));

977 i‡(
	`S_ISREG
(
öode
->
i_mode
)) {

978 
öode
->
i_›
 = &
exofs_fûe_öode_›î©i⁄s
;

979 
öode
->
i_f›
 = &
exofs_fûe_›î©i⁄s
;

980 
öode
->
i_m≠pög
->
a_›s
 = &
exofs_a›s
;

981 } i‡(
	`S_ISDIR
(
öode
->
i_mode
)) {

982 
öode
->
i_›
 = &
exofs_dú_öode_›î©i⁄s
;

983 
öode
->
i_f›
 = &
exofs_dú_›î©i⁄s
;

984 
öode
->
i_m≠pög
->
a_›s
 = &
exofs_a›s
;

985 } i‡(
	`S_ISLNK
(
öode
->
i_mode
)) {

986 i‡(
	`exofs_öode_is_Á°_symlök
(
öode
))

987 
öode
->
i_›
 = &
exofs_Á°_symlök_öode_›î©i⁄s
;

989 
öode
->
i_›
 = &
exofs_symlök_öode_›î©i⁄s
;

990 
öode
->
i_m≠pög
->
a_›s
 = &
exofs_a›s
;

993 
öode
->
i_›
 = &
exofs_•ecül_öode_›î©i⁄s
;

994 i‡(
fcb
.
i_d©a
[0])

995 
	`öô_•ecül_öode
(
öode
, inode->
i_mode
,

996 
	`ﬁd_decode_dev
(
	`À32_to_˝u
(
fcb
.
i_d©a
[0])));

998 
	`öô_•ecül_öode
(
öode
, inode->
i_mode
,

999 
	`√w_decode_dev
(
	`À32_to_˝u
(
fcb
.
i_d©a
[1])));

1002 
	`u∆ock_√w_öode
(
öode
);

1003  
öode
;

1005 
bad_öode
:

1006 
	`igë_Áûed
(
öode
);

1007  
	`ERR_PTR
(
ªt
);

1008 
	}
}

1010 
	$__exofs_waô_obj_¸óãd
(
exofs_i_öfo
 *
oi
)

1012 i‡(!
	`obj_¸óãd
(
oi
)) {

1013 
	`BUG_ON
(!
	`obj_2b¸óãd
(
oi
));

1014 
	`waô_evít
(
oi
->
i_wq
, 
	`obj_¸óãd
(oi));

1016  
	`u∆ikñy
(
	`is_bad_öode
(&
oi
->
vfs_öode
)Ë? -
EIO
 : 0;

1017 
	}
}

1023 
	$¸óã_d⁄e
(
osd_ªque°
 *
‹
, *
p
)

1025 
öode
 *öodê
p
;

1026 
exofs_i_öfo
 *
oi
 = 
	`exofs_i
(
öode
);

1027 
exofs_sb_öfo
 *
sbi
 = 
öode
->
i_sb
->
s_fs_öfo
;

1028 
ªt
;

1030 
ªt
 = 
	`exofs_check_ok
(
‹
);

1031 
	`osd_íd_ªque°
(
‹
);

1032 
	`©omic_dec
(&
sbi
->
s_cuº_≥ndög
);

1034 i‡(
	`u∆ikñy
(
ªt
)) {

1035 
	`EXOFS_ERR
("object=0x%llx creation faild inÖid=0x%llx",

1036 
	`_LLU
(
sbi
->
s_pid
), _LLU(
öode
->
i_öo
 + 
EXOFS_OBJ_OFF
));

1037 
	`make_bad_öode
(
öode
);

1039 
	`£t_obj_¸óãd
(
oi
);

1041 
	`©omic_dec
(&
öode
->
i_cou¡
);

1042 
	`wake_up
(&
oi
->
i_wq
);

1043 
	}
}

1048 
öode
 *
	$exofs_√w_öode
(
öode
 *
dú
, 
mode
)

1050 
su≥r_block
 *
sb
;

1051 
öode
 *inode;

1052 
exofs_i_öfo
 *
oi
;

1053 
exofs_sb_öfo
 *
sbi
;

1054 
osd_ªque°
 *
‹
;

1055 
osd_obj_id
 
obj
;

1056 
ªt
;

1058 
sb
 = 
dú
->
i_sb
;

1059 
öode
 = 
	`√w_öode
(
sb
);

1060 i‡(!
öode
)

1061  
	`ERR_PTR
(-
ENOMEM
);

1063 
oi
 = 
	`exofs_i
(
öode
);

1065 
	`öô_waôqueue_hód
(&
oi
->
i_wq
);

1066 
	`£t_obj_2b¸óãd
(
oi
);

1068 
sbi
 = 
sb
->
s_fs_öfo
;

1070 
sb
->
s_dút
 = 1;

1071 
öode
->
i_uid
 = 
cuºít
->
¸ed
->
fsuid
;

1072 i‡(
dú
->
i_mode
 & 
S_ISGID
) {

1073 
öode
->
i_gid
 = 
dú
->i_gid;

1074 i‡(
	`S_ISDIR
(
mode
))

1075 
mode
 |
S_ISGID
;

1077 
öode
->
i_gid
 = 
cuºít
->
¸ed
->
fsgid
;

1079 
öode
->
i_mode
 = 
mode
;

1081 
öode
->
i_öo
 = 
sbi
->
s_√xtid
++;

1082 
öode
->
i_blkbôs
 = 
EXOFS_BLKSHIFT
;

1083 
öode
->
i_mtime
 = inode->
i_©ime
 = inode->
i_˘ime
 = 
CURRENT_TIME
;

1084 
oi
->
i_commô_size
 = 
öode
->
i_size
 = 0;

1085 
	`•ö_lock
(&
sbi
->
s_√xt_gí_lock
);

1086 
öode
->
i_gíî©i⁄
 = 
sbi
->
s_√xt_gíî©i⁄
++;

1087 
	`•ö_u∆ock
(&
sbi
->
s_√xt_gí_lock
);

1088 
	`ö£π_öode_hash
(
öode
);

1090 
	`m¨k_öode_dúty
(
öode
);

1092 
obj
.
∑πôi⁄
 = 
sbi
->
s_pid
;

1093 
obj
.
id
 = 
öode
->
i_öo
 + 
EXOFS_OBJ_OFF
;

1094 
	`exofs_make_¸edítül
(
oi
->
i_¸ed
, &
obj
);

1096 
‹
 = 
	`osd_°¨t_ªque°
(
sbi
->
s_dev
, 
GFP_KERNEL
);

1097 i‡(
	`u∆ikñy
(!
‹
)) {

1098 
	`EXOFS_ERR
("exofs_new_inode: osd_start_request failed\n");

1099  
	`ERR_PTR
(-
ENOMEM
);

1102 
	`osd_ªq_¸óã_obje˘
(
‹
, &
obj
);

1107 
	`©omic_öc
(&
öode
->
i_cou¡
);

1109 
ªt
 = 
	`exofs_async_›
(
‹
, 
¸óã_d⁄e
, 
öode
, 
oi
->
i_¸ed
);

1110 i‡(
ªt
) {

1111 
	`©omic_dec
(&
öode
->
i_cou¡
);

1112 
	`osd_íd_ªque°
(
‹
);

1113  
	`ERR_PTR
(-
EIO
);

1115 
	`©omic_öc
(&
sbi
->
s_cuº_≥ndög
);

1117  
öode
;

1118 
	}
}

1123 
	supd©ei_¨gs
 {

1124 
exofs_sb_öfo
 *
	msbi
;

1125 
exofs_fcb
 
	mfcb
;

1131 
	$upd©ei_d⁄e
(
osd_ªque°
 *
‹
, *
p
)

1133 
upd©ei_¨gs
 *
¨gs
 = 
p
;

1135 
	`osd_íd_ªque°
(
‹
);

1137 
	`©omic_dec
(&
¨gs
->
sbi
->
s_cuº_≥ndög
);

1139 
	`k‰ì
(
¨gs
);

1140 
	}
}

1146 
	$exofs_upd©e_öode
(
öode
 *öode, 
do_sync
)

1148 
exofs_i_öfo
 *
oi
 = 
	`exofs_i
(
öode
);

1149 
su≥r_block
 *
sb
 = 
öode
->
i_sb
;

1150 
exofs_sb_öfo
 *
sbi
 = 
sb
->
s_fs_öfo
;

1151 
osd_obj_id
 
obj
 = {
sbi
->
s_pid
, 
öode
->
i_öo
 + 
EXOFS_OBJ_OFF
};

1152 
osd_ªque°
 *
‹
;

1153 
osd_©å
 
©å
;

1154 
exofs_fcb
 *
fcb
;

1155 
upd©ei_¨gs
 *
¨gs
;

1156 
ªt
;

1158 
¨gs
 = 
	`kzÆloc
((*¨gs), 
GFP_KERNEL
);

1159 i‡(!
¨gs
)

1160  -
ENOMEM
;

1162 
fcb
 = &
¨gs
->fcb;

1164 
fcb
->
i_mode
 = 
	`˝u_to_À16
(
öode
->i_mode);

1165 
fcb
->
i_uid
 = 
	`˝u_to_À32
(
öode
->i_uid);

1166 
fcb
->
i_gid
 = 
	`˝u_to_À32
(
öode
->i_gid);

1167 
fcb
->
i_löks_cou¡
 = 
	`˝u_to_À16
(
öode
->
i_∆ök
);

1168 
fcb
->
i_˘ime
 = 
	`˝u_to_À32
(
öode
->i_˘ime.
tv_£c
);

1169 
fcb
->
i_©ime
 = 
	`˝u_to_À32
(
öode
->i_©ime.
tv_£c
);

1170 
fcb
->
i_mtime
 = 
	`˝u_to_À32
(
öode
->i_mtime.
tv_£c
);

1171 
oi
->
i_commô_size
 = 
	`i_size_ªad
(
öode
);

1172 
fcb
->
i_size
 = 
	`˝u_to_À64
(
oi
->
i_commô_size
);

1173 
fcb
->
i_gíî©i⁄
 = 
	`˝u_to_À32
(
öode
->i_generation);

1175 i‡(
	`S_ISCHR
(
öode
->
i_mode
Ë|| 
	`S_ISBLK
(inode->i_mode)) {

1176 i‡(
	`ﬁd_vÆid_dev
(
öode
->
i_rdev
)) {

1177 
fcb
->
i_d©a
[0] =

1178 
	`˝u_to_À32
(
	`ﬁd_ícode_dev
(
öode
->
i_rdev
));

1179 
fcb
->
i_d©a
[1] = 0;

1181 
fcb
->
i_d©a
[0] = 0;

1182 
fcb
->
i_d©a
[1] =

1183 
	`˝u_to_À32
(
	`√w_ícode_dev
(
öode
->
i_rdev
));

1184 
fcb
->
i_d©a
[2] = 0;

1187 
	`mem˝y
(
fcb
->
i_d©a
, 
oi
->i_data, (fcb->i_data));

1189 
‹
 = 
	`osd_°¨t_ªque°
(
sbi
->
s_dev
, 
GFP_KERNEL
);

1190 i‡(
	`u∆ikñy
(!
‹
)) {

1191 
	`EXOFS_ERR
("exofs_update_inode: osd_start_request failed.\n");

1192 
ªt
 = -
ENOMEM
;

1193 
‰ì_¨gs
;

1196 
	`osd_ªq_£t_©åibuãs
(
‹
, &
obj
);

1198 
©å
 = 
g_©å_öode_d©a
;

1199 
©å
.
vÆ_±r
 = 
fcb
;

1200 
	`osd_ªq_add_£t_©å_li°
(
‹
, &
©å
, 1);

1202 i‡(!
	`obj_¸óãd
(
oi
)) {

1203 
	`EXOFS_DBGMSG
("!obj_created\n");

1204 
	`BUG_ON
(!
	`obj_2b¸óãd
(
oi
));

1205 
	`waô_evít
(
oi
->
i_wq
, 
	`obj_¸óãd
(oi));

1206 
	`EXOFS_DBGMSG
("wait_event done\n");

1209 i‡(
do_sync
) {

1210 
ªt
 = 
	`exofs_sync_›
(
‹
, 
sbi
->
s_timeout
, 
oi
->
i_¸ed
);

1211 
	`osd_íd_ªque°
(
‹
);

1212 
‰ì_¨gs
;

1214 
¨gs
->
sbi
 = sbi;

1216 
ªt
 = 
	`exofs_async_›
(
‹
, 
upd©ei_d⁄e
, 
¨gs
, 
oi
->
i_¸ed
);

1217 i‡(
ªt
) {

1218 
	`osd_íd_ªque°
(
‹
);

1219 
‰ì_¨gs
;

1221 
	`©omic_öc
(&
sbi
->
s_cuº_≥ndög
);

1222 
out
;

1225 
‰ì_¨gs
:

1226 
	`k‰ì
(
¨gs
);

1227 
out
:

1228 
	`EXOFS_DBGMSG
("ªt=>%d\n", 
ªt
);

1229  
ªt
;

1230 
	}
}

1232 
	$exofs_wrôe_öode
(
öode
 *öode, 
waô
)

1234  
	`exofs_upd©e_öode
(
öode
, 
waô
);

1235 
	}
}

1241 
	$dñëe_d⁄e
(
osd_ªque°
 *
‹
, *
p
)

1243 
exofs_sb_öfo
 *
sbi
;

1244 
	`osd_íd_ªque°
(
‹
);

1245 
sbi
 = 
p
;

1246 
	`©omic_dec
(&
sbi
->
s_cuº_≥ndög
);

1247 
	}
}

1254 
	$exofs_dñëe_öode
(
öode
 *inode)

1256 
exofs_i_öfo
 *
oi
 = 
	`exofs_i
(
öode
);

1257 
su≥r_block
 *
sb
 = 
öode
->
i_sb
;

1258 
exofs_sb_öfo
 *
sbi
 = 
sb
->
s_fs_öfo
;

1259 
osd_obj_id
 
obj
 = {
sbi
->
s_pid
, 
öode
->
i_öo
 + 
EXOFS_OBJ_OFF
};

1260 
osd_ªque°
 *
‹
;

1261 
ªt
;

1263 
	`åunˇã_öode_∑ges
(&
öode
->
i_d©a
, 0);

1265 i‡(
	`is_bad_öode
(
öode
))

1266 
no_dñëe
;

1268 
	`m¨k_öode_dúty
(
öode
);

1269 
	`exofs_upd©e_öode
(
öode
, 
	`öode_√eds_sync
(inode));

1271 
öode
->
i_size
 = 0;

1272 i‡(
öode
->
i_blocks
)

1273 
	`exofs_åunˇã
(
öode
);

1275 
	`˛ór_öode
(
öode
);

1277 
‹
 = 
	`osd_°¨t_ªque°
(
sbi
->
s_dev
, 
GFP_KERNEL
);

1278 i‡(
	`u∆ikñy
(!
‹
)) {

1279 
	`EXOFS_ERR
("exofs_delete_inode: osd_start_request failed\n");

1283 
	`osd_ªq_ªmove_obje˘
(
‹
, &
obj
);

1286 i‡(!
	`obj_¸óãd
(
oi
)) {

1287 
	`BUG_ON
(!
	`obj_2b¸óãd
(
oi
));

1288 
	`waô_evít
(
oi
->
i_wq
, 
	`obj_¸óãd
(oi));

1291 
ªt
 = 
	`exofs_async_›
(
‹
, 
dñëe_d⁄e
, 
sbi
, 
oi
->
i_¸ed
);

1292 i‡(
ªt
) {

1293 
	`EXOFS_ERR
(

1295 
	`osd_íd_ªque°
(
‹
);

1298 
	`©omic_öc
(&
sbi
->
s_cuº_≥ndög
);

1302 
no_dñëe
:

1303 
	`˛ór_öode
(
öode
);

1304 
	}
}

	@namei.c

34 
	~"exofs.h
"

36 
ölöe
 
	$exofs_add_n⁄dú
(
díåy
 *díåy, 
öode
 *inode)

38 
îr
 = 
	`exofs_add_lök
(
díåy
, 
öode
);

39 i‡(!
îr
) {

40 
	`d_ö°™tüã
(
díåy
, 
öode
);

43 
	`öode_dec_lök_cou¡
(
öode
);

44 
	`ùut
(
öode
);

45  
îr
;

46 
	}
}

48 
díåy
 *
	$exofs_lookup
(
öode
 *
dú
, 
díåy
 *dentry,

49 
«meid©a
 *
nd
)

51 
öode
 *inode;

52 
öo_t
 
öo
;

54 i‡(
díåy
->
d_«me
.
Àn
 > 
EXOFS_NAME_LEN
)

55  
	`ERR_PTR
(-
ENAMETOOLONG
);

57 
öo
 = 
	`exofs_öode_by_«me
(
dú
, 
díåy
);

58 
öode
 = 
NULL
;

59 i‡(
öo
) {

60 
öode
 = 
	`exofs_igë
(
dú
->
i_sb
, 
öo
);

61 i‡(
	`IS_ERR
(
öode
))

62  
	`ERR_CAST
(
öode
);

64  
	`d_•li˚_Æüs
(
öode
, 
díåy
);

65 
	}
}

67 
	$exofs_¸óã
(
öode
 *
dú
, 
díåy
 *díåy, 
mode
,

68 
«meid©a
 *
nd
)

70 
öode
 *öodê
	`exofs_√w_öode
(
dú
, 
mode
);

71 
îr
 = 
	`PTR_ERR
(
öode
);

72 i‡(!
	`IS_ERR
(
öode
)) {

73 
öode
->
i_›
 = &
exofs_fûe_öode_›î©i⁄s
;

74 
öode
->
i_f›
 = &
exofs_fûe_›î©i⁄s
;

75 
öode
->
i_m≠pög
->
a_›s
 = &
exofs_a›s
;

76 
	`m¨k_öode_dúty
(
öode
);

77 
îr
 = 
	`exofs_add_n⁄dú
(
díåy
, 
öode
);

79  
îr
;

80 
	}
}

82 
	$exofs_mknod
(
öode
 *
dú
, 
díåy
 *díåy, 
mode
,

83 
dev_t
 
rdev
)

85 
öode
 *inode;

86 
îr
;

88 i‡(!
	`√w_vÆid_dev
(
rdev
))

89  -
EINVAL
;

91 
öode
 = 
	`exofs_√w_öode
(
dú
, 
mode
);

92 
îr
 = 
	`PTR_ERR
(
öode
);

93 i‡(!
	`IS_ERR
(
öode
)) {

94 
	`öô_•ecül_öode
(
öode
, inode->
i_mode
, 
rdev
);

95 
	`m¨k_öode_dúty
(
öode
);

96 
îr
 = 
	`exofs_add_n⁄dú
(
díåy
, 
öode
);

98  
îr
;

99 
	}
}

101 
	$exofs_symlök
(
öode
 *
dú
, 
díåy
 *dentry,

102 c⁄° *
sym«me
)

104 
su≥r_block
 *
sb
 = 
dú
->
i_sb
;

105 
îr
 = -
ENAMETOOLONG
;

106 
l
 = 
	`°æí
(
sym«me
)+1;

107 
öode
 *inode;

108 
exofs_i_öfo
 *
oi
;

110 i‡(
l
 > 
sb
->
s_blocksize
)

111 
out
;

113 
öode
 = 
	`exofs_√w_öode
(
dú
, 
S_IFLNK
 | 
S_IRWXUGO
);

114 
îr
 = 
	`PTR_ERR
(
öode
);

115 i‡(
	`IS_ERR
(
öode
))

116 
out
;

118 
oi
 = 
	`exofs_i
(
öode
);

119 i‡(
l
 > (
oi
->
i_d©a
)) {

121 
öode
->
i_›
 = &
exofs_symlök_öode_›î©i⁄s
;

122 
öode
->
i_m≠pög
->
a_›s
 = &
exofs_a›s
;

123 
	`mem£t
(
oi
->
i_d©a
, 0, (oi->i_data));

125 
îr
 = 
	`∑ge_symlök
(
öode
, 
sym«me
, 
l
);

126 i‡(
îr
)

127 
out_Áû
;

130 
öode
->
i_›
 = &
exofs_Á°_symlök_öode_›î©i⁄s
;

131 
	`mem˝y
(
oi
->
i_d©a
, 
sym«me
, 
l
);

132 
öode
->
i_size
 = 
l
-1;

134 
	`m¨k_öode_dúty
(
öode
);

136 
îr
 = 
	`exofs_add_n⁄dú
(
díåy
, 
öode
);

137 
out
:

138  
îr
;

140 
out_Áû
:

141 
	`öode_dec_lök_cou¡
(
öode
);

142 
	`ùut
(
öode
);

143 
out
;

144 
	}
}

146 
	$exofs_lök
(
díåy
 *
ﬁd_díåy
, 
öode
 *
dú
,

147 
díåy
 *dentry)

149 
öode
 *öodê
ﬁd_díåy
->
d_öode
;

151 i‡(
öode
->
i_∆ök
 >
EXOFS_LINK_MAX
)

152  -
EMLINK
;

154 
öode
->
i_˘ime
 = 
CURRENT_TIME
;

155 
	`öode_öc_lök_cou¡
(
öode
);

156 
	`©omic_öc
(&
öode
->
i_cou¡
);

158  
	`exofs_add_n⁄dú
(
díåy
, 
öode
);

159 
	}
}

161 
	$exofs_mkdú
(
öode
 *
dú
, 
díåy
 *díåy, 
mode
)

163 
öode
 *inode;

164 
îr
 = -
EMLINK
;

166 i‡(
dú
->
i_∆ök
 >
EXOFS_LINK_MAX
)

167 
out
;

169 
	`öode_öc_lök_cou¡
(
dú
);

171 
öode
 = 
	`exofs_√w_öode
(
dú
, 
S_IFDIR
 | 
mode
);

172 
îr
 = 
	`PTR_ERR
(
öode
);

173 i‡(
	`IS_ERR
(
öode
))

174 
out_dú
;

176 
öode
->
i_›
 = &
exofs_dú_öode_›î©i⁄s
;

177 
öode
->
i_f›
 = &
exofs_dú_›î©i⁄s
;

178 
öode
->
i_m≠pög
->
a_›s
 = &
exofs_a›s
;

180 
	`öode_öc_lök_cou¡
(
öode
);

182 
îr
 = 
	`exofs_make_em±y
(
öode
, 
dú
);

183 i‡(
îr
)

184 
out_Áû
;

186 
îr
 = 
	`exofs_add_lök
(
díåy
, 
öode
);

187 i‡(
îr
)

188 
out_Áû
;

190 
	`d_ö°™tüã
(
díåy
, 
öode
);

191 
out
:

192  
îr
;

194 
out_Áû
:

195 
	`öode_dec_lök_cou¡
(
öode
);

196 
	`öode_dec_lök_cou¡
(
öode
);

197 
	`ùut
(
öode
);

198 
out_dú
:

199 
	`öode_dec_lök_cou¡
(
dú
);

200 
out
;

201 
	}
}

203 
	$exofs_u∆ök
(
öode
 *
dú
, 
díåy
 *dentry)

205 
öode
 *öodê
díåy
->
d_öode
;

206 
exofs_dú_íåy
 *
de
;

207 
∑ge
 *page;

208 
îr
 = -
ENOENT
;

210 
de
 = 
	`exofs_föd_íåy
(
dú
, 
díåy
, &
∑ge
);

211 i‡(!
de
)

212 
out
;

214 
îr
 = 
	`exofs_dñëe_íåy
(
de
, 
∑ge
);

215 i‡(
îr
)

216 
out
;

218 
öode
->
i_˘ime
 = 
dú
->i_ctime;

219 
	`öode_dec_lök_cou¡
(
öode
);

220 
îr
 = 0;

221 
out
:

222  
îr
;

223 
	}
}

225 
	$exofs_rmdú
(
öode
 *
dú
, 
díåy
 *dentry)

227 
öode
 *öodê
díåy
->
d_öode
;

228 
îr
 = -
ENOTEMPTY
;

230 i‡(
	`exofs_em±y_dú
(
öode
)) {

231 
îr
 = 
	`exofs_u∆ök
(
dú
, 
díåy
);

232 i‡(!
îr
) {

233 
öode
->
i_size
 = 0;

234 
	`öode_dec_lök_cou¡
(
öode
);

235 
	`öode_dec_lök_cou¡
(
dú
);

238  
îr
;

239 
	}
}

241 
	$exofs_ª«me
(
öode
 *
ﬁd_dú
, 
díåy
 *
ﬁd_díåy
,

242 
öode
 *
√w_dú
, 
díåy
 *
√w_díåy
)

244 
öode
 *
ﬁd_öode
 = 
ﬁd_díåy
->
d_öode
;

245 
öode
 *
√w_öode
 = 
√w_díåy
->
d_öode
;

246 
∑ge
 *
dú_∑ge
 = 
NULL
;

247 
exofs_dú_íåy
 *
dú_de
 = 
NULL
;

248 
∑ge
 *
ﬁd_∑ge
;

249 
exofs_dú_íåy
 *
ﬁd_de
;

250 
îr
 = -
ENOENT
;

252 
ﬁd_de
 = 
	`exofs_föd_íåy
(
ﬁd_dú
, 
ﬁd_díåy
, &
ﬁd_∑ge
);

253 i‡(!
ﬁd_de
)

254 
out
;

256 i‡(
	`S_ISDIR
(
ﬁd_öode
->
i_mode
)) {

257 
îr
 = -
EIO
;

258 
dú_de
 = 
	`exofs_dŸdŸ
(
ﬁd_öode
, &
dú_∑ge
);

259 i‡(!
dú_de
)

260 
out_ﬁd
;

263 i‡(
√w_öode
) {

264 
∑ge
 *
√w_∑ge
;

265 
exofs_dú_íåy
 *
√w_de
;

267 
îr
 = -
ENOTEMPTY
;

268 i‡(
dú_de
 && !
	`exofs_em±y_dú
(
√w_öode
))

269 
out_dú
;

271 
îr
 = -
ENOENT
;

272 
√w_de
 = 
	`exofs_föd_íåy
(
√w_dú
, 
√w_díåy
, &
√w_∑ge
);

273 i‡(!
√w_de
)

274 
out_dú
;

275 
	`öode_öc_lök_cou¡
(
ﬁd_öode
);

276 
îr
 = 
	`exofs_£t_lök
(
√w_dú
, 
√w_de
, 
√w_∑ge
, 
ﬁd_öode
);

277 
√w_öode
->
i_˘ime
 = 
CURRENT_TIME
;

278 i‡(
dú_de
)

279 
	`dr›_∆ök
(
√w_öode
);

280 
	`öode_dec_lök_cou¡
(
√w_öode
);

281 i‡(
îr
)

282 
out_dú
;

284 i‡(
dú_de
) {

285 
îr
 = -
EMLINK
;

286 i‡(
√w_dú
->
i_∆ök
 >
EXOFS_LINK_MAX
)

287 
out_dú
;

289 
	`öode_öc_lök_cou¡
(
ﬁd_öode
);

290 
îr
 = 
	`exofs_add_lök
(
√w_díåy
, 
ﬁd_öode
);

291 i‡(
îr
) {

292 
	`öode_dec_lök_cou¡
(
ﬁd_öode
);

293 
out_dú
;

295 i‡(
dú_de
)

296 
	`öode_öc_lök_cou¡
(
√w_dú
);

299 
ﬁd_öode
->
i_˘ime
 = 
CURRENT_TIME
;

301 
	`exofs_dñëe_íåy
(
ﬁd_de
, 
ﬁd_∑ge
);

302 
	`öode_dec_lök_cou¡
(
ﬁd_öode
);

304 i‡(
dú_de
) {

305 
îr
 = 
	`exofs_£t_lök
(
ﬁd_öode
, 
dú_de
, 
dú_∑ge
, 
√w_dú
);

306 
	`öode_dec_lök_cou¡
(
ﬁd_dú
);

307 i‡(
îr
)

308 
out_dú
;

313 
out_dú
:

314 i‡(
dú_de
) {

315 
	`kunm≠
(
dú_∑ge
);

316 
	`∑ge_ˇche_ªÀa£
(
dú_∑ge
);

318 
out_ﬁd
:

319 
	`kunm≠
(
ﬁd_∑ge
);

320 
	`∑ge_ˇche_ªÀa£
(
ﬁd_∑ge
);

321 
out
:

322  
îr
;

323 
	}
}

325 c⁄° 
öode_›î©i⁄s
 
	gexofs_dú_öode_›î©i⁄s
 = {

326 .
¸óã
 = 
exofs_¸óã
,

327 .
	glookup
 = 
exofs_lookup
,

328 .
	glök
 = 
exofs_lök
,

329 .
	gu∆ök
 = 
exofs_u∆ök
,

330 .
	gsymlök
 = 
exofs_symlök
,

331 .
	gmkdú
 = 
exofs_mkdú
,

332 .
	grmdú
 = 
exofs_rmdú
,

333 .
	gmknod
 = 
exofs_mknod
,

334 .
	gª«me
 = 
exofs_ª«me
,

335 .
	g£èâr
 = 
exofs_£èâr
,

338 c⁄° 
öode_›î©i⁄s
 
	gexofs_•ecül_öode_›î©i⁄s
 = {

339 .
£èâr
 = 
exofs_£èâr
,

	@osd.c

25 
	~<scsi/scsi_devi˚.h
>

26 
	~<scsi/osd_£n£.h
>

28 
	~"exofs.h
"

30 
	$exofs_check_ok_ªsid
(
osd_ªque°
 *
‹
, 
u64
 *
ö_ªsid
, u64 *
out_ªsid
)

32 
osd_£n£_öfo
 
osi
;

33 
ªt
 = 
	`osd_ªq_decode_£n£
(
‹
, &
osi
);

35 i‡(
ªt
) {

36 i‡(
osi
.
addôi⁄Æ_code
 =
scsi_övÆid_fõld_ö_cdb
) {

37 i‡(
osi
.
cdb_fõld_off£t
 =
OSD_CFO_STARTING_BYTE
)

38 
ªt
 = -
EFAULT
;

39 i‡(
osi
.
cdb_fõld_off£t
 =
OSD_CFO_OBJECT_ID
)

40 
ªt
 = -
ENOENT
;

42 
ªt
 = -
EINVAL
;

43 } i‡(
osi
.
addôi⁄Æ_code
 =
osd_quŸa_îr‹
)

44 
ªt
 = -
ENOSPC
;

46 
ªt
 = -
EIO
;

50 i‡(
ö_ªsid
)

51 *
ö_ªsid
 = 
‹
->
ö
.
ªq
 ? or->ö.ªq->
ªsid_Àn
 : 0;

53 i‡(
out_ªsid
)

54 *
out_ªsid
 = 
‹
->
out
.
ªq
 ? or->out.ªq->
ªsid_Àn
 : 0;

56  
ªt
;

57 
	}
}

59 
	$exofs_make_¸edítül
(
u8
 
¸ed_a
[
OSD_CAP_LEN
], c⁄° 
osd_obj_id
 *
obj
)

61 
	`osd_£c_öô_no£c_dﬂŒ_ˇps
(
¸ed_a
, 
obj
, 
Ál£
, 
åue
);

62 
	}
}

67 
	$exofs_sync_›
(
osd_ªque°
 *
‹
, 
timeout
, 
uöt8_t
 *
¸edítül
)

69 
ªt
;

71 
‹
->
timeout
 =Åimeout;

72 
ªt
 = 
	`osd_föÆize_ªque°
(
‹
, 0, 
¸edítül
, 
NULL
);

73 i‡(
ªt
) {

74 
	`EXOFS_DBGMSG
("FaûdÅÿosd_föÆize_ªque°(Ë=> %d\n", 
ªt
);

75  
ªt
;

78 
ªt
 = 
	`osd_execuã_ªque°
(
‹
);

80 i‡(
ªt
)

81 
	`EXOFS_DBGMSG
("osd_execuã_ªque°(Ë=> %d\n", 
ªt
);

83  
ªt
;

84 
	}
}

89 
	$exofs_async_›
(
osd_ªque°
 *
‹
, 
osd_ªq_d⁄e_‚
 *
async_d⁄e
,

90 *
ˇŒî_c⁄ãxt
, 
u8
 *
¸ed
)

92 
ªt
;

94 
ªt
 = 
	`osd_föÆize_ªque°
(
‹
, 0, 
¸ed
, 
NULL
);

95 i‡(
ªt
) {

96 
	`EXOFS_DBGMSG
("FaûdÅÿosd_föÆize_ªque°(Ë=> %d\n", 
ªt
);

97  
ªt
;

100 
ªt
 = 
	`osd_execuã_ªque°_async
(
‹
, 
async_d⁄e
, 
ˇŒî_c⁄ãxt
);

102 i‡(
ªt
)

103 
	`EXOFS_DBGMSG
("osd_execuã_ªque°_async(Ë=> %d\n", 
ªt
);

104  
ªt
;

105 
	}
}

107 
	$exåa˘_©å_‰om_ªq
(
osd_ªque°
 *
‹
, 
osd_©å
 *
©å
)

109 
osd_©å
 
cur_©å
 = {.
©å_∑ge
 = 0};

110 *
ôî
 = 
NULL
;

111 
√Àm
;

114 
√Àm
 = 1;

115 
	`osd_ªq_decode_gë_©å_li°
(
‹
, &
cur_©å
, &
√Àm
, &
ôî
);

116 i‡((
cur_©å
.
©å_∑ge
 =
©å
->attr_page) &&

117 (
cur_©å
.
©å_id
 =
©å
->attr_id)) {

118 
©å
->
Àn
 = 
cur_©å
.len;

119 
©å
->
vÆ_±r
 = 
cur_©å
.val_ptr;

122 } 
ôî
);

124  -
EIO
;

125 
	}
}

	@super.c

34 
	~<löux/smp_lock.h
>

35 
	~<löux/°rög.h
>

36 
	~<löux/∑r£r.h
>

37 
	~<löux/vfs.h
>

38 
	~<löux/øndom.h
>

39 
	~<löux/exp‹tfs.h
>

41 
	~"exofs.h
"

50 
	sexofs_mou¡›t
 {

51 c⁄° *
	mdev_«me
;

52 
uöt64_t
 
	mpid
;

53 
	mtimeout
;

59 íum { 
	mO±_pid
, 
	mO±_to
, 
	mO±_mkfs
, 
	mO±_f‹m©
, 
	mO±_îr
 };

66 
m©ch_èbÀ_t
 
	gtokís
 = {

67 {
O±_pid
, "pid=%u"},

68 {
O±_to
, "to=%u"},

69 {
O±_îr
, 
NULL
}

76 
	$∑r£_›ti⁄s
(*
›ti⁄s
, 
exofs_mou¡›t
 *
›ts
)

78 *
p
;

79 
sub°rög_t
 
¨gs
[
MAX_OPT_ARGS
];

80 
›ti⁄
;

81 
boﬁ
 
s_pid
 = 
Ál£
;

83 
	`EXOFS_DBGMSG
("∑r£_›ti⁄†%s\n", 
›ti⁄s
);

85 
	`mem£t
(
›ts
, 0, (*opts));

86 
›ts
->
timeout
 = 
BLK_DEFAULT_SG_TIMEOUT
;

88 (
p
 = 
	`°r£p
(&
›ti⁄s
, ",")Ë!
NULL
) {

89 
tokí
;

90 
°r
[32];

92 i‡(!*
p
)

95 
tokí
 = 
	`m©ch_tokí
(
p
, 
tokís
, 
¨gs
);

96 
tokí
) {

97 
O±_pid
:

98 i‡(0 =
	`m©ch_°æ˝y
(
°r
, &
¨gs
[0], (str)))

99  -
EINVAL
;

100 
›ts
->
pid
 = 
	`sim∂e_°πouŒ
(
°r
, 
NULL
, 0);

101 i‡(
›ts
->
pid
 < 
EXOFS_MIN_PID
) {

102 
	`EXOFS_ERR
("Partition ID must be >= %u",

103 
EXOFS_MIN_PID
);

104  -
EINVAL
;

106 
s_pid
 = 1;

108 
O±_to
:

109 i‡(
	`m©ch_öt
(&
¨gs
[0], &
›ti⁄
))

110  -
EINVAL
;

111 i‡(
›ti⁄
 <= 0) {

112 
	`EXOFS_ERR
("Timout must be > 0");

113  -
EINVAL
;

115 
›ts
->
timeout
 = 
›ti⁄
 * 
HZ
;

120 i‡(!
s_pid
) {

121 
	`EXOFS_ERR
("NeedÅo specifyÅhe following options:\n");

122 
	`EXOFS_ERR
(" -oÖid=pid_no_to_use\n");

123  -
EINVAL
;

127 
	}
}

136 
kmem_ˇche
 *
	gexofs_öode_ˇchï
;

141 
öode
 *
	$exofs_Æloc_öode
(
su≥r_block
 *
sb
)

143 
exofs_i_öfo
 *
oi
;

145 
oi
 = 
	`kmem_ˇche_Æloc
(
exofs_öode_ˇchï
, 
GFP_KERNEL
);

146 i‡(!
oi
)

147  
NULL
;

149 
oi
->
vfs_öode
.
i_vîsi⁄
 = 1;

150  &
oi
->
vfs_öode
;

151 
	}
}

156 
	$exofs_de°roy_öode
(
öode
 *inode)

158 
	`kmem_ˇche_‰ì
(
exofs_öode_ˇchï
, 
	`exofs_i
(
öode
));

159 
	}
}

164 
	$exofs_öô_⁄˚
(*
foo
)

166 
exofs_i_öfo
 *
oi
 = 
foo
;

168 
	`öode_öô_⁄˚
(&
oi
->
vfs_öode
);

169 
	}
}

174 
	$öô_öodeˇche
()

176 
exofs_öode_ˇchï
 = 
	`kmem_ˇche_¸óã
("exofs_inode_cache",

177 (
exofs_i_öfo
), 0,

178 
SLAB_RECLAIM_ACCOUNT
 | 
SLAB_MEM_SPREAD
,

179 
exofs_öô_⁄˚
);

180 i‡(
exofs_öode_ˇchï
 =
NULL
)

181  -
ENOMEM
;

183 
	}
}

188 
	$de°roy_öodeˇche
()

190 
	`kmem_ˇche_de°roy
(
exofs_öode_ˇchï
);

191 
	}
}

196 c⁄° 
su≥r_›î©i⁄s
 
	gexofs_s›s
;

197 c⁄° 
exp‹t_›î©i⁄s
 
	gexofs_exp‹t_›s
;

202 
	$exofs_sync_fs
(
su≥r_block
 *
sb
, 
waô
)

204 
exofs_sb_öfo
 *
sbi
;

205 
exofs_fscb
 *
fscb
;

206 
osd_ªque°
 *
‹
;

207 
osd_obj_id
 
obj
;

208 
ªt
 = -
ENOMEM
;

210 
fscb
 = 
	`kzÆloc
((
exofs_fscb
), 
GFP_KERNEL
);

211 i‡(!
fscb
) {

212 
	`EXOFS_ERR
("exofs_write_super: memoryállocation failed.\n");

213  -
ENOMEM
;

216 
	`lock_su≥r
(
sb
);

217 
sbi
 = 
sb
->
s_fs_öfo
;

218 
fscb
->
s_√xtid
 = 
	`˝u_to_À64
(
sbi
->s_nextid);

219 
fscb
->
s_numfûes
 = 
	`˝u_to_À32
(
sbi
->s_numfiles);

220 
fscb
->
s_magic
 = 
	`˝u_to_À16
(
sb
->s_magic);

221 
fscb
->
s_√wfs
 = 0;

223 
‹
 = 
	`osd_°¨t_ªque°
(
sbi
->
s_dev
, 
GFP_KERNEL
);

224 i‡(
	`u∆ikñy
(!
‹
)) {

225 
	`EXOFS_ERR
("exofs_write_super: osd_start_request failed.\n");

226 
out
;

229 
obj
.
∑πôi⁄
 = 
sbi
->
s_pid
;

230 
obj
.
id
 = 
EXOFS_SUPER_ID
;

231 
ªt
 = 
	`osd_ªq_wrôe_kîn
(
‹
, &
obj
, 0, 
fscb
, (*fscb));

232 i‡(
	`u∆ikñy
(
ªt
)) {

233 
	`EXOFS_ERR
("exofs_write_super: osd_req_write_kern failed.\n");

234 
out
;

237 
ªt
 = 
	`exofs_sync_›
(
‹
, 
sbi
->
s_timeout
, sbi->
s_¸ed
);

238 i‡(
	`u∆ikñy
(
ªt
)) {

239 
	`EXOFS_ERR
("exofs_write_super:Éxofs_sync_op failed.\n");

240 
out
;

242 
sb
->
s_dút
 = 0;

244 
out
:

245 i‡(
‹
)

246 
	`osd_íd_ªque°
(
‹
);

247 
	`u∆ock_su≥r
(
sb
);

248 
	`k‰ì
(
fscb
);

249  
ªt
;

250 
	}
}

252 
	$exofs_wrôe_su≥r
(
su≥r_block
 *
sb
)

254 i‡(!(
sb
->
s_Êags
 & 
MS_RDONLY
))

255 
	`exofs_sync_fs
(
sb
, 1);

257 
sb
->
s_dút
 = 0;

258 
	}
}

264 
	$exofs_put_su≥r
(
su≥r_block
 *
sb
)

266 
num_≥nd
;

267 
exofs_sb_öfo
 *
sbi
 = 
sb
->
s_fs_öfo
;

269 i‡(
sb
->
s_dút
)

270 
	`exofs_wrôe_su≥r
(
sb
);

273 
num_≥nd
 = 
	`©omic_ªad
(&
sbi
->
s_cuº_≥ndög
);Çum_pend > 0;

274 
num_≥nd
 = 
	`©omic_ªad
(&
sbi
->
s_cuº_≥ndög
)) {

275 
waô_queue_hód_t
 
wq
;

276 
	`öô_waôqueue_hód
(&
wq
);

277 
	`waô_evít_timeout
(
wq
,

278 (
	`©omic_ªad
(&
sbi
->
s_cuº_≥ndög
) == 0),

279 
	`m£cs_to_jiffõs
(100));

282 
	`osduld_put_devi˚
(
sbi
->
s_dev
);

283 
	`k‰ì
(
sb
->
s_fs_öfo
);

284 
sb
->
s_fs_öfo
 = 
NULL
;

285 
	}
}

290 
	$exofs_fûl_su≥r
(
su≥r_block
 *
sb
, *
d©a
, 
sûít
)

292 
öode
 *
roŸ
;

293 
exofs_mou¡›t
 *
›ts
 = 
d©a
;

294 
exofs_sb_öfo
 *
sbi
;

295 
exofs_fscb
 
fscb
;

296 
osd_ªque°
 *
‹
 = 
NULL
;

297 
osd_obj_id
 
obj
;

298 
ªt
;

300 
sbi
 = 
	`kzÆloc
((*sbi), 
GFP_KERNEL
);

301 i‡(!
sbi
)

302  -
ENOMEM
;

303 
sb
->
s_fs_öfo
 = 
sbi
;

306 
sbi
->
s_dev
 = 
	`osduld_∑th_lookup
(
›ts
->
dev_«me
);

307 i‡(
	`IS_ERR
(
sbi
->
s_dev
)) {

308 
ªt
 = 
	`PTR_ERR
(
sbi
->
s_dev
);

309 
sbi
->
s_dev
 = 
NULL
;

310 
‰ì_sbi
;

313 
sbi
->
s_pid
 = 
›ts
->
pid
;

314 
sbi
->
s_timeout
 = 
›ts
->
timeout
;

317 
	`mem£t
(
sb
->
s_id
, 0, (sb->s_id));

318 
	`°r˝y
(
sb
->
s_id
, "exofs");

319 
sb
->
s_blocksize
 = 
EXOFS_BLKSIZE
;

320 
sb
->
s_blocksize_bôs
 = 
EXOFS_BLKSHIFT
;

321 
sb
->
s_maxbyãs
 = 
MAX_LFS_FILESIZE
;

322 
	`©omic_£t
(&
sbi
->
s_cuº_≥ndög
, 0);

323 
sb
->
s_bdev
 = 
NULL
;

324 
sb
->
s_dev
 = 0;

327 
obj
.
∑πôi⁄
 = 
sbi
->
s_pid
;

328 
obj
.
id
 = 
EXOFS_SUPER_ID
;

329 
	`exofs_make_¸edítül
(
sbi
->
s_¸ed
, &
obj
);

331 
‹
 = 
	`osd_°¨t_ªque°
(
sbi
->
s_dev
, 
GFP_KERNEL
);

332 i‡(
	`u∆ikñy
(!
‹
)) {

333 i‡(!
sûít
)

334 
	`EXOFS_ERR
(

336 
ªt
 = -
ENOMEM
;

337 
‰ì_sbi
;

339 
ªt
 = 
	`osd_ªq_ªad_kîn
(
‹
, &
obj
, 0, &
fscb
, (fscb));

340 i‡(
	`u∆ikñy
(
ªt
)) {

341 i‡(!
sûít
)

342 
	`EXOFS_ERR
(

344 
ªt
 = -
ENOMEM
;

345 
‰ì_sbi
;

348 
ªt
 = 
	`exofs_sync_›
(
‹
, 
sbi
->
s_timeout
, sbi->
s_¸ed
);

349 i‡(
	`u∆ikñy
(
ªt
)) {

350 i‡(!
sûít
)

351 
	`EXOFS_ERR
("exofs_fill_super:Éxofs_sync_op failed.\n");

352 
ªt
 = -
EIO
;

353 
‰ì_sbi
;

356 
sb
->
s_magic
 = 
	`À16_to_˝u
(
fscb
.s_magic);

357 
sbi
->
s_√xtid
 = 
	`À64_to_˝u
(
fscb
.s_nextid);

358 
sbi
->
s_numfûes
 = 
	`À32_to_˝u
(
fscb
.s_numfiles);

361 i‡(
sb
->
s_magic
 !
EXOFS_SUPER_MAGIC
) {

362 i‡(!
sûít
)

363 
	`EXOFS_ERR
("ERROR: Bad magic value\n");

364 
ªt
 = -
EINVAL
;

365 
‰ì_sbi
;

369 
	`gë_øndom_byãs
(&
sbi
->
s_√xt_gíî©i⁄
, (
u32
));

370 
	`•ö_lock_öô
(&
sbi
->
s_√xt_gí_lock
);

373 
sb
->
s_›
 = &
exofs_s›s
;

374 
sb
->
s_exp‹t_›
 = &
exofs_exp‹t_›s
;

375 
roŸ
 = 
	`exofs_igë
(
sb
, 
EXOFS_ROOT_ID
 - 
EXOFS_OBJ_OFF
);

376 i‡(
	`IS_ERR
(
roŸ
)) {

377 
	`EXOFS_ERR
("ERROR:Éxofs_iget failed\n");

378 
ªt
 = 
	`PTR_ERR
(
roŸ
);

379 
‰ì_sbi
;

381 
sb
->
s_roŸ
 = 
	`d_Æloc_roŸ
(
roŸ
);

382 i‡(!
sb
->
s_roŸ
) {

383 
	`ùut
(
roŸ
);

384 
	`EXOFS_ERR
("ERROR: getÑoot inode failed\n");

385 
ªt
 = -
ENOMEM
;

386 
‰ì_sbi
;

389 i‡(!
	`S_ISDIR
(
roŸ
->
i_mode
)) {

390 
	`dput
(
sb
->
s_roŸ
);

391 
sb
->
s_roŸ
 = 
NULL
;

392 
	`EXOFS_ERR
("ERROR: corruptÑoot inode (mode = %hd)\n",

393 
roŸ
->
i_mode
);

394 
ªt
 = -
EINVAL
;

395 
‰ì_sbi
;

398 
ªt
 = 0;

399 
out
:

400 i‡(
‹
)

401 
	`osd_íd_ªque°
(
‹
);

402  
ªt
;

404 
‰ì_sbi
:

405 
	`osduld_put_devi˚
(
sbi
->
s_dev
);

406 
	`k‰ì
(
sbi
);

407 
out
;

408 
	}
}

413 
	$exofs_gë_sb
(
fûe_sy°em_ty≥
 *
ty≥
,

414 
Êags
, c⁄° *
dev_«me
,

415 *
d©a
, 
vfsmou¡
 *
m¡
)

417 
exofs_mou¡›t
 
›ts
;

418 
ªt
;

420 
ªt
 = 
	`∑r£_›ti⁄s
(
d©a
, &
›ts
);

421 i‡(
ªt
)

422  
ªt
;

424 
›ts
.
dev_«me
 = dev_name;

425  
	`gë_sb_nodev
(
ty≥
, 
Êags
, &
›ts
, 
exofs_fûl_su≥r
, 
m¡
);

426 
	}
}

432 
	$exofs_°©fs
(
díåy
 *díåy, 
k°©fs
 *
buf
)

434 
su≥r_block
 *
sb
 = 
díåy
->
d_sb
;

435 
exofs_sb_öfo
 *
sbi
 = 
sb
->
s_fs_öfo
;

436 
osd_obj_id
 
obj
 = {
sbi
->
s_pid
, 0};

437 
osd_©å
 
©ås
[] = {

438 
	`ATTR_DEF
(
OSD_APAGE_PARTITION_QUOTAS
,

439 
OSD_ATTR_PQ_CAPACITY_QUOTA
, (
__be64
)),

440 
	`ATTR_DEF
(
OSD_APAGE_PARTITION_INFORMATION
,

441 
OSD_ATTR_PI_USED_CAPACITY
, (
__be64
)),

443 
uöt64_t
 
ˇ∑côy
 = 
ULLONG_MAX
;

444 
uöt64_t
 
u£d
 = 
ULLONG_MAX
;

445 
osd_ªque°
 *
‹
;

446 
uöt8_t
 
¸ed_a
[
OSD_CAP_LEN
];

447 
ªt
;

450 
	`exofs_make_¸edítül
(
¸ed_a
, &
obj
);

452 
‹
 = 
	`osd_°¨t_ªque°
(
sbi
->
s_dev
, 
GFP_KERNEL
);

453 i‡(
	`u∆ikñy
(!
‹
)) {

454 
	`EXOFS_DBGMSG
("exofs_statfs: osd_start_request failed.\n");

455  -
ENOMEM
;

458 
	`osd_ªq_gë_©åibuãs
(
‹
, &
obj
);

459 
	`osd_ªq_add_gë_©å_li°
(
‹
, 
©ås
, 
	`ARRAY_SIZE
(attrs));

460 
ªt
 = 
	`exofs_sync_›
(
‹
, 
sbi
->
s_timeout
, 
¸ed_a
);

461 i‡(
	`u∆ikñy
(
ªt
))

462 
out
;

464 
ªt
 = 
	`exåa˘_©å_‰om_ªq
(
‹
, &
©ås
[0]);

465 i‡(
	`likñy
(!
ªt
))

466 
ˇ∑côy
 = 
	`gë_u«lig√d_be64
(
©ås
[0].
vÆ_±r
);

468 
	`EXOFS_DBGMSG
("exofs_statfs: get capacity failed.\n");

470 
ªt
 = 
	`exåa˘_©å_‰om_ªq
(
‹
, &
©ås
[1]);

471 i‡(
	`likñy
(!
ªt
))

472 
u£d
 = 
	`gë_u«lig√d_be64
(
©ås
[1].
vÆ_±r
);

474 
	`EXOFS_DBGMSG
("exofs_statfs: get used-space failed.\n");

477 
buf
->
f_ty≥
 = 
EXOFS_SUPER_MAGIC
;

478 
buf
->
f_bsize
 = 
EXOFS_BLKSIZE
;

479 
buf
->
f_blocks
 = (
ˇ∑côy
 >> 
EXOFS_BLKSHIFT
);

480 
buf
->
f_b‰ì
 = ((
ˇ∑côy
 - 
u£d
Ë>> 
EXOFS_BLKSHIFT
);

481 
buf
->
f_bavaû
 = buf->
f_b‰ì
;

482 
buf
->
f_fûes
 = 
sbi
->
s_numfûes
;

483 
buf
->
f_f‰ì
 = 
EXOFS_MAX_ID
 - 
sbi
->
s_numfûes
;

484 
buf
->
f_«mñí
 = 
EXOFS_NAME_LEN
;

486 
out
:

487 
	`osd_íd_ªque°
(
‹
);

488  
ªt
;

489 
	}
}

491 c⁄° 
su≥r_›î©i⁄s
 
	gexofs_s›s
 = {

492 .
Æloc_öode
 = 
exofs_Æloc_öode
,

493 .
	gde°roy_öode
 = 
exofs_de°roy_öode
,

494 .
	gwrôe_öode
 = 
exofs_wrôe_öode
,

495 .
	gdñëe_öode
 = 
exofs_dñëe_öode
,

496 .
	gput_su≥r
 = 
exofs_put_su≥r
,

497 .
	gwrôe_su≥r
 = 
exofs_wrôe_su≥r
,

498 .
	gsync_fs
 = 
exofs_sync_fs
,

499 .
	g°©fs
 = 
exofs_°©fs
,

506 
díåy
 *
	$exofs_gë_∑ª¡
(
díåy
 *
chûd
)

508 
öo
 = 
	`exofs_∑ª¡_öo
(
chûd
);

510 i‡(!
öo
)

511  
NULL
;

513  
	`d_obèö_Æüs
(
	`exofs_igë
(
chûd
->
d_öode
->
i_sb
, 
öo
));

514 
	}
}

516 
öode
 *
	$exofs_nfs_gë_öode
(
su≥r_block
 *
sb
,

517 
u64
 
öo
, 
u32
 
gíî©i⁄
)

519 
öode
 *inode;

521 
öode
 = 
	`exofs_igë
(
sb
, 
öo
);

522 i‡(
	`IS_ERR
(
öode
))

523  
	`ERR_CAST
(
öode
);

524 i‡(
gíî©i⁄
 && 
öode
->
i_gíî©i⁄
 != generation) {

526 
	`ùut
(
öode
);

527  
	`ERR_PTR
(-
ESTALE
);

529  
öode
;

530 
	}
}

532 
díåy
 *
	$exofs_fh_to_díåy
(
su≥r_block
 *
sb
,

533 
fid
 *fid, 
fh_Àn
, 
fh_ty≥
)

535  
	`gíîic_fh_to_díåy
(
sb
, 
fid
, 
fh_Àn
, 
fh_ty≥
,

536 
exofs_nfs_gë_öode
);

537 
	}
}

539 
díåy
 *
	$exofs_fh_to_∑ª¡
(
su≥r_block
 *
sb
,

540 
fid
 *fid, 
fh_Àn
, 
fh_ty≥
)

542  
	`gíîic_fh_to_∑ª¡
(
sb
, 
fid
, 
fh_Àn
, 
fh_ty≥
,

543 
exofs_nfs_gë_öode
);

544 
	}
}

546 c⁄° 
exp‹t_›î©i⁄s
 
	gexofs_exp‹t_›s
 = {

547 .
fh_to_díåy
 = 
exofs_fh_to_díåy
,

548 .
	gfh_to_∑ª¡
 = 
exofs_fh_to_∑ª¡
,

549 .
	ggë_∑ª¡
 = 
exofs_gë_∑ª¡
,

559 
fûe_sy°em_ty≥
 
	gexofs_ty≥
 = {

560 .
ow√r
 = 
THIS_MODULE
,

561 .
	g«me
 = "exofs",

562 .
	ggë_sb
 = 
exofs_gë_sb
,

563 .
	gkûl_sb
 = 
gíîic_shutdown_su≥r
,

566 
__öô
 
	$öô_exofs
()

568 
îr
;

570 
îr
 = 
	`öô_öodeˇche
();

571 i‡(
îr
)

572 
out
;

574 
îr
 = 
	`ªgi°î_fûesy°em
(&
exofs_ty≥
);

575 i‡(
îr
)

576 
out_d
;

579 
out_d
:

580 
	`de°roy_öodeˇche
();

581 
out
:

582  
îr
;

583 
	}
}

585 
__exô
 
	$exô_exofs
()

587 
	`uƒegi°î_fûesy°em
(&
exofs_ty≥
);

588 
	`de°roy_öodeˇche
();

589 
	}
}

591 
MODULE_AUTHOR
("Avishay Traeger <avishay@gmail.com>");

592 
MODULE_DESCRIPTION
("exofs");

593 
MODULE_LICENSE
("GPL");

595 
	$moduÀ_öô
(
öô_exofs
)

596 
	`moduÀ_exô
(
exô_exofs
)

	@symlink.c

34 
	~<löux/«mei.h
>

36 
	~"exofs.h
"

38 *
	$exofs_fﬁlow_lök
(
díåy
 *díåy, 
«meid©a
 *
nd
)

40 
exofs_i_öfo
 *
oi
 = 
	`exofs_i
(
díåy
->
d_öode
);

42 
	`nd_£t_lök
(
nd
, (*)
oi
->
i_d©a
);

43  
NULL
;

44 
	}
}

46 c⁄° 
öode_›î©i⁄s
 
	gexofs_symlök_öode_›î©i⁄s
 = {

47 .
ªadlök
 = 
gíîic_ªadlök
,

48 .
	gfﬁlow_lök
 = 
∑ge_fﬁlow_lök_light
,

49 .
	gput_lök
 = 
∑ge_put_lök
,

52 c⁄° 
öode_›î©i⁄s
 
	gexofs_Á°_symlök_öode_›î©i⁄s
 = {

53 .
ªadlök
 = 
gíîic_ªadlök
,

54 .
	gfﬁlow_lök
 = 
exofs_fﬁlow_lök
,

	@/usr/include/linux/fs.h

1 #i‚de‡
_LINUX_FS_H


2 
	#_LINUX_FS_H


	)

9 
	~<löux/limôs.h
>

10 
	~<löux/io˘l.h
>

11 
	~<löux/blk_ty≥s.h
>

12 
	~<löux/ty≥s.h
>

25 #unde‡
NR_OPEN


26 
	#INR_OPEN_CUR
 1024

	)

27 
	#INR_OPEN_MAX
 4096

	)

29 
	#BLOCK_SIZE_BITS
 10

	)

30 
	#BLOCK_SIZE
 (1<<
BLOCK_SIZE_BITS
)

	)

32 
	#SEEK_SET
 0

	)

33 
	#SEEK_CUR
 1

	)

34 
	#SEEK_END
 2

	)

35 
	#SEEK_MAX
 
SEEK_END


	)

37 
	sf°rim_ønge
 {

38 
__u64
 
	m°¨t
;

39 
__u64
 
	mÀn
;

40 
__u64
 
	mmöÀn
;

44 
	sfûes_°©_°ru˘
 {

45 
	mƒ_fûes
;

46 
	mƒ_‰ì_fûes
;

47 
	mmax_fûes
;

50 
	söodes_°©_t
 {

51 
	mƒ_öodes
;

52 
	mƒ_unu£d
;

53 
	mdummy
[5];

57 
	#NR_FILE
 8192

	)

59 
	#MAY_EXEC
 1

	)

60 
	#MAY_WRITE
 2

	)

61 
	#MAY_READ
 4

	)

62 
	#MAY_APPEND
 8

	)

63 
	#MAY_ACCESS
 16

	)

64 
	#MAY_OPEN
 32

	)

72 
	#FMODE_READ
 ((
fmode_t
)1)

	)

74 
	#FMODE_WRITE
 ((
fmode_t
)2)

	)

76 
	#FMODE_LSEEK
 ((
fmode_t
)4)

	)

78 
	#FMODE_PREAD
 ((
fmode_t
)8)

	)

80 
	#FMODE_PWRITE
 ((
fmode_t
)16)

	)

82 
	#FMODE_EXEC
 ((
fmode_t
)32)

	)

84 
	#FMODE_NDELAY
 ((
fmode_t
)64)

	)

86 
	#FMODE_EXCL
 ((
fmode_t
)128)

	)

89 
	#FMODE_WRITE_IOCTL
 ((
fmode_t
)256)

	)

91 
	#FMODE_32BITHASH
 ((
fmode_t
)0x200)

	)

93 
	#FMODE_64BITHASH
 ((
fmode_t
)0x400)

	)

101 
	#FMODE_NOCMTIME
 ((
fmode_t
)2048)

	)

104 
	#FMODE_RANDOM
 ((
fmode_t
)4096)

	)

162 
	#RW_MASK
 
REQ_WRITE


	)

163 
	#RWA_MASK
 (1 << 
BIO_RW_AHEAD
)

	)

165 
	#READ
 0

	)

166 
	#WRITE
 1

	)

167 
	#READA
 
RWA_MASK


	)

168 
	#SWRITE
 (
WRITE
 | 
READA
)

	)

170 
	#READ_SYNC
 (
READ
 | (1 << 
BIO_RW_SYNCIO
Ë| (1 << 
BIO_RW_UNPLUG
))

	)

171 
	#READ_META
 (
READ
 | (1 << 
BIO_RW_META
))

	)

172 
	#WRITE_SYNC_PLUG
 (
WRITE
 | (1 << 
BIO_RW_SYNCIO
Ë| (1 << 
BIO_RW_NOIDLE
))

	)

173 
	#WRITE_SYNC
 (
WRITE_SYNC_PLUG
 | (1 << 
BIO_RW_UNPLUG
))

	)

174 
	#WRITE_ODIRECT_PLUG
 (
WRITE
 | (1 << 
BIO_RW_SYNCIO
))

	)

175 
	#WRITE_META
 (
WRITE
 | (1 << 
BIO_RW_META
))

	)

176 
	#SWRITE_SYNC_PLUG
 \

177 (
SWRITE
 | (1 << 
BIO_RW_SYNCIO
Ë| (1 << 
BIO_RW_NOIDLE
))

	)

178 
	#SWRITE_SYNC
 (
SWRITE_SYNC_PLUG
 | (1 << 
BIO_RW_UNPLUG
))

	)

179 
	#WRITE_BARRIER
 (
WRITE_SYNC
 | (1 << 
BIO_RW_BARRIER
))

	)

181 
	#WRITE_FLUSH
 (
WRITE_SYNC
 | (1 << 
BIO_RW_FLUSH
))

	)

182 
	#WRITE_FUA
 (
WRITE_SYNC
 | (1 << 
BIO_RW_FUA
))

	)

183 
	#WRITE_FLUSH_FUA
 (
WRITE_FLUSH
 | 
WRITE_FUA
)

	)

190 
	#DISCARD_NOBARRIER
 (
WRITE
 | (1 << 
BIO_RW_DISCARD
))

	)

191 
	#DISCARD_BARRIER
 (
DISCARD_NOBARRIER
 | (1 << 
BIO_RW_BARRIER
))

	)

193 
	#SEL_IN
 1

	)

194 
	#SEL_OUT
 2

	)

195 
	#SEL_EX
 4

	)

198 
	#FS_REQUIRES_DEV
 1

	)

199 
	#FS_BINARY_MOUNTDATA
 2

	)

200 
	#FS_HAS_SUBTYPE
 4

	)

201 
	#FS_HAS_NEW_FREEZE
 512

	)

202 
	#FS_REVAL_DOT
 16384

	)

203 
	#FS_RENAME_DOES_D_MOVE
 32768

	)

206 
	#FS_HANDLE_QUOTA
 (1<<16Ë

	)

207 
	#FS_WEAK_REVALIDATE
 (1<<17Ë

	)

214 
	#sb_has_√w_‰ìze
(
sb
Ë((sb)->
s_ty≥
->
fs_Êags
 & 
FS_HAS_NEW_FREEZE
)

	)

219 
	#MS_RDONLY
 1

	)

220 
	#MS_NOSUID
 2

	)

221 
	#MS_NODEV
 4

	)

222 
	#MS_NOEXEC
 8

	)

223 
	#MS_SYNCHRONOUS
 16

	)

224 
	#MS_REMOUNT
 32

	)

225 
	#MS_MANDLOCK
 64

	)

226 
	#MS_DIRSYNC
 128

	)

227 
	#MS_NOATIME
 1024

	)

228 
	#MS_NODIRATIME
 2048

	)

229 
	#MS_BIND
 4096

	)

230 
	#MS_MOVE
 8192

	)

231 
	#MS_REC
 16384

	)

232 
	#MS_VERBOSE
 32768

	)

234 
	#MS_SILENT
 32768

	)

235 
	#MS_POSIXACL
 (1<<16Ë

	)

236 
	#MS_UNBINDABLE
 (1<<17Ë

	)

237 
	#MS_PRIVATE
 (1<<18Ë

	)

238 
	#MS_SLAVE
 (1<<19Ë

	)

239 
	#MS_SHARED
 (1<<20Ë

	)

240 
	#MS_RELATIME
 (1<<21Ë

	)

241 
	#MS_KERNMOUNT
 (1<<22Ë

	)

242 
	#MS_I_VERSION
 (1<<23Ë

	)

243 
	#MS_STRICTATIME
 (1<<24Ë

	)

244 
	#MS_SNAP_STABLE
 (1<<27Ë

	)

245 
	#MS_BORN
 (1<<29)

	)

246 
	#MS_ACTIVE
 (1<<30)

	)

247 
	#MS_NOUSER
 (1<<31)

	)

252 
	#MS_RMT_MASK
 (
MS_RDONLY
|
MS_SYNCHRONOUS
|
MS_MANDLOCK
|
MS_I_VERSION
)

	)

257 
	#MS_MGC_VAL
 0xC0ED0000

	)

258 
	#MS_MGC_MSK
 0xffff0000

	)

262 
	#S_SYNC
 1

	)

263 
	#S_NOATIME
 2

	)

264 
	#S_APPEND
 4

	)

265 
	#S_IMMUTABLE
 8

	)

266 
	#S_DEAD
 16

	)

267 
	#S_NOQUOTA
 32

	)

268 
	#S_DIRSYNC
 64

	)

269 
	#S_NOCMTIME
 128

	)

270 
	#S_SWAPFILE
 256

	)

271 
	#S_PRIVATE
 512

	)

272 
	#S_AUTOMOUNT
 2048

	)

273 
	#S_AOP_EXT
 16384

	)

288 
	#__IS_FLG
(
öode
,
Êg
Ë((öode)->
i_sb
->
s_Êags
 & (Êg))

	)

290 
	#IS_RDONLY
(
öode
Ë((öode)->
i_sb
->
s_Êags
 & 
MS_RDONLY
)

	)

291 
	#IS_SYNC
(
öode
Ë(
	`__IS_FLG
(öode, 
MS_SYNCHRONOUS
) || \

292 ((
öode
)->
i_Êags
 & 
S_SYNC
))

	)

293 
	#IS_DIRSYNC
(
öode
Ë(
	`__IS_FLG
(öode, 
MS_SYNCHRONOUS
|
MS_DIRSYNC
) || \

294 ((
öode
)->
i_Êags
 & (
S_SYNC
|
S_DIRSYNC
)))

	)

295 
	#IS_MANDLOCK
(
öode
Ë
	`__IS_FLG
(öode, 
MS_MANDLOCK
)

	)

296 
	#IS_NOATIME
(
öode
Ë
	`__IS_FLG
(öode, 
MS_RDONLY
|
MS_NOATIME
)

	)

297 
	#IS_I_VERSION
(
öode
Ë
	`__IS_FLG
(öode, 
MS_I_VERSION
)

	)

299 
	#IS_NOQUOTA
(
öode
Ë((öode)->
i_Êags
 & 
S_NOQUOTA
)

	)

300 
	#IS_APPEND
(
öode
Ë((öode)->
i_Êags
 & 
S_APPEND
)

	)

301 
	#IS_IMMUTABLE
(
öode
Ë((öode)->
i_Êags
 & 
S_IMMUTABLE
)

	)

302 
	#IS_POSIXACL
(
öode
Ë
	`__IS_FLG
(öode, 
MS_POSIXACL
)

	)

304 
	#IS_DEADDIR
(
öode
Ë((öode)->
i_Êags
 & 
S_DEAD
)

	)

305 
	#IS_NOCMTIME
(
öode
Ë((öode)->
i_Êags
 & 
S_NOCMTIME
)

	)

306 
	#IS_SWAPFILE
(
öode
Ë((öode)->
i_Êags
 & 
S_SWAPFILE
)

	)

307 
	#IS_PRIVATE
(
öode
Ë((öode)->
i_Êags
 & 
S_PRIVATE
)

	)

308 
	#IS_AUTOMOUNT
(
öode
Ë((öode)->
i_Êags
 & 
S_AUTOMOUNT
)

	)

309 
	#IS_AOP_EXT
(
öode
Ë((öode)->
i_Êags
 & 
S_AOP_EXT
)

	)

314 
	#BLKROSET
 
	`_IO
(0x12,93Ë

	)

315 
	#BLKROGET
 
	`_IO
(0x12,94Ë

	)

316 
	#BLKRRPART
 
	`_IO
(0x12,95Ë

	)

317 
	#BLKGETSIZE
 
	`_IO
(0x12,96Ë

	)

318 
	#BLKFLSBUF
 
	`_IO
(0x12,97Ë

	)

319 
	#BLKRASET
 
	`_IO
(0x12,98Ë

	)

320 
	#BLKRAGET
 
	`_IO
(0x12,99Ë

	)

321 
	#BLKFRASET
 
	`_IO
(0x12,100)

	)

322 
	#BLKFRAGET
 
	`_IO
(0x12,101)

	)

323 
	#BLKSECTSET
 
	`_IO
(0x12,102)

	)

324 
	#BLKSECTGET
 
	`_IO
(0x12,103)

	)

325 
	#BLKSSZGET
 
	`_IO
(0x12,104)

	)

327 
	#BLKPG
 
	`_IO
(0x12,105)

	)

331 
	#BLKELVGET
 
	`_IOR
(0x12,106,
size_t
)

	)

332 
	#BLKELVSET
 
	`_IOW
(0x12,107,
size_t
)

	)

337 
	#BLKBSZGET
 
	`_IOR
(0x12,112,
size_t
)

	)

338 
	#BLKBSZSET
 
	`_IOW
(0x12,113,
size_t
)

	)

339 
	#BLKGETSIZE64
 
	`_IOR
(0x12,114,
size_t
Ë

	)

340 
	#BLKTRACESETUP
 
	`_IOWR
(0x12,115,
blk_u£r_åa˚_£tup
)

	)

341 
	#BLKTRACESTART
 
	`_IO
(0x12,116)

	)

342 
	#BLKTRACESTOP
 
	`_IO
(0x12,117)

	)

343 
	#BLKTRACETEARDOWN
 
	`_IO
(0x12,118)

	)

344 
	#BLKDISCARD
 
	`_IO
(0x12,119)

	)

345 
	#BLKIOMIN
 
	`_IO
(0x12,120)

	)

346 
	#BLKIOOPT
 
	`_IO
(0x12,121)

	)

347 
	#BLKALIGNOFF
 
	`_IO
(0x12,122)

	)

348 
	#BLKPBSZGET
 
	`_IO
(0x12,123)

	)

349 
	#BLKDISCARDZEROES
 
	`_IO
(0x12,124)

	)

351 
	#BMAP_IOCTL
 1

	)

352 
	#FIBMAP
 
	`_IO
(0x00,1Ë

	)

353 
	#FIGETBSZ
 
	`_IO
(0x00,2Ë

	)

354 
	#FIFREEZE
 
	`_IOWR
('X', 119, Ë

	)

355 
	#FITHAW
 
	`_IOWR
('X', 120, Ë

	)

356 
	#FITRIM
 
	`_IOWR
('X', 121, 
f°rim_ønge
Ë

	)

358 
	#FS_IOC_GETFLAGS
 
	`_IOR
('f', 1, )

	)

359 
	#FS_IOC_SETFLAGS
 
	`_IOW
('f', 2, )

	)

360 
	#FS_IOC_GETVERSION
 
	`_IOR
('v', 1, )

	)

361 
	#FS_IOC_SETVERSION
 
	`_IOW
('v', 2, )

	)

362 
	#FS_IOC_FIEMAP
 
	`_IOWR
('f', 11, 
fõm≠
)

	)

363 
	#FS_IOC32_GETFLAGS
 
	`_IOR
('f', 1, )

	)

364 
	#FS_IOC32_SETFLAGS
 
	`_IOW
('f', 2, )

	)

365 
	#FS_IOC32_GETVERSION
 
	`_IOR
('v', 1, )

	)

366 
	#FS_IOC32_SETVERSION
 
	`_IOW
('v', 2, )

	)

371 
	#FS_SECRM_FL
 0x00000001

	)

372 
	#FS_UNRM_FL
 0x00000002

	)

373 
	#FS_COMPR_FL
 0x00000004

	)

374 
	#FS_SYNC_FL
 0x00000008

	)

375 
	#FS_IMMUTABLE_FL
 0x00000010

	)

376 
	#FS_APPEND_FL
 0x00000020

	)

377 
	#FS_NODUMP_FL
 0x00000040

	)

378 
	#FS_NOATIME_FL
 0x00000080

	)

380 
	#FS_DIRTY_FL
 0x00000100

	)

381 
	#FS_COMPRBLK_FL
 0x00000200

	)

382 
	#FS_NOCOMP_FL
 0x00000400

	)

383 
	#FS_ECOMPR_FL
 0x00000800

	)

385 
	#FS_BTREE_FL
 0x00001000

	)

386 
	#FS_INDEX_FL
 0x00001000

	)

387 
	#FS_IMAGIC_FL
 0x00002000

	)

388 
	#FS_JOURNAL_DATA_FL
 0x00004000

	)

389 
	#FS_NOTAIL_FL
 0x00008000

	)

390 
	#FS_DIRSYNC_FL
 0x00010000

	)

391 
	#FS_TOPDIR_FL
 0x00020000

	)

392 
	#FS_EXTENT_FL
 0x00080000

	)

393 
	#FS_DIRECTIO_FL
 0x00100000

	)

394 
	#FS_NOCOW_FL
 0x00800000

	)

395 
	#FS_RESERVED_FL
 0x80000000

	)

397 
	#FS_FL_USER_VISIBLE
 0x0003DFFF

	)

398 
	#FS_FL_USER_MODIFIABLE
 0x000380FF

	)

401 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

402 
	#SYNC_FILE_RANGE_WRITE
 2

	)

403 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

	@/usr/include/linux/random.h

7 #i‚de‡
_LINUX_RANDOM_H


8 
	#_LINUX_RANDOM_H


	)

10 
	~<löux/ty≥s.h
>

11 
	~<löux/io˘l.h
>

12 
	~<löux/úqƒ.h
>

17 
	#RNDGETENTCNT
 
	`_IOR
–'R', 0x00, )

	)

20 
	#RNDADDTOENTCNT
 
	`_IOW
–'R', 0x01, )

	)

23 
	#RNDGETPOOL
 
	`_IOR
–'R', 0x02, [2] )

	)

29 
	#RNDADDENTROPY
 
	`_IOW
–'R', 0x03, [2] )

	)

32 
	#RNDZAPENTCNT
 
	`_IO
–'R', 0x04 )

	)

35 
	#RNDCLEARPOOL
 
	`_IO
–'R', 0x06 )

	)

37 
	sønd_poﬁ_öfo
 {

38 
	míå›y_cou¡
;

39 
	mbuf_size
;

40 
__u32
 
	mbuf
[0];

43 
	s∫d_°©e
 {

44 
__u32
 
	ms1
, 
	ms2
, 
	ms3
;

	@/usr/include/linux/string.h

1 #i‚de‡
_LINUX_STRING_H_


2 
	#_LINUX_STRING_H_


	)

6 
	~<°rög.h
>

	@/usr/include/linux/time.h

1 #i‚de‡
_LINUX_TIME_H


2 
	#_LINUX_TIME_H


	)

4 
	~<löux/ty≥s.h
>

7 #i‚de‡
_STRUCT_TIMESPEC


8 
	#_STRUCT_TIMESPEC


	)

9 
	stime•ec
 {

10 
__kî√l_time_t
 
	mtv_£c
;

11 
	mtv_n£c
;

15 
	stimevÆ
 {

16 
__kî√l_time_t
 
	mtv_£c
;

17 
__kî√l_su£c⁄ds_t
 
	mtv_u£c
;

20 
	stimez⁄e
 {

21 
	mtz_möuãswe°
;

22 
	mtz_d°time
;

26 
	#NFDBITS
 
__NFDBITS


	)

28 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

29 
	#FD_SET
(
fd
,
fd£ç
Ë
	`__FD_SET
(fd,fd£ç)

	)

30 
	#FD_CLR
(
fd
,
fd£ç
Ë
	`__FD_CLR
(fd,fd£ç)

	)

31 
	#FD_ISSET
(
fd
,
fd£ç
Ë
	`__FD_ISSET
(fd,fd£ç)

	)

32 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
(fd£ç)

	)

38 
	#ITIMER_REAL
 0

	)

39 
	#ITIMER_VIRTUAL
 1

	)

40 
	#ITIMER_PROF
 2

	)

42 
	sôimî•ec
 {

43 
time•ec
 
	mô_öãrvÆ
;

44 
time•ec
 
	mô_vÆue
;

47 
	sôimîvÆ
 {

48 
timevÆ
 
	mô_öãrvÆ
;

49 
timevÆ
 
	mô_vÆue
;

55 
	#CLOCK_REALTIME
 0

	)

56 
	#CLOCK_MONOTONIC
 1

	)

57 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

58 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

59 
	#CLOCK_MONOTONIC_RAW
 4

	)

60 
	#CLOCK_REALTIME_COARSE
 5

	)

61 
	#CLOCK_MONOTONIC_COARSE
 6

	)

66 
	#CLOCK_SGI_CYCLE
 10

	)

67 
	#MAX_CLOCKS
 16

	)

68 
	#CLOCKS_MASK
 (
CLOCK_REALTIME
 | 
CLOCK_MONOTONIC
)

	)

69 
	#CLOCKS_MONO
 
CLOCK_MONOTONIC


	)

74 
	#TIMER_ABSTIME
 0x01

	)

	@/usr/include/linux/types.h

1 #i‚de‡
_LINUX_TYPES_H


2 
	#_LINUX_TYPES_H


	)

4 
	~<asm/ty≥s.h
>

6 #i‚de‡
__ASSEMBLY__


8 
	~<löux/posix_ty≥s.h
>

16 #ifde‡
__CHECKER__


17 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

19 
	#__bôwi£__


	)

21 #ifde‡
__CHECK_ENDIAN__


22 
	#__bôwi£
 
__bôwi£__


	)

24 
	#__bôwi£


	)

27 
__u16
 
	t__bôwi£
 
	t__À16
;

28 
__u16
 
	t__bôwi£
 
	t__be16
;

29 
__u32
 
	t__bôwi£
 
	t__À32
;

30 
__u32
 
	t__bôwi£
 
	t__be32
;

31 
__u64
 
	t__bôwi£
 
	t__À64
;

32 
__u64
 
	t__bôwi£
 
	t__be64
;

34 
__u16
 
	t__bôwi£
 
	t__sum16
;

35 
__u32
 
	t__bôwi£
 
	t__wsum
;

38 
	#__Æig√d_u64
 
__u64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

39 
	#__Æig√d_be64
 
__be64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

40 
	#__Æig√d_À64
 
__À64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

	@/usr/include/asm/types.h

1 #i‚de‡
_ASM_X86_TYPES_H


2 
	#_ASM_X86_TYPES_H


	)

4 
	~<asm-gíîic/ty≥s.h
>

	@/usr/include/linux/blk_types.h

5 #i‚de‡
__LINUX_BLK_TYPES_H


6 
	#__LINUX_BLK_TYPES_H


	)

8 #ifde‡
CONFIG_BLOCK


10 
	~<löux/ty≥s.h
>

15 
	#BIO_UPTODATE
 0

	)

16 
	#BIO_RW_BLOCK
 1

	)

17 
	#BIO_EOF
 2

	)

18 
	#BIO_SEG_VALID
 3

	)

19 
	#BIO_CLONED
 4

	)

20 
	#BIO_BOUNCED
 5

	)

21 
	#BIO_USER_MAPPED
 6

	)

22 
	#BIO_EOPNOTSUPP
 7

	)

23 
	#BIO_CPU_AFFINE
 8

	)

24 
	#BIO_NULL_MAPPED
 9

	)

25 
	#BIO_FS_INTEGRITY
 10

	)

26 
	#BIO_QUIET
 11

	)

27 
	#BIO_MAPPED_INTEGRITY
 12

	)

28 
	#bio_Êagged
(
bio
, 
Êag
Ë((bio)->
bi_Êags
 & (1 << (Êag)))

	)

33 
	#BIO_POOL_BITS
 (4)

	)

34 
	#BIO_POOL_NONE
 ((1UL << 
BIO_POOL_BITS
Ë- 1)

	)

35 
	#BIO_POOL_OFFSET
 (
BITS_PER_LONG
 - 
BIO_POOL_BITS
)

	)

36 
	#BIO_POOL_MASK
 (1UL << 
BIO_POOL_OFFSET
)

	)

37 
	#BIO_POOL_IDX
(
bio
Ë((bio)->
bi_Êags
 >> 
BIO_POOL_OFFSET
)

	)

68 
	ebio_rw_Êags
 {

69 
	mBIO_RW
,

70 
	mBIO_RW_FAILFAST_DEV
,

71 
	mBIO_RW_FAILFAST_TRANSPORT
,

72 
	mBIO_RW_FAILFAST_DRIVER
,

74 
	mBIO_RW_AHEAD
,

75 
	mBIO_RW_BARRIER
,

76 
	mBIO_RW_SYNCIO
,

77 
	mBIO_RW_UNPLUG
,

78 
	mBIO_RW_META
,

79 
	mBIO_RW_DISCARD
,

80 
	mBIO_RW_NOIDLE
,

85 
	mBIO_RW_FLUSH
,

86 
	mBIO_RW_FUA
,

91 
	mBIO_RW_THROTTLED
,

94 
	#BIO_FLUSH
 (1 << 
BIO_RW_FLUSH
)

	)

95 
	#BIO_FUA
 (1 << 
BIO_RW_FUA
)

	)

96 
	#BIO_DISCARD
 (1 << 
BIO_RW_DISCARD
)

	)

99 
	#BIO_NOMERGE_FLAGS
 \

100 ((1 << 
BIO_RW_BARRIER
Ë| 
BIO_FLUSH
 | 
BIO_FUA
)

	)

105 
	erq_Êag_bôs
 {

106 
	m__REQ_WRITE
,

107 
	m__REQ_FAILFAST_DEV
,

108 
	m__REQ_FAILFAST_TRANSPORT
,

109 
	m__REQ_FAILFAST_DRIVER
,

111 
	m__REQ_DISCARD
,

112 
	m__REQ_SORTED
,

113 
	m__REQ_SOFTBARRIER
,

114 
	m__REQ_HARDBARRIER
,

115 
	m__REQ_FUA
,

116 
	m__REQ_NOMERGE
,

117 
	m__REQ_STARTED
,

118 
	m__REQ_DONTPREP
,

119 
	m__REQ_QUEUED
,

120 
	m__REQ_ELVPRIV
,

121 
	m__REQ_FAILED
,

122 
	m__REQ_QUIET
,

123 
	m__REQ_PREEMPT
,

124 
	m__REQ_ORDERED_COLOR
,

125 
	m__REQ_SYNC
,

126 
	m__REQ_ALLOCED
,

127 
	m__REQ_META
,

128 
	m__REQ_COPY_USER
,

129 
	m__REQ_INTEGRITY
,

130 
	m__REQ_NOIDLE
,

131 
	m__REQ_IO_STAT
,

132 
	m__REQ_MIXED_MERGE
,

133 
	m__REQ_FLUSH
,

134 
	m__REQ_FLUSH_SEQ
,

135 
	m__REQ_NR_BITS
,

138 
	#REQ_WRITE
 (1 << 
__REQ_WRITE
)

	)

139 
	#REQ_RW
 
REQ_WRITE


	)

141 
	#REQ_FAILFAST_DEV
 (1 << 
__REQ_FAILFAST_DEV
)

	)

142 
	#REQ_FAILFAST_TRANSPORT
 (1 << 
__REQ_FAILFAST_TRANSPORT
)

	)

143 
	#REQ_FAILFAST_DRIVER
 (1 << 
__REQ_FAILFAST_DRIVER
)

	)

144 
	#REQ_HARDBARRIER
 (1 << 
__REQ_HARDBARRIER
)

	)

146 
	#REQ_SYNC
 (1 << 
__REQ_SYNC
)

	)

147 
	#REQ_RW_SYNC
 
REQ_SYNC


	)

149 
	#REQ_META
 (1 << 
__REQ_META
)

	)

150 
	#REQ_RW_META
 
REQ_META


	)

152 
	#REQ_DISCARD
 (1 << 
__REQ_DISCARD
)

	)

153 
	#REQ_NOIDLE
 (1 << 
__REQ_NOIDLE
)

	)

155 
	#REQ_FAILFAST_MASK
 \

156 (
REQ_FAILFAST_DEV
 | 
REQ_FAILFAST_TRANSPORT
 | 
REQ_FAILFAST_DRIVER
)

	)

157 
	#REQ_COMMON_MASK
 \

158 (
REQ_WRITE
 | 
REQ_FAILFAST_MASK
 | 
REQ_HARDBARRIER
 | 
REQ_SYNC
 | \

159 
REQ_META
 | 
REQ_DISCARD
 | 
REQ_NOIDLE
 | 
REQ_FLUSH
 | 
REQ_FUA
)

	)

160 
	#REQ_CLONE_MASK
 
REQ_COMMON_MASK


	)

163 
	#REQ_NOMERGE_FLAGS
 \

164 (
REQ_NOMERGE
 | 
REQ_STARTED
 | 
REQ_HARDBARRIER
 | 
REQ_SOFTBARRIER
 | 
REQ_FLUSH
 | 
REQ_FUA
)

	)

166 
	#REQ_SORTED
 (1 << 
__REQ_SORTED
)

	)

167 
	#REQ_SOFTBARRIER
 (1 << 
__REQ_SOFTBARRIER
)

	)

168 
	#REQ_FUA
 (1 << 
__REQ_FUA
)

	)

169 
	#REQ_NOMERGE
 (1 << 
__REQ_NOMERGE
)

	)

170 
	#REQ_STARTED
 (1 << 
__REQ_STARTED
)

	)

171 
	#REQ_DONTPREP
 (1 << 
__REQ_DONTPREP
)

	)

172 
	#REQ_QUEUED
 (1 << 
__REQ_QUEUED
)

	)

173 
	#REQ_ELVPRIV
 (1 << 
__REQ_ELVPRIV
)

	)

174 
	#REQ_FAILED
 (1 << 
__REQ_FAILED
)

	)

175 
	#REQ_QUIET
 (1 << 
__REQ_QUIET
)

	)

176 
	#REQ_PREEMPT
 (1 << 
__REQ_PREEMPT
)

	)

177 
	#REQ_ORDERED_COLOR
 (1 << 
__REQ_ORDERED_COLOR
Ë

	)

178 
	#REQ_ALLOCED
 (1 << 
__REQ_ALLOCED
)

	)

179 
	#REQ_COPY_USER
 (1 << 
__REQ_COPY_USER
)

	)

180 
	#REQ_INTEGRITY
 (1 << 
__REQ_INTEGRITY
)

	)

181 
	#REQ_FLUSH
 (1 << 
__REQ_FLUSH
)

	)

182 
	#REQ_FLUSH_SEQ
 (1 << 
__REQ_FLUSH_SEQ
)

	)

183 
	#REQ_IO_STAT
 (1 << 
__REQ_IO_STAT
)

	)

184 
	#REQ_MIXED_MERGE
 (1 << 
__REQ_MIXED_MERGE
)

	)

186 
	#REQ_WRITE_FLUSH
 (
REQ_WRITE
 | 
REQ_SYNC
 | 
REQ_NOIDLE
 | 
REQ_FLUSH
)

	)

	@/usr/include/linux/ioctl.h

1 #i‚de‡
_LINUX_IOCTL_H


2 
	#_LINUX_IOCTL_H


	)

4 
	~<asm/io˘l.h
>

	@/usr/include/linux/irqnr.h

1 #i‚de‡
_LINUX_IRQNR_H


2 
	#_LINUX_IRQNR_H


	)

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/posix_types.h

1 #i‚de‡
_LINUX_POSIX_TYPES_H


2 
	#_LINUX_POSIX_TYPES_H


	)

4 
	~<löux/°ddef.h
>

21 #unde‡
__NFDBITS


22 
	#__NFDBITS
 (8 * ())

	)

24 #unde‡
__FD_SETSIZE


25 
	#__FD_SETSIZE
 1024

	)

27 #unde‡
__FDSET_LONGS


28 
	#__FDSET_LONGS
 (
__FD_SETSIZE
/
__NFDBITS
)

	)

30 #unde‡
__FDELT


31 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

33 #unde‡
__FDMASK


34 
	#__FDMASK
(
d
Ë(1UL << ((dË% 
__NFDBITS
))

	)

37 
	mfds_bôs
 [
__FDSET_LONGS
];

38 } 
	t__kî√l_fd_£t
;

41 (*
	t__kî√l_sigh™dÀr_t
)();

44 
	t__kî√l_key_t
;

45 
	t__kî√l_mqd_t
;

47 
	~<asm/posix_ty≥s.h
>

	@/usr/include/string.h

24 #i‚def 
_STRING_H


25 
	#_STRING_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 
__BEGIN_NAMESPACE_STD


44 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

45 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

46 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

50 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

51 
__END_NAMESPACE_STD


56 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


57 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

58 
__c
, 
size_t
 
__n
)

59 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

63 
__BEGIN_NAMESPACE_STD


65 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

68 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

72 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


75 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

80 #ifde‡
__OPTIMIZE__


81 
__exã∫_Æways_ölöe
 *

82 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


84  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

87 
__exã∫_Æways_ölöe
 
__c⁄°
 *

88 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


90  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

93 
	}
}

95 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

96 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

98 
__END_NAMESPACE_STD


100 #ifde‡
__USE_GNU


103 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


104 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

105 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

107 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

126 
__BEGIN_NAMESPACE_STD


128 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

131 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

132 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

133 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

139 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

140 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

147 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

153 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

154 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

155 
__THROW
 
	`__n⁄nuŒ
 ((2));

156 
__END_NAMESPACE_STD


158 #ifde‡
__USE_XOPEN2K8


162 
	~<xloˇÀ.h
>

165 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

166 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

168 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

169 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

172 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

173 || 
deföed
 
__USE_XOPEN2K8


175 *
	$°rdup
 (
__c⁄°
 *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 
__c⁄°
 *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 
__c⁄°
 *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 
__c⁄°
 *

228 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 
__c⁄°
 *

255 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 
__c⁄°
 *

307 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

324 
__c⁄°
 *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 
__c⁄°
 *

335 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

370 
__c⁄°
 *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 
__c⁄°
 *

482 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 
__c⁄°
 *

510 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 #ifde‡
__GNUC__


530 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

531 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

536 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

541 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

544 #ifdef 
__USE_GNU


547 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

548 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

551 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

552 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

556 #ifdef 
__USE_BSD


559 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

560 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 #ifdef 
__USE_XOPEN2K8


566 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

569 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

580 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifdef 
__USE_GNU


586 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

587 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

590 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

595 #i‚de‡
ba£«me


600 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


601 "C++" *
	$ba£«me
 (*
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

604 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

606 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

612 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

613 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

614 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


634 
	~<bôs/°rög.h
>

637 
	~<bôs/°rög2.h
>

640 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


642 
	~<bôs/°rög3.h
>

646 
__END_DECLS


	@/usr/include/asm-generic/types.h

1 #i‚de‡
_ASM_GENERIC_TYPES_H


2 
	#_ASM_GENERIC_TYPES_H


	)

7 
	~<asm-gíîic/öt-Œ64.h
>

9 #i‚de‡
__ASSEMBLY__


11 
	tumode_t
;

	@/usr/include/asm/ioctl.h

1 
	~<asm-gíîic/io˘l.h
>

	@/usr/include/asm/posix_types.h

1 #ifde‡
__i386__


2 
	~"posix_ty≥s_32.h
"

4 
	~"posix_ty≥s_64.h
"

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__Àn
))

58  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

59 
	}
}

61 #ifde‡
__USE_GNU


62 
__exã∫_Æways_ölöe
 *

63 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

64 
size_t
 
__Àn
))

66  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

67 
	}
}

76 
__exã∫_Æways_ölöe
 *

77 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

80 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

82 
	`__w¨n_mem£t_zîo_Àn
 ();

83  
__de°
;

85  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

86 
	}
}

88 #ifde‡
__USE_BSD


89 
__exã∫_Æways_ölöe
 

90 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__Àn
))

92 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

93 
	}
}

95 
__exã∫_Æways_ölöe
 

96 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

98 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

99 
	}
}

102 
__exã∫_Æways_ölöe
 *

103 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

105  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

106 
	}
}

108 #ifde‡
__USE_GNU


109 
__exã∫_Æways_ölöe
 *

110 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

112  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

113 
	}
}

117 
__exã∫_Æways_ölöe
 *

118 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

119 
size_t
 
__Àn
))

121  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

122 
	}
}

125 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

126 
size_t
 
__de°Àn
Ë
__THROW
;

127 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

128 
__c⁄°
 *
__§c
,

129 
size_t
 
__n
), 
°≤˝y
);

131 
__exã∫_Æways_ölöe
 *

132 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

134 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

135 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

136  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

137  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

138 
	}
}

141 
__exã∫_Æways_ölöe
 *

142 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

144  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

145 
	}
}

148 
__exã∫_Æways_ölöe
 *

149 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

150 
size_t
 
__Àn
))

152  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

153 
	}
}

	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

96 #unde‡
__USE_ISOC99


97 #unde‡
__USE_ISOC95


98 #unde‡
__USE_POSIX


99 #unde‡
__USE_POSIX2


100 #unde‡
__USE_POSIX199309


101 #unde‡
__USE_POSIX199506


102 #unde‡
__USE_XOPEN


103 #unde‡
__USE_XOPEN_EXTENDED


104 #unde‡
__USE_UNIX98


105 #unde‡
__USE_XOPEN2K


106 #unde‡
__USE_XOPEN2KXSI


107 #unde‡
__USE_XOPEN2K8


108 #unde‡
__USE_XOPEN2K8XSI


109 #unde‡
__USE_LARGEFILE


110 #unde‡
__USE_LARGEFILE64


111 #unde‡
__USE_FILE_OFFSET64


112 #unde‡
__USE_BSD


113 #unde‡
__USE_SVID


114 #unde‡
__USE_MISC


115 #unde‡
__USE_ATFILE


116 #unde‡
__USE_GNU


117 #unde‡
__USE_REENTRANT


118 #unde‡
__USE_FORTIFY_LEVEL


119 #unde‡
__FAVOR_BSD


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

129 
	#__USE_ANSI
 1

	)

138 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


139 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

140 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

142 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

147 #i‡
deföed
 
_BSD_SOURCE
 && \

148 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

149 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

150 
	#__FAVOR_BSD
 1

	)

154 #ifde‡
_GNU_SOURCE


155 #unde‡
_ISOC95_SOURCE


156 
	#_ISOC95_SOURCE
 1

	)

157 #unde‡
_ISOC99_SOURCE


158 
	#_ISOC99_SOURCE
 1

	)

159 #unde‡
_POSIX_SOURCE


160 
	#_POSIX_SOURCE
 1

	)

161 #unde‡
_POSIX_C_SOURCE


162 
	#_POSIX_C_SOURCE
 200809L

	)

163 #unde‡
_XOPEN_SOURCE


164 
	#_XOPEN_SOURCE
 700

	)

165 #unde‡
_XOPEN_SOURCE_EXTENDED


166 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

167 #unde‡
_LARGEFILE64_SOURCE


168 
	#_LARGEFILE64_SOURCE
 1

	)

169 #unde‡
_BSD_SOURCE


170 
	#_BSD_SOURCE
 1

	)

171 #unde‡
_SVID_SOURCE


172 
	#_SVID_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

180 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

181 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

182 
	#_BSD_SOURCE
 1

	)

183 
	#_SVID_SOURCE
 1

	)

190 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

191 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

192 
	#__USE_ISOC99
 1

	)

196 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

197 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

198 
	#__USE_ISOC95
 1

	)

203 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

204 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

205 
	#_POSIX_SOURCE
 1

	)

206 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

207 
	#_POSIX_C_SOURCE
 2

	)

208 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

209 
	#_POSIX_C_SOURCE
 199506L

	)

210 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

211 
	#_POSIX_C_SOURCE
 200112L

	)

213 
	#_POSIX_C_SOURCE
 200809L

	)

215 
	#__USE_POSIX_IMPLICITLY
 1

	)

218 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


219 
	#__USE_POSIX
 1

	)

222 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


223 
	#__USE_POSIX2
 1

	)

226 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

227 
	#__USE_POSIX199309
 1

	)

230 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

231 
	#__USE_POSIX199506
 1

	)

234 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

235 
	#__USE_XOPEN2K
 1

	)

236 #unde‡
__USE_ISOC95


237 
	#__USE_ISOC95
 1

	)

238 #unde‡
__USE_ISOC99


239 
	#__USE_ISOC99
 1

	)

242 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

243 
	#__USE_XOPEN2K8
 1

	)

244 #unde‡
_ATFILE_SOURCE


245 
	#_ATFILE_SOURCE
 1

	)

248 #ifdef 
_XOPEN_SOURCE


249 
	#__USE_XOPEN
 1

	)

250 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

251 
	#__USE_XOPEN_EXTENDED
 1

	)

252 
	#__USE_UNIX98
 1

	)

253 #unde‡
_LARGEFILE_SOURCE


254 
	#_LARGEFILE_SOURCE
 1

	)

255 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

256 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

257 
	#__USE_XOPEN2K8
 1

	)

258 
	#__USE_XOPEN2K8XSI
 1

	)

260 
	#__USE_XOPEN2K
 1

	)

261 
	#__USE_XOPEN2KXSI
 1

	)

262 #unde‡
__USE_ISOC95


263 
	#__USE_ISOC95
 1

	)

264 #unde‡
__USE_ISOC99


265 
	#__USE_ISOC99
 1

	)

268 #ifde‡
_XOPEN_SOURCE_EXTENDED


269 
	#__USE_XOPEN_EXTENDED
 1

	)

274 #ifde‡
_LARGEFILE_SOURCE


275 
	#__USE_LARGEFILE
 1

	)

278 #ifde‡
_LARGEFILE64_SOURCE


279 
	#__USE_LARGEFILE64
 1

	)

282 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

283 
	#__USE_FILE_OFFSET64
 1

	)

286 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


287 
	#__USE_MISC
 1

	)

290 #ifdef 
_BSD_SOURCE


291 
	#__USE_BSD
 1

	)

294 #ifdef 
_SVID_SOURCE


295 
	#__USE_SVID
 1

	)

298 #ifdef 
_ATFILE_SOURCE


299 
	#__USE_ATFILE
 1

	)

302 #ifdef 
_GNU_SOURCE


303 
	#__USE_GNU
 1

	)

306 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


307 
	#__USE_REENTRANT
 1

	)

310 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

311 && 
deföed
 
__OPTIMIZE__
 && __OPTIMIZE__ > 0

312 #i‡!
__GNUC_PREREQ
 (4, 1)

313 #ifde‡
__GNUC_RH_RELEASE__


314 #w¨nög 
_FORTIFY_SOURCE
 
suµ‹ãd
 
⁄ly
 
wôh
 
GCC
 4.1 
™d
 
œãr


316 
	#__USE_FORTIFY_LEVEL
 0

	)

317 #ñi‡
_FORTIFY_SOURCE
 > 1

318 
	#__USE_FORTIFY_LEVEL
 2

	)

320 
	#__USE_FORTIFY_LEVEL
 1

	)

323 
	#__USE_FORTIFY_LEVEL
 0

	)

327 
	#__STDC_IEC_559__
 1

	)

328 
	#__STDC_IEC_559_COMPLEX__
 1

	)

331 
	#__STDC_ISO_10646__
 200009L

	)

339 #unde‡
__GNU_LIBRARY__


340 
	#__GNU_LIBRARY__
 6

	)

344 
	#__GLIBC__
 2

	)

345 
	#__GLIBC_MINOR__
 12

	)

347 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

348 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

351 #i‡
deföed
 
__GNUC__
 \

352 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

353 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

354 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

355 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

359 #i‚de‡
__ASSEMBLER__


360 #i‚de‡
_SYS_CDEFS_H


361 
	~<sys/cdefs.h
>

366 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


367 
	#__USE_LARGEFILE
 1

	)

368 
	#__USE_LARGEFILE64
 1

	)

374 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

375 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

376 && 
deföed
 
	g__exã∫_ölöe


377 
	#__USE_EXTERN_INLINES
 1

	)

385 
	~<gnu/°ubs.h
>

	@/usr/include/linux/stddef.h

1 #i‚de‡
_LINUX_STDDEF_H


2 
	#_LINUX_STDDEF_H


	)

6 #unde‡
NULL


7 #i‡
deföed
(
__˝lu•lus
)

8 
	#NULL
 0

	)

10 
	#NULL
 ((*)0)

	)

	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/asm-generic/int-ll64.h

8 #i‚de‡
_ASM_GENERIC_INT_LL64_H


9 
	#_ASM_GENERIC_INT_LL64_H


	)

11 
	~<asm/bô•îl⁄g.h
>

13 #i‚de‡
__ASSEMBLY__


19 
__sig√d__
 
	t__s8
;

20 
	t__u8
;

22 
__sig√d__
 
	t__s16
;

23 
	t__u16
;

25 
__sig√d__
 
	t__s32
;

26 
	t__u32
;

28 #ifde‡
__GNUC__


29 
__exãnsi⁄__
 
__sig√d__
 
	t__s64
;

30 
__exãnsi⁄__
 
	t__u64
;

32 
__sig√d__
 
	t__s64
;

33 
	t__u64
;

	@/usr/include/asm-generic/ioctl.h

1 #i‚de‡
_ASM_GENERIC_IOCTL_H


2 
	#_ASM_GENERIC_IOCTL_H


	)

22 
	#_IOC_NRBITS
 8

	)

23 
	#_IOC_TYPEBITS
 8

	)

30 #i‚de‡
_IOC_SIZEBITS


31 
	#_IOC_SIZEBITS
 14

	)

34 #i‚de‡
_IOC_DIRBITS


35 
	#_IOC_DIRBITS
 2

	)

38 
	#_IOC_NRMASK
 ((1 << 
_IOC_NRBITS
)-1)

	)

39 
	#_IOC_TYPEMASK
 ((1 << 
_IOC_TYPEBITS
)-1)

	)

40 
	#_IOC_SIZEMASK
 ((1 << 
_IOC_SIZEBITS
)-1)

	)

41 
	#_IOC_DIRMASK
 ((1 << 
_IOC_DIRBITS
)-1)

	)

43 
	#_IOC_NRSHIFT
 0

	)

44 
	#_IOC_TYPESHIFT
 (
_IOC_NRSHIFT
+
_IOC_NRBITS
)

	)

45 
	#_IOC_SIZESHIFT
 (
_IOC_TYPESHIFT
+
_IOC_TYPEBITS
)

	)

46 
	#_IOC_DIRSHIFT
 (
_IOC_SIZESHIFT
+
_IOC_SIZEBITS
)

	)

53 #i‚de‡
_IOC_NONE


54 
	#_IOC_NONE
 0U

	)

57 #i‚de‡
_IOC_WRITE


58 
	#_IOC_WRITE
 1U

	)

61 #i‚de‡
_IOC_READ


62 
	#_IOC_READ
 2U

	)

65 
	#_IOC
(
dú
,
ty≥
,
ƒ
,
size
) \

66 (((
dú
Ë<< 
_IOC_DIRSHIFT
) | \

67 ((
ty≥
Ë<< 
_IOC_TYPESHIFT
) | \

68 ((
ƒ
Ë<< 
_IOC_NRSHIFT
) | \

69 ((
size
Ë<< 
_IOC_SIZESHIFT
))

	)

71 
	#_IOC_TYPECHECK
(
t
Ë(—))

	)

74 
	#_IO
(
ty≥
,
ƒ
Ë
	`_IOC
(
_IOC_NONE
,—y≥),“r),0)

	)

75 
	#_IOR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

76 
	#_IOW
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

77 
	#_IOWR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

78 
	#_IOR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(size))

	)

79 
	#_IOW_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(size))

	)

80 
	#_IOWR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(size))

	)

83 
	#_IOC_DIR
(
ƒ
Ë((“rË>> 
_IOC_DIRSHIFT
Ë& 
_IOC_DIRMASK
)

	)

84 
	#_IOC_TYPE
(
ƒ
Ë((“rË>> 
_IOC_TYPESHIFT
Ë& 
_IOC_TYPEMASK
)

	)

85 
	#_IOC_NR
(
ƒ
Ë((“rË>> 
_IOC_NRSHIFT
Ë& 
_IOC_NRMASK
)

	)

86 
	#_IOC_SIZE
(
ƒ
Ë((“rË>> 
_IOC_SIZESHIFT
Ë& 
_IOC_SIZEMASK
)

	)

90 
	#IOC_IN
 (
_IOC_WRITE
 << 
_IOC_DIRSHIFT
)

	)

91 
	#IOC_OUT
 (
_IOC_READ
 << 
_IOC_DIRSHIFT
)

	)

92 
	#IOC_INOUT
 ((
_IOC_WRITE
|
_IOC_READ
Ë<< 
_IOC_DIRSHIFT
)

	)

93 
	#IOCSIZE_MASK
 (
_IOC_SIZEMASK
 << 
_IOC_SIZESHIFT
)

	)

94 
	#IOCSIZE_SHIFT
 (
_IOC_SIZESHIFT
)

	)

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

501 || 
deföed
 
__USE_BSD


503 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

506 #ifde‡
__USE_XOPEN2K


508 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #ifde‡
__USE_GNU


524 #ifde‡
__˝lu•lus


525 "C++" 
	`©_quick_exô
 ((*
__func
) ())

526 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

528 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
__END_NAMESPACE_STD


533 #ifdef 
__USE_MISC


536 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

537 
__THROW
 
	`__n⁄nuŒ
 ((1));

540 
__BEGIN_NAMESPACE_STD


544 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

546 #ifde‡
__USE_GNU


552 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
__END_NAMESPACE_STD


556 #ifde‡
__USE_ISOC99


557 
__BEGIN_NAMESPACE_C99


560 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

561 
__END_NAMESPACE_C99


565 
__BEGIN_NAMESPACE_STD


567 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

568 
__END_NAMESPACE_STD


572 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

573 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

575 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


579 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


585 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

586 
__THROW
 
	`__n⁄nuŒ
 ((2));

589 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #ifdef 
__USE_MISC


596 
	$˛óªnv
 (Ë
__THROW
;

600 #i‡
deföed
 
__USE_MISC
 \

601 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

761 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

762 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

763 #ifde‡
__USE_GNU


764 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

766 
	`__n⁄nuŒ
 ((1, 4));

771 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

773 
__END_NAMESPACE_STD


775 #ifde‡
__USE_ISOC99


776 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

777 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

781 
__BEGIN_NAMESPACE_STD


785 
div_t
 
	$div
 (
__numî
, 
__díom
)

786 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

788 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

789 
__END_NAMESPACE_STD


791 #ifde‡
__USE_ISOC99


792 
__BEGIN_NAMESPACE_C99


793 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

794 
__díom
)

795 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__END_NAMESPACE_C99


800 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

801 || 
deföed
 
__USE_SVID


808 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

815 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

820 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

821 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

824 #ifde‡
__USE_MISC


826 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

827 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

828 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

829 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

833 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

839 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

840 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

841 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

846 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

847 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

848 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

857 
__BEGIN_NAMESPACE_STD


860 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

863 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

864 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

867 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

871 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

872 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

874 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

875 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

876 
__THROW
;

877 
__END_NAMESPACE_STD


880 #ifde‡
__USE_SVID


885 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


896 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

897 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

898 **
__ª°ri˘
 
__vÆuï
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

903 #ifde‡
__USE_XOPEN


905 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

911 #ifde‡
__USE_XOPEN2KXSI


913 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

916 #ifde‡
__USE_XOPEN


921 
	$gø¡±
 (
__fd
Ë
__THROW
;

925 
	$u∆ock±
 (
__fd
Ë
__THROW
;

930 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

933 #ifde‡
__USE_GNU


937 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

938 
__THROW
 
	`__n⁄nuŒ
 ((2));

941 
	`gë±
 ();

944 #ifde‡
__USE_BSD


948 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3) \

136 || (
deföed
 
	g__GNUC_RH_RELEASE__
 && 
	g__GNUC__
 == 4 \

137 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

138 && 
__GNUC_RH_RELEASE__
 >= 31)

139 
	#__w¨nde˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

141 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

142 
	#__îr‹de˛
(
«me
, 
msg
) \

143 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

145 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

146 
	#__w¨«âr
(
msg
)

	)

147 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

151 #i‡
__GNUC_PREREQ
 (2,97)

153 
	#__Êex¨r
 []

	)

155 #ifde‡
__GNUC__


156 
	#__Êex¨r
 [0]

	)

158 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

159 
	#__Êex¨r
 []

	)

162 
	#__Êex¨r
 [1]

	)

178 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

180 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

181 #ifde‡
__˝lu•lus


182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

185 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

186 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

188 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

189 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

202 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

203 
	#__©åibuã__
(
xyz
Ë

	)

209 #i‡
__GNUC_PREREQ
 (2,96)

210 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

212 
	#__©åibuã_mÆloc__


	)

218 #i‡
__GNUC_PREREQ
 (2,96)

219 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

221 
	#__©åibuã_puª__


	)

227 #i‡
__GNUC_PREREQ
 (3,1)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

229 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

231 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

232 
	#__©åibuã_noölöe__


	)

236 #i‡
__GNUC_PREREQ
 (3,2)

237 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

239 
	#__©åibuã_dïªˇãd__


	)

248 #i‡
__GNUC_PREREQ
 (2,8)

249 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

251 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

258 #i‡
__GNUC_PREREQ
 (2,97)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

260 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

262 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

267 #i‡
__GNUC_PREREQ
 (3,3)

268 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

270 
	#__n⁄nuŒ
(
∑øms
)

	)

275 #i‡
__GNUC_PREREQ
 (3,4)

276 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

277 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

278 #i‡
__USE_FORTIFY_LEVEL
 > 0

279 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

282 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

284 #i‚de‡
__wur


285 
	#__wur


	)

289 #i‡
__GNUC_PREREQ
 (3,2)

290 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

292 
	#__Æways_ölöe
 
__ölöe


	)

297 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3) \

298 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

299 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

300 && 
__GNUC_RH_RELEASE__
 >= 31)

301 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


302 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

303 #i‡
__GNUC_PREREQ
 (4,3) \

304 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

305 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

306 && 
__GNUC_RH_RELEASE__
 >= 31)

307 
	#__exã∫_Æways_ölöe
 \

308 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

310 
	#__exã∫_Æways_ölöe
 \

311 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

314 
	#__exã∫_ölöe
 
__ölöe


	)

315 #i‡
__GNUC_PREREQ
 (4,3)

316 
	#__exã∫_Æways_ölöe
 \

317 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

319 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

326 #i‡
__GNUC_PREREQ
 (4,3) \

327 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

328 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

329 && 
__GNUC_RH_RELEASE__
 >= 31)

330 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

331 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

338 #i‡!
__GNUC_PREREQ
 (2,8)

339 
	#__exãnsi⁄__


	)

343 #i‡!
__GNUC_PREREQ
 (2,92)

344 
	#__ª°ri˘


	)

350 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


351 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

353 #ifde‡
__GNUC__


354 
	#__ª°ri˘_¨r


	)

356 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

357 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

360 
	#__ª°ri˘_¨r


	)

365 
	~<bôs/w‹dsize.h
>

367 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


368 
	#__LDBL_COMPAT
 1

	)

369 #ifde‡
__REDIRECT


370 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

371 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

372 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

373 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

374 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

375 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

376 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

377 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

378 
	#__LDBL_REDIR_DECL
(
«me
) \

379 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

380 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

381 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

382 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

383 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

386 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


387 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

388 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

389 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

390 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

391 
	#__LDBL_REDIR_DECL
(
«me
)

	)

392 #ifde‡
__REDIRECT


393 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

394 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

395 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/asm/bitsperlong.h

1 #i‚de‡
__ASM_X86_BITSPERLONG_H


2 
	#__ASM_X86_BITSPERLONG_H


	)

4 #ifde‡
__x86_64__


5 
	#__BITS_PER_LONG
 64

	)

7 
	#__BITS_PER_LONG
 32

	)

10 
	~<asm-gíîic/bô•îl⁄g.h
>

	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (Ë(
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (Ë(
x
); \

51 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

56 
	#__bsw≠_c⁄°™t_32
(
x
) \

57 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

58 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

60 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

61 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

62 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

63 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

64 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

65 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

66 || 
deföed
 
	g__amdÁm10__
)

69 
	#__bsw≠_32
(
x
) \

70 (
__exãnsi⁄__
 \

71 ({ 
__v
, 
__x
 = (
x
); \

72 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

73 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

75 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

76 
__v
; }))

	)

78 
	#__bsw≠_32
(
x
) \

79 (
__exãnsi⁄__
 \

80 ({ 
__v
, 
__x
 = (
x
); \

81 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

82 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

84 
	`__asm__
 ("rorw $8, %w0;" \

87 : "Ù" (
__v
) \

88 : "0" (
__x
) \

90 
__v
; }))

	)

93 
	#__bsw≠_32
(
x
) \

94 (
__exãnsi⁄__
 \

95 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

99 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

101 
	#__bsw≠_c⁄°™t_64
(
x
) \

102 ((((
x
) & 0xff00000000000000ull) >> 56) \

103 | (((
x
) & 0x00ff000000000000ull) >> 40) \

104 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

105 | (((
x
) & 0x000000ff00000000ull) >> 8) \

106 | (((
x
) & 0x00000000ff000000ull) << 8) \

107 | (((
x
) & 0x0000000000ff0000ull) << 24) \

108 | (((
x
) & 0x000000000000ff00ull) << 40) \

109 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

111 #i‡
__WORDSIZE
 == 64

112 
	#__bsw≠_64
(
x
) \

113 (
__exãnsi⁄__
 \

114 ({ 
__v
, 
__x
 = (
x
); \

115 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

116 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

118 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

119 
__v
; }))

	)

121 
	#__bsw≠_64
(
x
) \

122 (
__exãnsi⁄__
 \

123 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

124 
__l
[2]; } 
__w
, 
__r
; \

125 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

126 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

129 
__w
.
__Œ
 = (
x
); \

130 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

131 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

133 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/sys/types.h

23 #i‚def 
_SYS_TYPES_H


24 
	#_SYS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifdef 
__USE_BSD


33 #i‚de‡
__u_ch¨_deföed


34 
__u_ch¨
 
	tu_ch¨
;

35 
__u_sh‹t
 
	tu_sh‹t
;

36 
__u_öt
 
	tu_öt
;

37 
__u_l⁄g
 
	tu_l⁄g
;

38 
__quad_t
 
	tquad_t
;

39 
__u_quad_t
 
	tu_quad_t
;

40 
__fsid_t
 
	tfsid_t
;

41 
	#__u_ch¨_deföed


	)

45 
__loff_t
 
	tloff_t
;

47 #i‚de‡
__öo_t_deföed


48 #i‚de‡
__USE_FILE_OFFSET64


49 
__öo_t
 
	töo_t
;

51 
__öo64_t
 
	töo_t
;

53 
	#__öo_t_deföed


	)

55 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


56 
__öo64_t
 
	töo64_t
;

57 
	#__öo64_t_deföed


	)

60 #i‚de‡
__dev_t_deföed


61 
__dev_t
 
	tdev_t
;

62 
	#__dev_t_deföed


	)

65 #i‚de‡
__gid_t_deföed


66 
__gid_t
 
	tgid_t
;

67 
	#__gid_t_deföed


	)

70 #i‚de‡
__mode_t_deföed


71 
__mode_t
 
	tmode_t
;

72 
	#__mode_t_deföed


	)

75 #i‚de‡
__∆ök_t_deföed


76 
__∆ök_t
 
	t∆ök_t
;

77 
	#__∆ök_t_deföed


	)

80 #i‚de‡
__uid_t_deföed


81 
__uid_t
 
	tuid_t
;

82 
	#__uid_t_deföed


	)

85 #i‚de‡
__off_t_deföed


86 #i‚de‡
__USE_FILE_OFFSET64


87 
__off_t
 
	toff_t
;

89 
__off64_t
 
	toff_t
;

91 
	#__off_t_deföed


	)

93 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


94 
__off64_t
 
	toff64_t
;

95 
	#__off64_t_deföed


	)

98 #i‚de‡
__pid_t_deföed


99 
__pid_t
 
	tpid_t
;

100 
	#__pid_t_deföed


	)

103 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

104 && !
deföed
 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

228 && !
deföed
 
__blksize_t_deföed


229 
__blksize_t
 
	tblksize_t
;

230 
	#__blksize_t_deföed


	)

234 #i‚de‡
__USE_FILE_OFFSET64


235 #i‚de‡
__blk˙t_t_deföed


236 
__blk˙t_t
 
	tblk˙t_t
;

237 
	#__blk˙t_t_deföed


	)

239 #i‚de‡
__fsblk˙t_t_deföed


240 
__fsblk˙t_t
 
	tfsblk˙t_t
;

241 
	#__fsblk˙t_t_deföed


	)

243 #i‚de‡
__fsfû˙t_t_deföed


244 
__fsfû˙t_t
 
	tfsfû˙t_t
;

245 
	#__fsfû˙t_t_deföed


	)

248 #i‚de‡
__blk˙t_t_deföed


249 
__blk˙t64_t
 
	tblk˙t_t
;

250 
	#__blk˙t_t_deföed


	)

252 #i‚de‡
__fsblk˙t_t_deföed


253 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

254 
	#__fsblk˙t_t_deföed


	)

256 #i‚de‡
__fsfû˙t_t_deföed


257 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

258 
	#__fsfû˙t_t_deföed


	)

262 #ifde‡
__USE_LARGEFILE64


263 
__blk˙t64_t
 
	tblk˙t64_t
;

264 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

265 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

270 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


271 
	~<bôs/±hªadty≥s.h
>

274 
	g__END_DECLS


	@/usr/include/asm-generic/bitsperlong.h

1 #i‚de‡
__ASM_GENERIC_BITS_PER_LONG


2 
	#__ASM_GENERIC_BITS_PER_LONG


	)

11 #i‚de‡
__BITS_PER_LONG


12 
	#__BITS_PER_LONG
 32

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__exãnsi⁄__


31 
	$gnu_dev_maj‹
 (
__dev
)

32 
__THROW
;

33 
__exãnsi⁄__


34 
	$gnu_dev_mö‹
 (
__dev
)

35 
__THROW
;

36 
__exãnsi⁄__


37 
	$gnu_dev_makedev
 (
__maj‹
,

38 
__mö‹
)

39 
__THROW
;

41 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


42 
__exãnsi⁄__
 
__exã∫_ölöe
 

43 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

45  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

46 
	}
}

48 
__exãnsi⁄__
 
__exã∫_ölöe
 

49 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

51  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

52 
	}
}

54 
__exãnsi⁄__
 
__exã∫_ölöe
 

55 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

57  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

58 | (((Ë(
__mö‹
 & ~0xff)) << 12)

59 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

60 
	}
}

65 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

66 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

67 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


23 
	~<bôs/w‹dsize.h
>

26 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

28 #i‡
__WORDSIZE
 == 64

29 
	#__FD_ZERO_STOS
 "°osq"

	)

31 
	#__FD_ZERO_STOS
 "°o¶"

	)

34 
	#__FD_ZERO
(
fd•
) \

36 
__d0
, 
__d1
; \

37 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

38 : "=c" (
__d0
), "=D" (
__d1
) \

39 : "a" (0), "0" ( (
fd_£t
) \

40 /  (
__fd_mask
)), \

41 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

43 } 0)

	)

49 
	#__FD_ZERO
(
£t
) \

51 
__i
; \

52 
fd_£t
 *
__¨r
 = (
£t
); \

53 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

54 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

55 } 0)

	)

59 
	#__FD_SET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] |
	`__FDMASK
 (d))

	)

60 
	#__FD_CLR
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] &~
	`__FDMASK
 (d))

	)

61 
	#__FD_ISSET
(
d
, 
£t
) \

62 ((
	`__FDS_BITS
 (
£t
)[
	`__FDELT
 (
d
)] & 
	`__FDMASK
 (d)Ë!0)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

54 
	#CLOCK_MONOTONIC_RAW
 4

	)

56 
	#CLOCK_REALTIME_COARSE
 5

	)

58 
	#CLOCK_MONOTONIC_COARSE
 6

	)

61 
	#TIMER_ABSTIME
 1

	)

67 #ifde‡
__√ed_timevÆ


68 #unde‡
__√ed_timevÆ


69 #i‚de‡
_STRUCT_TIMEVAL


70 
	#_STRUCT_TIMEVAL
 1

	)

71 
	~<bôs/ty≥s.h
>

75 
	stimevÆ


77 
__time_t
 
	mtv_£c
;

78 
__su£c⁄ds_t
 
	mtv_u£c
;

	@
1
.
1
/usr/include
57
1399
common.h
dir.c
exofs.h
file.c
inode.c
namei.c
osd.c
super.c
symlink.c
/usr/include/linux/fs.h
/usr/include/linux/random.h
/usr/include/linux/string.h
/usr/include/linux/time.h
/usr/include/linux/types.h
/usr/include/asm/types.h
/usr/include/linux/blk_types.h
/usr/include/linux/ioctl.h
/usr/include/linux/irqnr.h
/usr/include/linux/limits.h
/usr/include/linux/posix_types.h
/usr/include/string.h
/usr/include/asm-generic/types.h
/usr/include/asm/ioctl.h
/usr/include/asm/posix_types.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/features.h
/usr/include/linux/stddef.h
/usr/include/xlocale.h
/usr/include/asm-generic/int-ll64.h
/usr/include/asm-generic/ioctl.h
/usr/include/bits/types.h
/usr/include/endian.h
/usr/include/gnu/stubs.h
/usr/include/stdlib.h
/usr/include/sys/cdefs.h
/usr/include/alloca.h
/usr/include/asm/bitsperlong.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/typesizes.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wordsize.h
/usr/include/gnu/stubs-64.h
/usr/include/sys/types.h
/usr/include/asm-generic/bitsperlong.h
/usr/include/bits/pthreadtypes.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/time.h
/usr/include/bits/select.h
/usr/include/bits/sigset.h
/usr/include/bits/time.h
